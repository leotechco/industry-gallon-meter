ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RS232.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RS232_Init,"ax",%progbits
  20              		.align	2
  21              		.global	RS232_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	RS232_Init, %function
  25              	RS232_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\RS232.c"
   1:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RS232.c **** * File Name: RS232.c
   3:Generated_Source\PSoC5/RS232.c **** * Version 2.50
   4:Generated_Source\PSoC5/RS232.c **** *
   5:Generated_Source\PSoC5/RS232.c **** * Description:
   6:Generated_Source\PSoC5/RS232.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/RS232.c **** *
   8:Generated_Source\PSoC5/RS232.c **** * Note:
   9:Generated_Source\PSoC5/RS232.c **** *
  10:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
  11:Generated_Source\PSoC5/RS232.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/RS232.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/RS232.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/RS232.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/RS232.c **** 
  17:Generated_Source\PSoC5/RS232.c **** #include "RS232.h"
  18:Generated_Source\PSoC5/RS232.c **** #if (RS232_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/RS232.c ****     #include "RS232_IntClock.h"
  20:Generated_Source\PSoC5/RS232.c **** #endif /* End RS232_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/RS232.c **** 
  22:Generated_Source\PSoC5/RS232.c **** 
  23:Generated_Source\PSoC5/RS232.c **** /***************************************
  24:Generated_Source\PSoC5/RS232.c **** * Global data allocation
  25:Generated_Source\PSoC5/RS232.c **** ***************************************/
  26:Generated_Source\PSoC5/RS232.c **** 
  27:Generated_Source\PSoC5/RS232.c **** uint8 RS232_initVar = 0u;
  28:Generated_Source\PSoC5/RS232.c **** 
  29:Generated_Source\PSoC5/RS232.c **** #if (RS232_TX_INTERRUPT_ENABLED && RS232_TX_ENABLED)
  30:Generated_Source\PSoC5/RS232.c ****     volatile uint8 RS232_txBuffer[RS232_TX_BUFFER_SIZE];
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 2


  31:Generated_Source\PSoC5/RS232.c ****     volatile uint8 RS232_txBufferRead = 0u;
  32:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/RS232.c **** #endif /* (RS232_TX_INTERRUPT_ENABLED && RS232_TX_ENABLED) */
  34:Generated_Source\PSoC5/RS232.c **** 
  35:Generated_Source\PSoC5/RS232.c **** #if (RS232_RX_INTERRUPT_ENABLED && (RS232_RX_ENABLED || RS232_HD_ENABLED))
  36:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_errorStatus = 0u;
  37:Generated_Source\PSoC5/RS232.c ****     volatile uint8 RS232_rxBuffer[RS232_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/RS232.c ****     volatile uint16 RS232_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/RS232.c ****     volatile uint16 RS232_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/RS232.c ****     volatile uint8 RS232_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/RS232.c ****     volatile uint8 RS232_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/RS232.c ****         volatile uint8 RS232_rxAddressMode = RS232_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/RS232.c ****         volatile uint8 RS232_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/RS232.c **** #endif /* (RS232_RX_INTERRUPT_ENABLED && (RS232_RX_ENABLED || RS232_HD_ENABLED)) */
  47:Generated_Source\PSoC5/RS232.c **** 
  48:Generated_Source\PSoC5/RS232.c **** 
  49:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_Start
  51:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
  52:Generated_Source\PSoC5/RS232.c **** *
  53:Generated_Source\PSoC5/RS232.c **** * Summary:
  54:Generated_Source\PSoC5/RS232.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/RS232.c **** *  RS232_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/RS232.c **** *  RS232_Init() function, and then calls the
  57:Generated_Source\PSoC5/RS232.c **** *  RS232_Enable() function.
  58:Generated_Source\PSoC5/RS232.c **** *
  59:Generated_Source\PSoC5/RS232.c **** * Parameters:
  60:Generated_Source\PSoC5/RS232.c **** *  None.
  61:Generated_Source\PSoC5/RS232.c **** *
  62:Generated_Source\PSoC5/RS232.c **** * Return:
  63:Generated_Source\PSoC5/RS232.c **** *  None.
  64:Generated_Source\PSoC5/RS232.c **** *
  65:Generated_Source\PSoC5/RS232.c **** * Global variables:
  66:Generated_Source\PSoC5/RS232.c **** *  The RS232_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/RS232.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/RS232.c **** *  and set to one (1u) the first time RS232_Start() is called. This
  69:Generated_Source\PSoC5/RS232.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/RS232.c **** *  subsequent calls to the RS232_Start() routine.
  71:Generated_Source\PSoC5/RS232.c **** *
  72:Generated_Source\PSoC5/RS232.c **** * Reentrant:
  73:Generated_Source\PSoC5/RS232.c **** *  No.
  74:Generated_Source\PSoC5/RS232.c **** *
  75:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/RS232.c **** void RS232_Start(void) 
  77:Generated_Source\PSoC5/RS232.c **** {
  78:Generated_Source\PSoC5/RS232.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/RS232.c ****     if(RS232_initVar == 0u)
  80:Generated_Source\PSoC5/RS232.c ****     {
  81:Generated_Source\PSoC5/RS232.c ****         RS232_Init();
  82:Generated_Source\PSoC5/RS232.c ****         RS232_initVar = 1u;
  83:Generated_Source\PSoC5/RS232.c ****     }
  84:Generated_Source\PSoC5/RS232.c **** 
  85:Generated_Source\PSoC5/RS232.c ****     RS232_Enable();
  86:Generated_Source\PSoC5/RS232.c **** }
  87:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 3


  88:Generated_Source\PSoC5/RS232.c **** 
  89:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_Init
  91:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
  92:Generated_Source\PSoC5/RS232.c **** *
  93:Generated_Source\PSoC5/RS232.c **** * Summary:
  94:Generated_Source\PSoC5/RS232.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/RS232.c **** *  dialog settings. It is not necessary to call RS232_Init() because
  96:Generated_Source\PSoC5/RS232.c **** *  the RS232_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/RS232.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/RS232.c **** *
  99:Generated_Source\PSoC5/RS232.c **** * Parameters:
 100:Generated_Source\PSoC5/RS232.c **** *  None.
 101:Generated_Source\PSoC5/RS232.c **** *
 102:Generated_Source\PSoC5/RS232.c **** * Return:
 103:Generated_Source\PSoC5/RS232.c **** *  None.
 104:Generated_Source\PSoC5/RS232.c **** *
 105:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/RS232.c **** void RS232_Init(void) 
 107:Generated_Source\PSoC5/RS232.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/RS232.c ****     #if(RS232_RX_ENABLED || RS232_HD_ENABLED)
 109:Generated_Source\PSoC5/RS232.c **** 
 110:Generated_Source\PSoC5/RS232.c ****         #if (RS232_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/RS232.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/RS232.c ****             (void) CyIntSetVector(RS232_RX_VECT_NUM, &RS232_RXISR);
  36              		.loc 1 112 0
  37 0002 0D49     		ldr	r1, .L3
  38 0004 0120     		movs	r0, #1
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/RS232.c ****             CyIntSetPriority(RS232_RX_VECT_NUM, RS232_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0120     		movs	r0, #1
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/RS232.c ****             RS232_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0023     		movs	r3, #0
  48 0014 094A     		ldr	r2, .L3+4
  49 0016 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/RS232.c **** 
 117:Generated_Source\PSoC5/RS232.c ****         #if (RS232_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/RS232.c ****             RS232_SetRxAddressMode(RS232_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/RS232.c ****             RS232_SetRxAddress1(RS232_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/RS232.c ****             RS232_SetRxAddress2(RS232_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/RS232.c ****         #endif /* End RS232_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 4


 123:Generated_Source\PSoC5/RS232.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/RS232.c ****         RS232_RXBITCTR_PERIOD_REG = RS232_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7221     		movs	r1, #114
  52 001a 094A     		ldr	r2, .L3+8
  53 001c 1170     		strb	r1, [r2]
 125:Generated_Source\PSoC5/RS232.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/RS232.c ****         RS232_RXSTATUS_MASK_REG  = RS232_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2021     		movs	r1, #32
  56 0020 A2F58072 		sub	r2, r2, #256
  57 0024 1170     		strb	r1, [r2]
 127:Generated_Source\PSoC5/RS232.c ****     #endif /* End RS232_RX_ENABLED || RS232_HD_ENABLED*/
 128:Generated_Source\PSoC5/RS232.c **** 
 129:Generated_Source\PSoC5/RS232.c ****     #if(RS232_TX_ENABLED)
 130:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/RS232.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/RS232.c ****             (void) CyIntSetVector(RS232_TX_VECT_NUM, &RS232_TXISR);
 133:Generated_Source\PSoC5/RS232.c ****             CyIntSetPriority(RS232_TX_VECT_NUM, RS232_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/RS232.c **** 
 136:Generated_Source\PSoC5/RS232.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/RS232.c ****             RS232_TXBITCLKGEN_CTR_REG = RS232_BIT_CENTER;
  58              		.loc 1 138 0
  59 0026 0621     		movs	r1, #6
  60 0028 633A     		subs	r2, r2, #99
  61 002a 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC5/RS232.c ****             RS232_TXBITCLKTX_COMPLETE_REG = ((RS232_NUMBER_OF_DATA_BITS +
  62              		.loc 1 139 0
  63 002c 4721     		movs	r1, #71
  64 002e 1032     		adds	r2, r2, #16
  65 0030 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC5/RS232.c ****                         RS232_NUMBER_OF_START_BIT) * RS232_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/RS232.c ****         #else
 142:Generated_Source\PSoC5/RS232.c ****             RS232_TXBITCTR_PERIOD_REG = ((RS232_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/RS232.c ****                         RS232_NUMBER_OF_START_BIT) * RS232_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/RS232.c ****         #endif /* End RS232_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/RS232.c **** 
 146:Generated_Source\PSoC5/RS232.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/RS232.c ****             RS232_TXSTATUS_MASK_REG = RS232_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/RS232.c ****         #else
 150:Generated_Source\PSoC5/RS232.c ****             RS232_TXSTATUS_MASK_REG = RS232_INIT_TX_INTERRUPTS_MASK;
  66              		.loc 1 150 0
  67 0032 4E32     		adds	r2, r2, #78
  68 0034 1370     		strb	r3, [r2]
  69 0036 08BD     		pop	{r3, pc}
  70              	.L4:
  71              		.align	2
  72              	.L3:
  73 0038 00000000 		.word	RS232_RXISR
  74 003c 00000000 		.word	.LANCHOR0
  75 0040 89650040 		.word	1073767817
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	RS232_Init, .-RS232_Init
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 5


  79              		.section	.text.RS232_Enable,"ax",%progbits
  80              		.align	2
  81              		.global	RS232_Enable
  82              		.thumb
  83              		.thumb_func
  84              		.type	RS232_Enable, %function
  85              	RS232_Enable:
  86              	.LFB2:
 151:Generated_Source\PSoC5/RS232.c ****         #endif /*End RS232_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/RS232.c **** 
 153:Generated_Source\PSoC5/RS232.c ****     #endif /* End RS232_TX_ENABLED */
 154:Generated_Source\PSoC5/RS232.c **** 
 155:Generated_Source\PSoC5/RS232.c ****     #if(RS232_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/RS232.c ****         RS232_WriteControlRegister( \
 157:Generated_Source\PSoC5/RS232.c ****             (RS232_ReadControlRegister() & (uint8)~RS232_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/RS232.c ****             (uint8)(RS232_PARITY_TYPE << RS232_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/RS232.c ****     #endif /* End RS232_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/RS232.c **** }
 161:Generated_Source\PSoC5/RS232.c **** 
 162:Generated_Source\PSoC5/RS232.c **** 
 163:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_Enable
 165:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
 166:Generated_Source\PSoC5/RS232.c **** *
 167:Generated_Source\PSoC5/RS232.c **** * Summary:
 168:Generated_Source\PSoC5/RS232.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/RS232.c **** *  to call RS232_Enable() because the RS232_Start() API
 170:Generated_Source\PSoC5/RS232.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/RS232.c **** *  operation.
 172:Generated_Source\PSoC5/RS232.c **** 
 173:Generated_Source\PSoC5/RS232.c **** * Parameters:
 174:Generated_Source\PSoC5/RS232.c **** *  None.
 175:Generated_Source\PSoC5/RS232.c **** *
 176:Generated_Source\PSoC5/RS232.c **** * Return:
 177:Generated_Source\PSoC5/RS232.c **** *  None.
 178:Generated_Source\PSoC5/RS232.c **** *
 179:Generated_Source\PSoC5/RS232.c **** * Global Variables:
 180:Generated_Source\PSoC5/RS232.c **** *  RS232_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/RS232.c **** *
 182:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/RS232.c **** void RS232_Enable(void) 
 184:Generated_Source\PSoC5/RS232.c **** {
  87              		.loc 1 184 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/RS232.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/RS232.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 186 0
  96 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  97              	.LVL2:
  98 0006 0446     		mov	r4, r0
  99              	.LVL3:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 6


 187:Generated_Source\PSoC5/RS232.c **** 
 188:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_ENABLED || RS232_HD_ENABLED)
 189:Generated_Source\PSoC5/RS232.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/RS232.c ****         RS232_RXBITCTR_CONTROL_REG |= RS232_CNTR_ENABLE;
 100              		.loc 1 190 0
 101 0008 0C4A     		ldr	r2, .L7
 102 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 103 000c 43F02003 		orr	r3, r3, #32
 104 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/RS232.c **** 
 192:Generated_Source\PSoC5/RS232.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/RS232.c ****         RS232_RXSTATUS_ACTL_REG  |= RS232_INT_ENABLE;
 105              		.loc 1 193 0
 106 0012 A2F58072 		sub	r2, r2, #256
 107 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 108 0018 43F01003 		orr	r3, r3, #16
 109 001c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/RS232.c **** 
 195:Generated_Source\PSoC5/RS232.c ****         #if (RS232_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/RS232.c ****             RS232_EnableRxInt();
 110              		.loc 1 196 0
 111 001e 0222     		movs	r2, #2
 112 0020 074B     		ldr	r3, .L7+4
 113 0022 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/RS232.c **** 
 198:Generated_Source\PSoC5/RS232.c ****             #if (RS232_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/RS232.c ****                 RS232_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/RS232.c ****             #endif /* (RS232_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_ENABLED || RS232_HD_ENABLED) */
 203:Generated_Source\PSoC5/RS232.c **** 
 204:Generated_Source\PSoC5/RS232.c ****     #if(RS232_TX_ENABLED)
 205:Generated_Source\PSoC5/RS232.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/RS232.c ****         #if(!RS232_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/RS232.c ****             RS232_TXBITCTR_CONTROL_REG |= RS232_CNTR_ENABLE;
 208:Generated_Source\PSoC5/RS232.c ****         #endif /* End RS232_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/RS232.c **** 
 210:Generated_Source\PSoC5/RS232.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/RS232.c ****         RS232_TXSTATUS_ACTL_REG |= RS232_INT_ENABLE;
 114              		.loc 1 211 0
 115 0024 074A     		ldr	r2, .L7+8
 116 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 117 0028 43F01003 		orr	r3, r3, #16
 118 002c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/RS232.c ****             RS232_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/RS232.c ****             RS232_EnableTxInt();
 215:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/RS232.c ****      #endif /* (RS232_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/RS232.c **** 
 218:Generated_Source\PSoC5/RS232.c ****     #if (RS232_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/RS232.c ****         RS232_IntClock_Start();  /* Enable the clock */
 119              		.loc 1 219 0
 120 002e FFF7FEFF 		bl	RS232_IntClock_Start
 121              	.LVL4:
 220:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 7


 222:Generated_Source\PSoC5/RS232.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 222 0
 123 0032 2046     		mov	r0, r4
 124 0034 FFF7FEFF 		bl	CyExitCriticalSection
 125              	.LVL5:
 126 0038 10BD     		pop	{r4, pc}
 127              	.LVL6:
 128              	.L8:
 129 003a 00BF     		.align	2
 130              	.L7:
 131 003c 99650040 		.word	1073767833
 132 0040 00E100E0 		.word	-536813312
 133 0044 94640040 		.word	1073767572
 134              		.cfi_endproc
 135              	.LFE2:
 136              		.size	RS232_Enable, .-RS232_Enable
 137              		.section	.text.RS232_Start,"ax",%progbits
 138              		.align	2
 139              		.global	RS232_Start
 140              		.thumb
 141              		.thumb_func
 142              		.type	RS232_Start, %function
 143              	RS232_Start:
 144              	.LFB0:
  77:Generated_Source\PSoC5/RS232.c ****     /* If not initialized then initialize all required hardware and software */
 145              		.loc 1 77 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/RS232.c ****     {
 153              		.loc 1 79 0
 154 0002 054B     		ldr	r3, .L12
 155 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 156 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/RS232.c ****         RS232_initVar = 1u;
 157              		.loc 1 81 0
 158 0008 FFF7FEFF 		bl	RS232_Init
 159              	.LVL7:
  82:Generated_Source\PSoC5/RS232.c ****     }
 160              		.loc 1 82 0
 161 000c 0122     		movs	r2, #1
 162 000e 024B     		ldr	r3, .L12
 163 0010 5A70     		strb	r2, [r3, #1]
 164              	.L10:
  85:Generated_Source\PSoC5/RS232.c **** }
 165              		.loc 1 85 0
 166 0012 FFF7FEFF 		bl	RS232_Enable
 167              	.LVL8:
 168 0016 08BD     		pop	{r3, pc}
 169              	.L13:
 170              		.align	2
 171              	.L12:
 172 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 8


 173              		.cfi_endproc
 174              	.LFE0:
 175              		.size	RS232_Start, .-RS232_Start
 176              		.section	.text.RS232_Stop,"ax",%progbits
 177              		.align	2
 178              		.global	RS232_Stop
 179              		.thumb
 180              		.thumb_func
 181              		.type	RS232_Stop, %function
 182              	RS232_Stop:
 183              	.LFB3:
 223:Generated_Source\PSoC5/RS232.c **** }
 224:Generated_Source\PSoC5/RS232.c **** 
 225:Generated_Source\PSoC5/RS232.c **** 
 226:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_Stop
 228:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
 229:Generated_Source\PSoC5/RS232.c **** *
 230:Generated_Source\PSoC5/RS232.c **** * Summary:
 231:Generated_Source\PSoC5/RS232.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/RS232.c **** *
 233:Generated_Source\PSoC5/RS232.c **** * Parameters:
 234:Generated_Source\PSoC5/RS232.c **** *  None.
 235:Generated_Source\PSoC5/RS232.c **** *
 236:Generated_Source\PSoC5/RS232.c **** * Return:
 237:Generated_Source\PSoC5/RS232.c **** *  None.
 238:Generated_Source\PSoC5/RS232.c **** *
 239:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/RS232.c **** void RS232_Stop(void) 
 241:Generated_Source\PSoC5/RS232.c **** {
 184              		.loc 1 241 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/RS232.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/RS232.c ****     enableInterrupts = CyEnterCriticalSection();
 192              		.loc 1 243 0
 193 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 194              	.LVL9:
 195 0006 0446     		mov	r4, r0
 196              	.LVL10:
 244:Generated_Source\PSoC5/RS232.c **** 
 245:Generated_Source\PSoC5/RS232.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_ENABLED || RS232_HD_ENABLED)
 247:Generated_Source\PSoC5/RS232.c ****         RS232_RXBITCTR_CONTROL_REG &= (uint8) ~RS232_CNTR_ENABLE;
 197              		.loc 1 247 0
 198 0008 0B4A     		ldr	r2, .L16
 199 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 000c 03F0DF03 		and	r3, r3, #223
 201 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_ENABLED || RS232_HD_ENABLED) */
 249:Generated_Source\PSoC5/RS232.c **** 
 250:Generated_Source\PSoC5/RS232.c ****     #if (RS232_TX_ENABLED)
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 9


 251:Generated_Source\PSoC5/RS232.c ****         #if(!RS232_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/RS232.c ****             RS232_TXBITCTR_CONTROL_REG &= (uint8) ~RS232_CNTR_ENABLE;
 253:Generated_Source\PSoC5/RS232.c ****         #endif /* (!RS232_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_TX_ENABLED) */
 255:Generated_Source\PSoC5/RS232.c **** 
 256:Generated_Source\PSoC5/RS232.c ****     #if (RS232_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/RS232.c ****         RS232_IntClock_Stop();   /* Disable the clock */
 202              		.loc 1 257 0
 203 0012 FFF7FEFF 		bl	RS232_IntClock_Stop
 204              	.LVL11:
 258:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/RS232.c **** 
 260:Generated_Source\PSoC5/RS232.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_ENABLED || RS232_HD_ENABLED)
 262:Generated_Source\PSoC5/RS232.c ****         RS232_RXSTATUS_ACTL_REG  &= (uint8) ~RS232_INT_ENABLE;
 205              		.loc 1 262 0
 206 0016 094A     		ldr	r2, .L16+4
 207 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 208 001a 03F0EF03 		and	r3, r3, #239
 209 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/RS232.c **** 
 264:Generated_Source\PSoC5/RS232.c ****         #if (RS232_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/RS232.c ****             RS232_DisableRxInt();
 210              		.loc 1 265 0
 211 0020 0222     		movs	r2, #2
 212 0022 074B     		ldr	r3, .L16+8
 213 0024 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_ENABLED || RS232_HD_ENABLED) */
 268:Generated_Source\PSoC5/RS232.c **** 
 269:Generated_Source\PSoC5/RS232.c ****     #if (RS232_TX_ENABLED)
 270:Generated_Source\PSoC5/RS232.c ****         RS232_TXSTATUS_ACTL_REG &= (uint8) ~RS232_INT_ENABLE;
 214              		.loc 1 270 0
 215 0026 074A     		ldr	r2, .L16+12
 216 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 217 002a 03F0EF03 		and	r3, r3, #239
 218 002e 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/RS232.c **** 
 272:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/RS232.c ****             RS232_DisableTxInt();
 274:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_TX_ENABLED) */
 276:Generated_Source\PSoC5/RS232.c **** 
 277:Generated_Source\PSoC5/RS232.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 277 0
 220 0030 2046     		mov	r0, r4
 221 0032 FFF7FEFF 		bl	CyExitCriticalSection
 222              	.LVL12:
 223 0036 10BD     		pop	{r4, pc}
 224              	.LVL13:
 225              	.L17:
 226              		.align	2
 227              	.L16:
 228 0038 99650040 		.word	1073767833
 229 003c 99640040 		.word	1073767577
 230 0040 80E100E0 		.word	-536813184
 231 0044 94640040 		.word	1073767572
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 10


 232              		.cfi_endproc
 233              	.LFE3:
 234              		.size	RS232_Stop, .-RS232_Stop
 235              		.section	.text.RS232_ReadControlRegister,"ax",%progbits
 236              		.align	2
 237              		.global	RS232_ReadControlRegister
 238              		.thumb
 239              		.thumb_func
 240              		.type	RS232_ReadControlRegister, %function
 241              	RS232_ReadControlRegister:
 242              	.LFB4:
 278:Generated_Source\PSoC5/RS232.c **** }
 279:Generated_Source\PSoC5/RS232.c **** 
 280:Generated_Source\PSoC5/RS232.c **** 
 281:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_ReadControlRegister
 283:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
 284:Generated_Source\PSoC5/RS232.c **** *
 285:Generated_Source\PSoC5/RS232.c **** * Summary:
 286:Generated_Source\PSoC5/RS232.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/RS232.c **** *
 288:Generated_Source\PSoC5/RS232.c **** * Parameters:
 289:Generated_Source\PSoC5/RS232.c **** *  None.
 290:Generated_Source\PSoC5/RS232.c **** *
 291:Generated_Source\PSoC5/RS232.c **** * Return:
 292:Generated_Source\PSoC5/RS232.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/RS232.c **** *
 294:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/RS232.c **** uint8 RS232_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/RS232.c **** {
 243              		.loc 1 296 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 297:Generated_Source\PSoC5/RS232.c ****     #if (RS232_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/RS232.c ****         return(0u);
 299:Generated_Source\PSoC5/RS232.c ****     #else
 300:Generated_Source\PSoC5/RS232.c ****         return(RS232_CONTROL_REG);
 301:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/RS232.c **** }
 248              		.loc 1 302 0
 249 0000 0020     		movs	r0, #0
 250 0002 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE4:
 253              		.size	RS232_ReadControlRegister, .-RS232_ReadControlRegister
 254              		.section	.text.RS232_WriteControlRegister,"ax",%progbits
 255              		.align	2
 256              		.global	RS232_WriteControlRegister
 257              		.thumb
 258              		.thumb_func
 259              		.type	RS232_WriteControlRegister, %function
 260              	RS232_WriteControlRegister:
 261              	.LFB5:
 303:Generated_Source\PSoC5/RS232.c **** 
 304:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 11


 305:Generated_Source\PSoC5/RS232.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/RS232.c **** * Function Name: RS232_WriteControlRegister
 307:Generated_Source\PSoC5/RS232.c **** ********************************************************************************
 308:Generated_Source\PSoC5/RS232.c **** *
 309:Generated_Source\PSoC5/RS232.c **** * Summary:
 310:Generated_Source\PSoC5/RS232.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/RS232.c **** *
 312:Generated_Source\PSoC5/RS232.c **** * Parameters:
 313:Generated_Source\PSoC5/RS232.c **** *  control:  control register value
 314:Generated_Source\PSoC5/RS232.c **** *
 315:Generated_Source\PSoC5/RS232.c **** * Return:
 316:Generated_Source\PSoC5/RS232.c **** *  None.
 317:Generated_Source\PSoC5/RS232.c **** *
 318:Generated_Source\PSoC5/RS232.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/RS232.c **** void  RS232_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/RS232.c **** {
 262              		.loc 1 320 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267              	.LVL14:
 268 0000 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	RS232_WriteControlRegister, .-RS232_WriteControlRegister
 272 0002 00BF     		.section	.text.RS232_SetRxInterruptMode,"ax",%progbits
 273              		.align	2
 274              		.global	RS232_SetRxInterruptMode
 275              		.thumb
 276              		.thumb_func
 277              		.type	RS232_SetRxInterruptMode, %function
 278              	RS232_SetRxInterruptMode:
 279              	.LFB6:
 321:Generated_Source\PSoC5/RS232.c ****     #if (RS232_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/RS232.c ****         if(0u != control)
 323:Generated_Source\PSoC5/RS232.c ****         {
 324:Generated_Source\PSoC5/RS232.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/RS232.c ****         }
 326:Generated_Source\PSoC5/RS232.c ****     #else
 327:Generated_Source\PSoC5/RS232.c ****        RS232_CONTROL_REG = control;
 328:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/RS232.c **** }
 330:Generated_Source\PSoC5/RS232.c **** 
 331:Generated_Source\PSoC5/RS232.c **** 
 332:Generated_Source\PSoC5/RS232.c **** #if(RS232_RX_ENABLED || RS232_HD_ENABLED)
 333:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetRxInterruptMode
 335:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/RS232.c ****     *
 337:Generated_Source\PSoC5/RS232.c ****     * Summary:
 338:Generated_Source\PSoC5/RS232.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/RS232.c ****     *
 340:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 341:Generated_Source\PSoC5/RS232.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/RS232.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/RS232.c ****     *  combination of status register bit-masks shown below:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 12


 344:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/RS232.c ****     *      RS232_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/RS232.c ****     *
 352:Generated_Source\PSoC5/RS232.c ****     * Return:
 353:Generated_Source\PSoC5/RS232.c ****     *  None.
 354:Generated_Source\PSoC5/RS232.c ****     *
 355:Generated_Source\PSoC5/RS232.c ****     * Theory:
 356:Generated_Source\PSoC5/RS232.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/RS232.c ****     *
 358:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/RS232.c ****     void RS232_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/RS232.c ****     {
 280              		.loc 1 360 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL15:
 361:Generated_Source\PSoC5/RS232.c ****         RS232_RXSTATUS_MASK_REG  = intSrc;
 286              		.loc 1 361 0
 287 0000 014B     		ldr	r3, .L21
 288 0002 1870     		strb	r0, [r3]
 289 0004 7047     		bx	lr
 290              	.L22:
 291 0006 00BF     		.align	2
 292              	.L21:
 293 0008 89640040 		.word	1073767561
 294              		.cfi_endproc
 295              	.LFE6:
 296              		.size	RS232_SetRxInterruptMode, .-RS232_SetRxInterruptMode
 297              		.section	.text.RS232_ReadRxData,"ax",%progbits
 298              		.align	2
 299              		.global	RS232_ReadRxData
 300              		.thumb
 301              		.thumb_func
 302              		.type	RS232_ReadRxData, %function
 303              	RS232_ReadRxData:
 304              	.LFB7:
 362:Generated_Source\PSoC5/RS232.c ****     }
 363:Generated_Source\PSoC5/RS232.c **** 
 364:Generated_Source\PSoC5/RS232.c **** 
 365:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_ReadRxData
 367:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/RS232.c ****     *
 369:Generated_Source\PSoC5/RS232.c ****     * Summary:
 370:Generated_Source\PSoC5/RS232.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/RS232.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/RS232.c ****     *
 373:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 374:Generated_Source\PSoC5/RS232.c ****     *  None.
 375:Generated_Source\PSoC5/RS232.c ****     *
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 13


 376:Generated_Source\PSoC5/RS232.c ****     * Return:
 377:Generated_Source\PSoC5/RS232.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/RS232.c ****     *
 379:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 380:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/RS232.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/RS232.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/RS232.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/RS232.c ****     *
 388:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
 389:Generated_Source\PSoC5/RS232.c ****     *  No.
 390:Generated_Source\PSoC5/RS232.c ****     *
 391:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_ReadRxData(void) 
 393:Generated_Source\PSoC5/RS232.c ****     {
 305              		.loc 1 393 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 394:Generated_Source\PSoC5/RS232.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/RS232.c **** 
 396:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/RS232.c **** 
 398:Generated_Source\PSoC5/RS232.c ****         uint16 locRxBufferRead;
 399:Generated_Source\PSoC5/RS232.c ****         uint16 locRxBufferWrite;
 400:Generated_Source\PSoC5/RS232.c **** 
 401:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/RS232.c ****         RS232_DisableRxInt();
 310              		.loc 1 402 0
 311 0000 0222     		movs	r2, #2
 312 0002 134B     		ldr	r3, .L29
 313 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/RS232.c **** 
 404:Generated_Source\PSoC5/RS232.c ****         locRxBufferRead  = RS232_rxBufferRead;
 314              		.loc 1 404 0
 315 0006 134A     		ldr	r2, .L29+4
 316 0008 5388     		ldrh	r3, [r2, #2]
 317 000a 9BB2     		uxth	r3, r3
 318              	.LVL16:
 405:Generated_Source\PSoC5/RS232.c ****         locRxBufferWrite = RS232_rxBufferWrite;
 319              		.loc 1 405 0
 320 000c 9188     		ldrh	r1, [r2, #4]
 321 000e 89B2     		uxth	r1, r1
 322              	.LVL17:
 406:Generated_Source\PSoC5/RS232.c **** 
 407:Generated_Source\PSoC5/RS232.c ****         if( (RS232_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 323              		.loc 1 407 0
 324 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 325 0012 12F0FF0F 		tst	r2, #255
 326 0016 01D1     		bne	.L24
 327              		.loc 1 407 0 is_stmt 0 discriminator 1
 328 0018 8B42     		cmp	r3, r1
 329 001a 11D0     		beq	.L25
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 14


 330              	.L24:
 408:Generated_Source\PSoC5/RS232.c ****         {
 409:Generated_Source\PSoC5/RS232.c ****             rxData = RS232_rxBuffer[locRxBufferRead];
 331              		.loc 1 409 0 is_stmt 1
 332 001c 0E4A     		ldr	r2, .L29+8
 333 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 334 0020 C0B2     		uxtb	r0, r0
 335              	.LVL18:
 410:Generated_Source\PSoC5/RS232.c ****             locRxBufferRead++;
 336              		.loc 1 410 0
 337 0022 0133     		adds	r3, r3, #1
 338              	.LVL19:
 339 0024 9BB2     		uxth	r3, r3
 340              	.LVL20:
 411:Generated_Source\PSoC5/RS232.c **** 
 412:Generated_Source\PSoC5/RS232.c ****             if(locRxBufferRead >= RS232_RX_BUFFER_SIZE)
 341              		.loc 1 412 0
 342 0026 FF2B     		cmp	r3, #255
 343 0028 00D9     		bls	.L26
 413:Generated_Source\PSoC5/RS232.c ****             {
 414:Generated_Source\PSoC5/RS232.c ****                 locRxBufferRead = 0u;
 344              		.loc 1 414 0
 345 002a 0023     		movs	r3, #0
 346              	.LVL21:
 347              	.L26:
 415:Generated_Source\PSoC5/RS232.c ****             }
 416:Generated_Source\PSoC5/RS232.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/RS232.c ****             RS232_rxBufferRead = locRxBufferRead;
 348              		.loc 1 417 0
 349 002c 094A     		ldr	r2, .L29+4
 350 002e 5380     		strh	r3, [r2, #2]	@ movhi
 418:Generated_Source\PSoC5/RS232.c **** 
 419:Generated_Source\PSoC5/RS232.c ****             if(RS232_rxBufferLoopDetect != 0u)
 351              		.loc 1 419 0
 352 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 353              	.LVL22:
 354 0032 13F0FF0F 		tst	r3, #255
 355 0036 06D0     		beq	.L27
 420:Generated_Source\PSoC5/RS232.c ****             {
 421:Generated_Source\PSoC5/RS232.c ****                 RS232_rxBufferLoopDetect = 0u;
 356              		.loc 1 421 0
 357 0038 0022     		movs	r2, #0
 358 003a 064B     		ldr	r3, .L29+4
 359 003c 9A71     		strb	r2, [r3, #6]
 360              	.LVL23:
 361 003e 02E0     		b	.L27
 362              	.LVL24:
 363              	.L25:
 422:Generated_Source\PSoC5/RS232.c ****                 #if ((RS232_RX_INTERRUPT_ENABLED) && (RS232_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/RS232.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/RS232.c ****                     #if( RS232_HD_ENABLED )
 425:Generated_Source\PSoC5/RS232.c ****                         if((RS232_CONTROL_REG & RS232_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/RS232.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/RS232.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/RS232.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/RS232.c ****                             */
 430:Generated_Source\PSoC5/RS232.c ****                             RS232_RXSTATUS_MASK_REG  |= RS232_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 15


 431:Generated_Source\PSoC5/RS232.c ****                         }
 432:Generated_Source\PSoC5/RS232.c ****                     #else
 433:Generated_Source\PSoC5/RS232.c ****                         RS232_RXSTATUS_MASK_REG  |= RS232_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/RS232.c ****                     #endif /* end RS232_HD_ENABLED */
 435:Generated_Source\PSoC5/RS232.c ****                 #endif /* ((RS232_RX_INTERRUPT_ENABLED) && (RS232_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/RS232.c ****             }
 437:Generated_Source\PSoC5/RS232.c ****         }
 438:Generated_Source\PSoC5/RS232.c ****         else
 439:Generated_Source\PSoC5/RS232.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/RS232.c ****             rxData = RS232_RXDATA_REG;
 364              		.loc 1 440 0
 365 0040 064B     		ldr	r3, .L29+12
 366              	.LVL25:
 367 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 368 0044 C0B2     		uxtb	r0, r0
 369              	.LVL26:
 370              	.L27:
 441:Generated_Source\PSoC5/RS232.c ****         }
 442:Generated_Source\PSoC5/RS232.c **** 
 443:Generated_Source\PSoC5/RS232.c ****         RS232_EnableRxInt();
 371              		.loc 1 443 0
 372 0046 0222     		movs	r2, #2
 373 0048 054B     		ldr	r3, .L29+16
 374 004a 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/RS232.c **** 
 445:Generated_Source\PSoC5/RS232.c ****     #else
 446:Generated_Source\PSoC5/RS232.c **** 
 447:Generated_Source\PSoC5/RS232.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/RS232.c ****         rxData = RS232_RXDATA_REG;
 449:Generated_Source\PSoC5/RS232.c **** 
 450:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/RS232.c **** 
 452:Generated_Source\PSoC5/RS232.c ****         return(rxData);
 453:Generated_Source\PSoC5/RS232.c ****     }
 375              		.loc 1 453 0
 376 004c 7047     		bx	lr
 377              	.L30:
 378 004e 00BF     		.align	2
 379              	.L29:
 380 0050 80E100E0 		.word	-536813184
 381 0054 00000000 		.word	.LANCHOR0
 382 0058 00000000 		.word	RS232_rxBuffer
 383 005c 49640040 		.word	1073767497
 384 0060 00E100E0 		.word	-536813312
 385              		.cfi_endproc
 386              	.LFE7:
 387              		.size	RS232_ReadRxData, .-RS232_ReadRxData
 388              		.section	.text.RS232_ReadRxStatus,"ax",%progbits
 389              		.align	2
 390              		.global	RS232_ReadRxStatus
 391              		.thumb
 392              		.thumb_func
 393              		.type	RS232_ReadRxStatus, %function
 394              	RS232_ReadRxStatus:
 395              	.LFB8:
 454:Generated_Source\PSoC5/RS232.c **** 
 455:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 16


 456:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_ReadRxStatus
 458:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/RS232.c ****     *
 460:Generated_Source\PSoC5/RS232.c ****     * Summary:
 461:Generated_Source\PSoC5/RS232.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/RS232.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/RS232.c ****     *
 464:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 465:Generated_Source\PSoC5/RS232.c ****     *  None.
 466:Generated_Source\PSoC5/RS232.c ****     *
 467:Generated_Source\PSoC5/RS232.c ****     * Return:
 468:Generated_Source\PSoC5/RS232.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/RS232.c ****     *
 470:Generated_Source\PSoC5/RS232.c ****     * Side Effect:
 471:Generated_Source\PSoC5/RS232.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/RS232.c ****     *  RS232_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/RS232.c ****     *  RS232_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/RS232.c ****     *  register read.
 475:Generated_Source\PSoC5/RS232.c ****     *
 476:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 477:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/RS232.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/RS232.c ****     *   RS232_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/RS232.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/RS232.c ****     *   RS232_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/RS232.c ****     *   bits.
 483:Generated_Source\PSoC5/RS232.c ****     *
 484:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/RS232.c ****     {
 396              		.loc 1 486 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 487:Generated_Source\PSoC5/RS232.c ****         uint8 status;
 488:Generated_Source\PSoC5/RS232.c **** 
 489:Generated_Source\PSoC5/RS232.c ****         status = RS232_RXSTATUS_REG & RS232_RX_HW_MASK;
 401              		.loc 1 489 0
 402 0000 074B     		ldr	r3, .L33
 403 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 404 0004 00F07F00 		and	r0, r0, #127
 405              	.LVL27:
 490:Generated_Source\PSoC5/RS232.c **** 
 491:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/RS232.c ****         if(RS232_rxBufferOverflow != 0u)
 406              		.loc 1 492 0
 407 0008 064B     		ldr	r3, .L33+4
 408 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 409 000c 13F0FF0F 		tst	r3, #255
 410 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/RS232.c ****         {
 494:Generated_Source\PSoC5/RS232.c ****             status |= RS232_RX_STS_SOFT_BUFF_OVER;
 411              		.loc 1 494 0
 412 0012 40F08000 		orr	r0, r0, #128
 413              	.LVL28:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 17


 495:Generated_Source\PSoC5/RS232.c ****             RS232_rxBufferOverflow = 0u;
 414              		.loc 1 495 0
 415 0016 0022     		movs	r2, #0
 416 0018 024B     		ldr	r3, .L33+4
 417 001a DA71     		strb	r2, [r3, #7]
 418              	.L32:
 496:Generated_Source\PSoC5/RS232.c ****         }
 497:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/RS232.c **** 
 499:Generated_Source\PSoC5/RS232.c ****         return(status);
 500:Generated_Source\PSoC5/RS232.c ****     }
 419              		.loc 1 500 0
 420 001c 7047     		bx	lr
 421              	.L34:
 422 001e 00BF     		.align	2
 423              	.L33:
 424 0020 69640040 		.word	1073767529
 425 0024 00000000 		.word	.LANCHOR0
 426              		.cfi_endproc
 427              	.LFE8:
 428              		.size	RS232_ReadRxStatus, .-RS232_ReadRxStatus
 429              		.section	.text.RS232_GetChar,"ax",%progbits
 430              		.align	2
 431              		.global	RS232_GetChar
 432              		.thumb
 433              		.thumb_func
 434              		.type	RS232_GetChar, %function
 435              	RS232_GetChar:
 436              	.LFB9:
 501:Generated_Source\PSoC5/RS232.c **** 
 502:Generated_Source\PSoC5/RS232.c **** 
 503:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_GetChar
 505:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/RS232.c ****     *
 507:Generated_Source\PSoC5/RS232.c ****     * Summary:
 508:Generated_Source\PSoC5/RS232.c ****     *  Returns the last received byte of data. RS232_GetChar() is
 509:Generated_Source\PSoC5/RS232.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/RS232.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/RS232.c ****     *
 512:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 513:Generated_Source\PSoC5/RS232.c ****     *  None.
 514:Generated_Source\PSoC5/RS232.c ****     *
 515:Generated_Source\PSoC5/RS232.c ****     * Return:
 516:Generated_Source\PSoC5/RS232.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/RS232.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/RS232.c ****     *
 519:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 520:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/RS232.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/RS232.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/RS232.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/RS232.c ****     *
 528:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 18


 529:Generated_Source\PSoC5/RS232.c ****     *  No.
 530:Generated_Source\PSoC5/RS232.c ****     *
 531:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_GetChar(void) 
 533:Generated_Source\PSoC5/RS232.c ****     {
 437              		.loc 1 533 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL29:
 534:Generated_Source\PSoC5/RS232.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/RS232.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/RS232.c **** 
 537:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/RS232.c ****         uint16 locRxBufferRead;
 539:Generated_Source\PSoC5/RS232.c ****         uint16 locRxBufferWrite;
 540:Generated_Source\PSoC5/RS232.c **** 
 541:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/RS232.c ****         RS232_DisableRxInt();
 443              		.loc 1 542 0
 444 0000 0222     		movs	r2, #2
 445 0002 194B     		ldr	r3, .L43
 446 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/RS232.c **** 
 544:Generated_Source\PSoC5/RS232.c ****         locRxBufferRead  = RS232_rxBufferRead;
 447              		.loc 1 544 0
 448 0006 194A     		ldr	r2, .L43+4
 449 0008 5388     		ldrh	r3, [r2, #2]
 450 000a 9BB2     		uxth	r3, r3
 451              	.LVL30:
 545:Generated_Source\PSoC5/RS232.c ****         locRxBufferWrite = RS232_rxBufferWrite;
 452              		.loc 1 545 0
 453 000c 9188     		ldrh	r1, [r2, #4]
 454 000e 89B2     		uxth	r1, r1
 455              	.LVL31:
 546:Generated_Source\PSoC5/RS232.c **** 
 547:Generated_Source\PSoC5/RS232.c ****         if( (RS232_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 456              		.loc 1 547 0
 457 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 458 0012 12F0FF0F 		tst	r2, #255
 459 0016 01D1     		bne	.L36
 460              		.loc 1 547 0 is_stmt 0 discriminator 1
 461 0018 8B42     		cmp	r3, r1
 462 001a 11D0     		beq	.L37
 463              	.L36:
 548:Generated_Source\PSoC5/RS232.c ****         {
 549:Generated_Source\PSoC5/RS232.c ****             rxData = RS232_rxBuffer[locRxBufferRead];
 464              		.loc 1 549 0 is_stmt 1
 465 001c 144A     		ldr	r2, .L43+8
 466 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 467 0020 C0B2     		uxtb	r0, r0
 468              	.LVL32:
 550:Generated_Source\PSoC5/RS232.c ****             locRxBufferRead++;
 469              		.loc 1 550 0
 470 0022 0133     		adds	r3, r3, #1
 471              	.LVL33:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 19


 472 0024 9BB2     		uxth	r3, r3
 473              	.LVL34:
 551:Generated_Source\PSoC5/RS232.c ****             if(locRxBufferRead >= RS232_RX_BUFFER_SIZE)
 474              		.loc 1 551 0
 475 0026 FF2B     		cmp	r3, #255
 476 0028 00D9     		bls	.L38
 552:Generated_Source\PSoC5/RS232.c ****             {
 553:Generated_Source\PSoC5/RS232.c ****                 locRxBufferRead = 0u;
 477              		.loc 1 553 0
 478 002a 0023     		movs	r3, #0
 479              	.LVL35:
 480              	.L38:
 554:Generated_Source\PSoC5/RS232.c ****             }
 555:Generated_Source\PSoC5/RS232.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/RS232.c ****             RS232_rxBufferRead = locRxBufferRead;
 481              		.loc 1 556 0
 482 002c 0F4A     		ldr	r2, .L43+4
 483 002e 5380     		strh	r3, [r2, #2]	@ movhi
 557:Generated_Source\PSoC5/RS232.c **** 
 558:Generated_Source\PSoC5/RS232.c ****             if(RS232_rxBufferLoopDetect != 0u)
 484              		.loc 1 558 0
 485 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 486              	.LVL36:
 487 0032 13F0FF0F 		tst	r3, #255
 488 0036 13D0     		beq	.L39
 559:Generated_Source\PSoC5/RS232.c ****             {
 560:Generated_Source\PSoC5/RS232.c ****                 RS232_rxBufferLoopDetect = 0u;
 489              		.loc 1 560 0
 490 0038 0022     		movs	r2, #0
 491 003a 0C4B     		ldr	r3, .L43+4
 492 003c 9A71     		strb	r2, [r3, #6]
 493              	.LVL37:
 494 003e 0FE0     		b	.L39
 495              	.LVL38:
 496              	.L37:
 561:Generated_Source\PSoC5/RS232.c ****                 #if( (RS232_RX_INTERRUPT_ENABLED) && (RS232_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/RS232.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/RS232.c ****                     #if( RS232_HD_ENABLED )
 564:Generated_Source\PSoC5/RS232.c ****                         if((RS232_CONTROL_REG & RS232_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/RS232.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/RS232.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/RS232.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/RS232.c ****                             */
 569:Generated_Source\PSoC5/RS232.c ****                             RS232_RXSTATUS_MASK_REG |= RS232_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/RS232.c ****                         }
 571:Generated_Source\PSoC5/RS232.c ****                     #else
 572:Generated_Source\PSoC5/RS232.c ****                         RS232_RXSTATUS_MASK_REG |= RS232_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/RS232.c ****                     #endif /* end RS232_HD_ENABLED */
 574:Generated_Source\PSoC5/RS232.c ****                 #endif /* RS232_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/RS232.c ****             }
 576:Generated_Source\PSoC5/RS232.c **** 
 577:Generated_Source\PSoC5/RS232.c ****         }
 578:Generated_Source\PSoC5/RS232.c ****         else
 579:Generated_Source\PSoC5/RS232.c ****         {   rxStatus = RS232_RXSTATUS_REG;
 497              		.loc 1 579 0
 498 0040 0C4B     		ldr	r3, .L43+12
 499              	.LVL39:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 20


 500 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0044 DBB2     		uxtb	r3, r3
 502              	.LVL40:
 580:Generated_Source\PSoC5/RS232.c ****             if((rxStatus & RS232_RX_STS_FIFO_NOTEMPTY) != 0u)
 503              		.loc 1 580 0
 504 0046 13F0200F 		tst	r3, #32
 505 004a 06D0     		beq	.L41
 581:Generated_Source\PSoC5/RS232.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/RS232.c ****                 rxData = RS232_RXDATA_REG;
 506              		.loc 1 582 0
 507 004c 0A4A     		ldr	r2, .L43+16
 508 004e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 509 0050 C0B2     		uxtb	r0, r0
 510              	.LVL41:
 583:Generated_Source\PSoC5/RS232.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/RS232.c ****                 if((rxStatus & (RS232_RX_STS_BREAK | RS232_RX_STS_PAR_ERROR |
 511              		.loc 1 584 0
 512 0052 13F01E0F 		tst	r3, #30
 513 0056 02D1     		bne	.L42
 514 0058 02E0     		b	.L39
 515              	.LVL42:
 516              	.L41:
 534:Generated_Source\PSoC5/RS232.c ****         uint8 rxStatus;
 517              		.loc 1 534 0
 518 005a 0020     		movs	r0, #0
 519 005c 00E0     		b	.L39
 520              	.LVL43:
 521              	.L42:
 585:Generated_Source\PSoC5/RS232.c ****                                 RS232_RX_STS_STOP_ERROR | RS232_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/RS232.c ****                 {
 587:Generated_Source\PSoC5/RS232.c ****                     rxData = 0u;
 522              		.loc 1 587 0
 523 005e 0020     		movs	r0, #0
 524              	.LVL44:
 525              	.L39:
 588:Generated_Source\PSoC5/RS232.c ****                 }
 589:Generated_Source\PSoC5/RS232.c ****             }
 590:Generated_Source\PSoC5/RS232.c ****         }
 591:Generated_Source\PSoC5/RS232.c **** 
 592:Generated_Source\PSoC5/RS232.c ****         RS232_EnableRxInt();
 526              		.loc 1 592 0
 527 0060 0222     		movs	r2, #2
 528 0062 064B     		ldr	r3, .L43+20
 529 0064 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/RS232.c **** 
 594:Generated_Source\PSoC5/RS232.c ****     #else
 595:Generated_Source\PSoC5/RS232.c **** 
 596:Generated_Source\PSoC5/RS232.c ****         rxStatus =RS232_RXSTATUS_REG;
 597:Generated_Source\PSoC5/RS232.c ****         if((rxStatus & RS232_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/RS232.c ****         {
 599:Generated_Source\PSoC5/RS232.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/RS232.c ****             rxData = RS232_RXDATA_REG;
 601:Generated_Source\PSoC5/RS232.c **** 
 602:Generated_Source\PSoC5/RS232.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/RS232.c ****             if((rxStatus & (RS232_RX_STS_BREAK | RS232_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/RS232.c ****                             RS232_RX_STS_STOP_ERROR | RS232_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/RS232.c ****             {
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 21


 606:Generated_Source\PSoC5/RS232.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/RS232.c ****             }
 608:Generated_Source\PSoC5/RS232.c ****         }
 609:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/RS232.c **** 
 611:Generated_Source\PSoC5/RS232.c ****         return(rxData);
 612:Generated_Source\PSoC5/RS232.c ****     }
 530              		.loc 1 612 0
 531 0066 7047     		bx	lr
 532              	.L44:
 533              		.align	2
 534              	.L43:
 535 0068 80E100E0 		.word	-536813184
 536 006c 00000000 		.word	.LANCHOR0
 537 0070 00000000 		.word	RS232_rxBuffer
 538 0074 69640040 		.word	1073767529
 539 0078 49640040 		.word	1073767497
 540 007c 00E100E0 		.word	-536813312
 541              		.cfi_endproc
 542              	.LFE9:
 543              		.size	RS232_GetChar, .-RS232_GetChar
 544              		.section	.text.RS232_GetByte,"ax",%progbits
 545              		.align	2
 546              		.global	RS232_GetByte
 547              		.thumb
 548              		.thumb_func
 549              		.type	RS232_GetByte, %function
 550              	RS232_GetByte:
 551              	.LFB10:
 613:Generated_Source\PSoC5/RS232.c **** 
 614:Generated_Source\PSoC5/RS232.c **** 
 615:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_GetByte
 617:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/RS232.c ****     *
 619:Generated_Source\PSoC5/RS232.c ****     * Summary:
 620:Generated_Source\PSoC5/RS232.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/RS232.c ****     *  condition.
 622:Generated_Source\PSoC5/RS232.c ****     *
 623:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 624:Generated_Source\PSoC5/RS232.c ****     *  None.
 625:Generated_Source\PSoC5/RS232.c ****     *
 626:Generated_Source\PSoC5/RS232.c ****     * Return:
 627:Generated_Source\PSoC5/RS232.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/RS232.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/RS232.c ****     *
 630:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
 631:Generated_Source\PSoC5/RS232.c ****     *  No.
 632:Generated_Source\PSoC5/RS232.c ****     *
 633:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/RS232.c ****     uint16 RS232_GetByte(void) 
 635:Generated_Source\PSoC5/RS232.c ****     {
 552              		.loc 1 635 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 22


 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/RS232.c ****         
 637:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/RS232.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/RS232.c ****         RS232_DisableRxInt();
 560              		.loc 1 640 0
 561 0002 0223     		movs	r3, #2
 562 0004 064A     		ldr	r2, .L47
 563 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/RS232.c ****         locErrorStatus = (uint16)RS232_errorStatus;
 564              		.loc 1 641 0
 565 0008 064A     		ldr	r2, .L47+4
 566 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 567              	.LVL45:
 642:Generated_Source\PSoC5/RS232.c ****         RS232_errorStatus = 0u;
 568              		.loc 1 642 0
 569 000c 0021     		movs	r1, #0
 570 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/RS232.c ****         RS232_EnableRxInt();
 571              		.loc 1 643 0
 572 0010 054A     		ldr	r2, .L47+8
 573 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/RS232.c ****         return ( (uint16)(locErrorStatus << 8u) | RS232_ReadRxData() );
 574              		.loc 1 644 0
 575 0014 2402     		lsls	r4, r4, #8
 576              	.LVL46:
 577 0016 FFF7FEFF 		bl	RS232_ReadRxData
 578              	.LVL47:
 579 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/RS232.c ****     #else
 646:Generated_Source\PSoC5/RS232.c ****         return ( ((uint16)RS232_ReadRxStatus() << 8u) | RS232_ReadRxData() );
 647:Generated_Source\PSoC5/RS232.c ****     #endif /* RS232_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/RS232.c ****         
 649:Generated_Source\PSoC5/RS232.c ****     }
 580              		.loc 1 649 0
 581 001c 80B2     		uxth	r0, r0
 582 001e 10BD     		pop	{r4, pc}
 583              	.L48:
 584              		.align	2
 585              	.L47:
 586 0020 80E100E0 		.word	-536813184
 587 0024 00000000 		.word	.LANCHOR0
 588 0028 00E100E0 		.word	-536813312
 589              		.cfi_endproc
 590              	.LFE10:
 591              		.size	RS232_GetByte, .-RS232_GetByte
 592              		.section	.text.RS232_GetRxBufferSize,"ax",%progbits
 593              		.align	2
 594              		.global	RS232_GetRxBufferSize
 595              		.thumb
 596              		.thumb_func
 597              		.type	RS232_GetRxBufferSize, %function
 598              	RS232_GetRxBufferSize:
 599              	.LFB11:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 23


 650:Generated_Source\PSoC5/RS232.c **** 
 651:Generated_Source\PSoC5/RS232.c **** 
 652:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_GetRxBufferSize
 654:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/RS232.c ****     *
 656:Generated_Source\PSoC5/RS232.c ****     * Summary:
 657:Generated_Source\PSoC5/RS232.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/RS232.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/RS232.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/RS232.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/RS232.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/RS232.c ****     *    account.
 663:Generated_Source\PSoC5/RS232.c ****     *
 664:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 665:Generated_Source\PSoC5/RS232.c ****     *  None.
 666:Generated_Source\PSoC5/RS232.c ****     *
 667:Generated_Source\PSoC5/RS232.c ****     * Return:
 668:Generated_Source\PSoC5/RS232.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/RS232.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/RS232.c ****     *
 671:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 672:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/RS232.c ****     *
 676:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
 677:Generated_Source\PSoC5/RS232.c ****     *  No.
 678:Generated_Source\PSoC5/RS232.c ****     *
 679:Generated_Source\PSoC5/RS232.c ****     * Theory:
 680:Generated_Source\PSoC5/RS232.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/RS232.c ****     *
 682:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/RS232.c ****     uint16 RS232_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/RS232.c ****                                                             
 685:Generated_Source\PSoC5/RS232.c ****     {
 600              		.loc 1 685 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 686:Generated_Source\PSoC5/RS232.c ****         uint16 size;
 687:Generated_Source\PSoC5/RS232.c **** 
 688:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/RS232.c **** 
 690:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/RS232.c ****         RS232_DisableRxInt();
 605              		.loc 1 691 0
 606 0000 0222     		movs	r2, #2
 607 0002 174B     		ldr	r3, .L54
 608 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/RS232.c **** 
 693:Generated_Source\PSoC5/RS232.c ****         if(RS232_rxBufferRead == RS232_rxBufferWrite)
 609              		.loc 1 693 0
 610 0006 174B     		ldr	r3, .L54+4
 611 0008 5A88     		ldrh	r2, [r3, #2]
 612 000a 92B2     		uxth	r2, r2
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 24


 613 000c 9B88     		ldrh	r3, [r3, #4]
 614 000e 9BB2     		uxth	r3, r3
 615 0010 9A42     		cmp	r2, r3
 616 0012 07D1     		bne	.L50
 694:Generated_Source\PSoC5/RS232.c ****         {
 695:Generated_Source\PSoC5/RS232.c ****             if(RS232_rxBufferLoopDetect != 0u)
 617              		.loc 1 695 0
 618 0014 134B     		ldr	r3, .L54+4
 619 0016 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 620 0018 13F0FF0F 		tst	r3, #255
 621 001c 1BD0     		beq	.L53
 696:Generated_Source\PSoC5/RS232.c ****             {
 697:Generated_Source\PSoC5/RS232.c ****                 size = RS232_RX_BUFFER_SIZE;
 622              		.loc 1 697 0
 623 001e 4FF48070 		mov	r0, #256
 624 0022 19E0     		b	.L51
 625              	.L50:
 698:Generated_Source\PSoC5/RS232.c ****             }
 699:Generated_Source\PSoC5/RS232.c ****             else
 700:Generated_Source\PSoC5/RS232.c ****             {
 701:Generated_Source\PSoC5/RS232.c ****                 size = 0u;
 702:Generated_Source\PSoC5/RS232.c ****             }
 703:Generated_Source\PSoC5/RS232.c ****         }
 704:Generated_Source\PSoC5/RS232.c ****         else if(RS232_rxBufferRead < RS232_rxBufferWrite)
 626              		.loc 1 704 0
 627 0024 0F4B     		ldr	r3, .L54+4
 628 0026 5A88     		ldrh	r2, [r3, #2]
 629 0028 92B2     		uxth	r2, r2
 630 002a 9B88     		ldrh	r3, [r3, #4]
 631 002c 9BB2     		uxth	r3, r3
 632 002e 9A42     		cmp	r2, r3
 633 0030 07D2     		bcs	.L52
 705:Generated_Source\PSoC5/RS232.c ****         {
 706:Generated_Source\PSoC5/RS232.c ****             size = (RS232_rxBufferWrite - RS232_rxBufferRead);
 634              		.loc 1 706 0
 635 0032 0C4A     		ldr	r2, .L54+4
 636 0034 9088     		ldrh	r0, [r2, #4]
 637 0036 83B2     		uxth	r3, r0
 638 0038 5088     		ldrh	r0, [r2, #2]
 639 003a 80B2     		uxth	r0, r0
 640 003c 181A     		subs	r0, r3, r0
 641 003e 80B2     		uxth	r0, r0
 642              	.LVL48:
 643 0040 0AE0     		b	.L51
 644              	.LVL49:
 645              	.L52:
 707:Generated_Source\PSoC5/RS232.c ****         }
 708:Generated_Source\PSoC5/RS232.c ****         else
 709:Generated_Source\PSoC5/RS232.c ****         {
 710:Generated_Source\PSoC5/RS232.c ****             size = (RS232_RX_BUFFER_SIZE - RS232_rxBufferRead) + RS232_rxBufferWrite;
 646              		.loc 1 710 0
 647 0042 084A     		ldr	r2, .L54+4
 648 0044 9088     		ldrh	r0, [r2, #4]
 649 0046 83B2     		uxth	r3, r0
 650 0048 5088     		ldrh	r0, [r2, #2]
 651 004a 80B2     		uxth	r0, r0
 652 004c 181A     		subs	r0, r3, r0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 25


 653 004e 00F58070 		add	r0, r0, #256
 654 0052 80B2     		uxth	r0, r0
 655              	.LVL50:
 656 0054 00E0     		b	.L51
 657              	.LVL51:
 658              	.L53:
 701:Generated_Source\PSoC5/RS232.c ****             }
 659              		.loc 1 701 0
 660 0056 0020     		movs	r0, #0
 661              	.L51:
 662              	.LVL52:
 711:Generated_Source\PSoC5/RS232.c ****         }
 712:Generated_Source\PSoC5/RS232.c **** 
 713:Generated_Source\PSoC5/RS232.c ****         RS232_EnableRxInt();
 663              		.loc 1 713 0
 664 0058 0222     		movs	r2, #2
 665 005a 034B     		ldr	r3, .L54+8
 666 005c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/RS232.c **** 
 715:Generated_Source\PSoC5/RS232.c ****     #else
 716:Generated_Source\PSoC5/RS232.c **** 
 717:Generated_Source\PSoC5/RS232.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/RS232.c ****         size = ((RS232_RXSTATUS_REG & RS232_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/RS232.c **** 
 720:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/RS232.c **** 
 722:Generated_Source\PSoC5/RS232.c ****         return(size);
 723:Generated_Source\PSoC5/RS232.c ****     }
 667              		.loc 1 723 0
 668 005e 7047     		bx	lr
 669              	.L55:
 670              		.align	2
 671              	.L54:
 672 0060 80E100E0 		.word	-536813184
 673 0064 00000000 		.word	.LANCHOR0
 674 0068 00E100E0 		.word	-536813312
 675              		.cfi_endproc
 676              	.LFE11:
 677              		.size	RS232_GetRxBufferSize, .-RS232_GetRxBufferSize
 678              		.section	.text.RS232_ClearRxBuffer,"ax",%progbits
 679              		.align	2
 680              		.global	RS232_ClearRxBuffer
 681              		.thumb
 682              		.thumb_func
 683              		.type	RS232_ClearRxBuffer, %function
 684              	RS232_ClearRxBuffer:
 685              	.LFB12:
 724:Generated_Source\PSoC5/RS232.c **** 
 725:Generated_Source\PSoC5/RS232.c **** 
 726:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_ClearRxBuffer
 728:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/RS232.c ****     *
 730:Generated_Source\PSoC5/RS232.c ****     * Summary:
 731:Generated_Source\PSoC5/RS232.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/RS232.c ****     *
 733:Generated_Source\PSoC5/RS232.c ****     * Parameters:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 26


 734:Generated_Source\PSoC5/RS232.c ****     *  None.
 735:Generated_Source\PSoC5/RS232.c ****     *
 736:Generated_Source\PSoC5/RS232.c ****     * Return:
 737:Generated_Source\PSoC5/RS232.c ****     *  None.
 738:Generated_Source\PSoC5/RS232.c ****     *
 739:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 740:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/RS232.c ****     *
 745:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
 746:Generated_Source\PSoC5/RS232.c ****     *  No.
 747:Generated_Source\PSoC5/RS232.c ****     *
 748:Generated_Source\PSoC5/RS232.c ****     * Theory:
 749:Generated_Source\PSoC5/RS232.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/RS232.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/RS232.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/RS232.c ****     *
 753:Generated_Source\PSoC5/RS232.c ****     * Side Effects:
 754:Generated_Source\PSoC5/RS232.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/RS232.c ****     *
 756:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/RS232.c ****     void RS232_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/RS232.c ****     {
 686              		.loc 1 758 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690 0000 08B5     		push	{r3, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/RS232.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/RS232.c **** 
 761:Generated_Source\PSoC5/RS232.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/RS232.c ****         enableInterrupts = CyEnterCriticalSection();
 694              		.loc 1 762 0
 695 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 696              	.LVL53:
 763:Generated_Source\PSoC5/RS232.c ****         RS232_RXDATA_AUX_CTL_REG |= (uint8)  RS232_RX_FIFO_CLR;
 697              		.loc 1 763 0
 698 0006 0B4B     		ldr	r3, .L58
 699 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 700 000a 42F00102 		orr	r2, r2, #1
 701 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/RS232.c ****         RS232_RXDATA_AUX_CTL_REG &= (uint8) ~RS232_RX_FIFO_CLR;
 702              		.loc 1 764 0
 703 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 704 0012 02F0FE02 		and	r2, r2, #254
 705 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/RS232.c ****         CyExitCriticalSection(enableInterrupts);
 706              		.loc 1 765 0
 707 0018 FFF7FEFF 		bl	CyExitCriticalSection
 708              	.LVL54:
 766:Generated_Source\PSoC5/RS232.c **** 
 767:Generated_Source\PSoC5/RS232.c ****     #if (RS232_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 27


 768:Generated_Source\PSoC5/RS232.c **** 
 769:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/RS232.c ****         RS232_DisableRxInt();
 709              		.loc 1 770 0
 710 001c 0221     		movs	r1, #2
 711 001e 064B     		ldr	r3, .L58+4
 712 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/RS232.c **** 
 772:Generated_Source\PSoC5/RS232.c ****         RS232_rxBufferRead = 0u;
 713              		.loc 1 772 0
 714 0022 064B     		ldr	r3, .L58+8
 715 0024 0022     		movs	r2, #0
 716 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 773:Generated_Source\PSoC5/RS232.c ****         RS232_rxBufferWrite = 0u;
 717              		.loc 1 773 0
 718 0028 9A80     		strh	r2, [r3, #4]	@ movhi
 774:Generated_Source\PSoC5/RS232.c ****         RS232_rxBufferLoopDetect = 0u;
 719              		.loc 1 774 0
 720 002a 9A71     		strb	r2, [r3, #6]
 775:Generated_Source\PSoC5/RS232.c ****         RS232_rxBufferOverflow = 0u;
 721              		.loc 1 775 0
 722 002c DA71     		strb	r2, [r3, #7]
 776:Generated_Source\PSoC5/RS232.c **** 
 777:Generated_Source\PSoC5/RS232.c ****         RS232_EnableRxInt();
 723              		.loc 1 777 0
 724 002e 044B     		ldr	r3, .L58+12
 725 0030 1960     		str	r1, [r3]
 726 0032 08BD     		pop	{r3, pc}
 727              	.L59:
 728              		.align	2
 729              	.L58:
 730 0034 99640040 		.word	1073767577
 731 0038 80E100E0 		.word	-536813184
 732 003c 00000000 		.word	.LANCHOR0
 733 0040 00E100E0 		.word	-536813312
 734              		.cfi_endproc
 735              	.LFE12:
 736              		.size	RS232_ClearRxBuffer, .-RS232_ClearRxBuffer
 737              		.section	.text.RS232_SetRxAddressMode,"ax",%progbits
 738              		.align	2
 739              		.global	RS232_SetRxAddressMode
 740              		.thumb
 741              		.thumb_func
 742              		.type	RS232_SetRxAddressMode, %function
 743              	RS232_SetRxAddressMode:
 744              	.LFB13:
 778:Generated_Source\PSoC5/RS232.c **** 
 779:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/RS232.c **** 
 781:Generated_Source\PSoC5/RS232.c ****     }
 782:Generated_Source\PSoC5/RS232.c **** 
 783:Generated_Source\PSoC5/RS232.c **** 
 784:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetRxAddressMode
 786:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/RS232.c ****     *
 788:Generated_Source\PSoC5/RS232.c ****     * Summary:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 28


 789:Generated_Source\PSoC5/RS232.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/RS232.c ****     *  UART.
 791:Generated_Source\PSoC5/RS232.c ****     *
 792:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 793:Generated_Source\PSoC5/RS232.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/RS232.c ****     *  RS232__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/RS232.c ****     *                                               detection
 796:Generated_Source\PSoC5/RS232.c ****     *  RS232__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/RS232.c ****     *                                               address detection
 798:Generated_Source\PSoC5/RS232.c ****     *  RS232__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/RS232.c ****     *                                               detection
 800:Generated_Source\PSoC5/RS232.c ****     *  RS232__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/RS232.c ****     *                                               address detection
 802:Generated_Source\PSoC5/RS232.c ****     *  RS232__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/RS232.c ****     *
 804:Generated_Source\PSoC5/RS232.c ****     * Return:
 805:Generated_Source\PSoC5/RS232.c ****     *  None.
 806:Generated_Source\PSoC5/RS232.c ****     *
 807:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 808:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/RS232.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/RS232.c ****     *  RS232_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/RS232.c ****     *
 812:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/RS232.c ****     void RS232_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/RS232.c ****                                                         
 815:Generated_Source\PSoC5/RS232.c ****     {
 745              		.loc 1 815 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 750              	.LVL55:
 751 0000 7047     		bx	lr
 752              		.cfi_endproc
 753              	.LFE13:
 754              		.size	RS232_SetRxAddressMode, .-RS232_SetRxAddressMode
 755 0002 00BF     		.section	.text.RS232_SetRxAddress1,"ax",%progbits
 756              		.align	2
 757              		.global	RS232_SetRxAddress1
 758              		.thumb
 759              		.thumb_func
 760              		.type	RS232_SetRxAddress1, %function
 761              	RS232_SetRxAddress1:
 762              	.LFB14:
 816:Generated_Source\PSoC5/RS232.c ****         #if(RS232_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/RS232.c ****             #if(RS232_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/RS232.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/RS232.c ****                 {
 820:Generated_Source\PSoC5/RS232.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/RS232.c ****                 }
 822:Generated_Source\PSoC5/RS232.c ****             #else /* RS232_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/RS232.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/RS232.c ****                 tmpCtrl = RS232_CONTROL_REG & (uint8)~RS232_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/RS232.c ****                 tmpCtrl |= (uint8)(addressMode << RS232_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/RS232.c ****                 RS232_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 29


 828:Generated_Source\PSoC5/RS232.c ****                 #if(RS232_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/RS232.c ****                    (RS232_RXBUFFERSIZE > RS232_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/RS232.c ****                     RS232_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/RS232.c ****                     RS232_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/RS232.c ****                 #endif /* End RS232_RXBUFFERSIZE > RS232_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/RS232.c ****             #endif /* End RS232_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/RS232.c ****         #else /* RS232_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/RS232.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/RS232.c ****             {
 837:Generated_Source\PSoC5/RS232.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/RS232.c ****             }
 839:Generated_Source\PSoC5/RS232.c ****         #endif /* End RS232_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/RS232.c ****     }
 841:Generated_Source\PSoC5/RS232.c **** 
 842:Generated_Source\PSoC5/RS232.c **** 
 843:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetRxAddress1
 845:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/RS232.c ****     *
 847:Generated_Source\PSoC5/RS232.c ****     * Summary:
 848:Generated_Source\PSoC5/RS232.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/RS232.c ****     *
 850:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 851:Generated_Source\PSoC5/RS232.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/RS232.c ****     *
 853:Generated_Source\PSoC5/RS232.c ****     * Return:
 854:Generated_Source\PSoC5/RS232.c ****     *  None.
 855:Generated_Source\PSoC5/RS232.c ****     *
 856:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/RS232.c ****     void RS232_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/RS232.c ****     {
 763              		.loc 1 858 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              	.LVL56:
 859:Generated_Source\PSoC5/RS232.c ****         RS232_RXADDRESS1_REG = address;
 769              		.loc 1 859 0
 770 0000 014B     		ldr	r3, .L62
 771 0002 1870     		strb	r0, [r3]
 772 0004 7047     		bx	lr
 773              	.L63:
 774 0006 00BF     		.align	2
 775              	.L62:
 776 0008 29640040 		.word	1073767465
 777              		.cfi_endproc
 778              	.LFE14:
 779              		.size	RS232_SetRxAddress1, .-RS232_SetRxAddress1
 780              		.section	.text.RS232_SetRxAddress2,"ax",%progbits
 781              		.align	2
 782              		.global	RS232_SetRxAddress2
 783              		.thumb
 784              		.thumb_func
 785              		.type	RS232_SetRxAddress2, %function
 786              	RS232_SetRxAddress2:
 787              	.LFB15:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 30


 860:Generated_Source\PSoC5/RS232.c ****     }
 861:Generated_Source\PSoC5/RS232.c **** 
 862:Generated_Source\PSoC5/RS232.c **** 
 863:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetRxAddress2
 865:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/RS232.c ****     *
 867:Generated_Source\PSoC5/RS232.c ****     * Summary:
 868:Generated_Source\PSoC5/RS232.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/RS232.c ****     *
 870:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 871:Generated_Source\PSoC5/RS232.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/RS232.c ****     *
 873:Generated_Source\PSoC5/RS232.c ****     * Return:
 874:Generated_Source\PSoC5/RS232.c ****     *  None.
 875:Generated_Source\PSoC5/RS232.c ****     *
 876:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/RS232.c ****     void RS232_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/RS232.c ****     {
 788              		.loc 1 878 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793              	.LVL57:
 879:Generated_Source\PSoC5/RS232.c ****         RS232_RXADDRESS2_REG = address;
 794              		.loc 1 879 0
 795 0000 014B     		ldr	r3, .L65
 796 0002 1870     		strb	r0, [r3]
 797 0004 7047     		bx	lr
 798              	.L66:
 799 0006 00BF     		.align	2
 800              	.L65:
 801 0008 39640040 		.word	1073767481
 802              		.cfi_endproc
 803              	.LFE15:
 804              		.size	RS232_SetRxAddress2, .-RS232_SetRxAddress2
 805              		.section	.text.RS232_SetTxInterruptMode,"ax",%progbits
 806              		.align	2
 807              		.global	RS232_SetTxInterruptMode
 808              		.thumb
 809              		.thumb_func
 810              		.type	RS232_SetTxInterruptMode, %function
 811              	RS232_SetTxInterruptMode:
 812              	.LFB16:
 880:Generated_Source\PSoC5/RS232.c ****     }
 881:Generated_Source\PSoC5/RS232.c **** 
 882:Generated_Source\PSoC5/RS232.c **** #endif  /* RS232_RX_ENABLED || RS232_HD_ENABLED*/
 883:Generated_Source\PSoC5/RS232.c **** 
 884:Generated_Source\PSoC5/RS232.c **** 
 885:Generated_Source\PSoC5/RS232.c **** #if( (RS232_TX_ENABLED) || (RS232_HD_ENABLED) )
 886:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetTxInterruptMode
 888:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/RS232.c ****     *
 890:Generated_Source\PSoC5/RS232.c ****     * Summary:
 891:Generated_Source\PSoC5/RS232.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 31


 892:Generated_Source\PSoC5/RS232.c ****     *  interrupt.
 893:Generated_Source\PSoC5/RS232.c ****     *
 894:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 895:Generated_Source\PSoC5/RS232.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/RS232.c ****     *   RS232_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/RS232.c ****     *   RS232_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/RS232.c ****     *   RS232_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/RS232.c ****     *   RS232_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/RS232.c ****     *
 901:Generated_Source\PSoC5/RS232.c ****     * Return:
 902:Generated_Source\PSoC5/RS232.c ****     *  None.
 903:Generated_Source\PSoC5/RS232.c ****     *
 904:Generated_Source\PSoC5/RS232.c ****     * Theory:
 905:Generated_Source\PSoC5/RS232.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/RS232.c ****     *
 907:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/RS232.c ****     void RS232_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/RS232.c ****     {
 813              		.loc 1 909 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 818              	.LVL58:
 910:Generated_Source\PSoC5/RS232.c ****         RS232_TXSTATUS_MASK_REG = intSrc;
 819              		.loc 1 910 0
 820 0000 014B     		ldr	r3, .L68
 821 0002 1870     		strb	r0, [r3]
 822 0004 7047     		bx	lr
 823              	.L69:
 824 0006 00BF     		.align	2
 825              	.L68:
 826 0008 84640040 		.word	1073767556
 827              		.cfi_endproc
 828              	.LFE16:
 829              		.size	RS232_SetTxInterruptMode, .-RS232_SetTxInterruptMode
 830              		.section	.text.RS232_WriteTxData,"ax",%progbits
 831              		.align	2
 832              		.global	RS232_WriteTxData
 833              		.thumb
 834              		.thumb_func
 835              		.type	RS232_WriteTxData, %function
 836              	RS232_WriteTxData:
 837              	.LFB17:
 911:Generated_Source\PSoC5/RS232.c ****     }
 912:Generated_Source\PSoC5/RS232.c **** 
 913:Generated_Source\PSoC5/RS232.c **** 
 914:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_WriteTxData
 916:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/RS232.c ****     *
 918:Generated_Source\PSoC5/RS232.c ****     * Summary:
 919:Generated_Source\PSoC5/RS232.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/RS232.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/RS232.c ****     *  separately.
 922:Generated_Source\PSoC5/RS232.c ****     *
 923:Generated_Source\PSoC5/RS232.c ****     * Parameters:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 32


 924:Generated_Source\PSoC5/RS232.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/RS232.c ****     *
 926:Generated_Source\PSoC5/RS232.c ****     * Return:
 927:Generated_Source\PSoC5/RS232.c ****     * None.
 928:Generated_Source\PSoC5/RS232.c ****     *
 929:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
 930:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/RS232.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/RS232.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/RS232.c ****     *    initialized.
 937:Generated_Source\PSoC5/RS232.c ****     *
 938:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
 939:Generated_Source\PSoC5/RS232.c ****     *  No.
 940:Generated_Source\PSoC5/RS232.c ****     *
 941:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/RS232.c ****     void RS232_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/RS232.c ****     {
 838              		.loc 1 943 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843              	.LVL59:
 944:Generated_Source\PSoC5/RS232.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/RS232.c ****         if(RS232_initVar != 0u)
 844              		.loc 1 945 0
 845 0000 024B     		ldr	r3, .L72
 846 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 847 0004 0BB1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/RS232.c ****         {
 947:Generated_Source\PSoC5/RS232.c ****         #if (RS232_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/RS232.c **** 
 949:Generated_Source\PSoC5/RS232.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/RS232.c ****             RS232_DisableTxInt();
 951:Generated_Source\PSoC5/RS232.c **** 
 952:Generated_Source\PSoC5/RS232.c ****             if( (RS232_txBufferRead == RS232_txBufferWrite) &&
 953:Generated_Source\PSoC5/RS232.c ****                 ((RS232_TXSTATUS_REG & RS232_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/RS232.c ****             {
 955:Generated_Source\PSoC5/RS232.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/RS232.c ****                 RS232_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/RS232.c ****             }
 958:Generated_Source\PSoC5/RS232.c ****             else
 959:Generated_Source\PSoC5/RS232.c ****             {
 960:Generated_Source\PSoC5/RS232.c ****                 if(RS232_txBufferWrite >= RS232_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/RS232.c ****                 {
 962:Generated_Source\PSoC5/RS232.c ****                     RS232_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/RS232.c ****                 }
 964:Generated_Source\PSoC5/RS232.c **** 
 965:Generated_Source\PSoC5/RS232.c ****                 RS232_txBuffer[RS232_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/RS232.c **** 
 967:Generated_Source\PSoC5/RS232.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/RS232.c ****                 RS232_txBufferWrite++;
 969:Generated_Source\PSoC5/RS232.c ****             }
 970:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 33


 971:Generated_Source\PSoC5/RS232.c ****             RS232_EnableTxInt();
 972:Generated_Source\PSoC5/RS232.c **** 
 973:Generated_Source\PSoC5/RS232.c ****         #else
 974:Generated_Source\PSoC5/RS232.c **** 
 975:Generated_Source\PSoC5/RS232.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/RS232.c ****             RS232_TXDATA_REG = txDataByte;
 848              		.loc 1 976 0
 849 0006 024B     		ldr	r3, .L72+4
 850 0008 1870     		strb	r0, [r3]
 851              	.L70:
 852 000a 7047     		bx	lr
 853              	.L73:
 854              		.align	2
 855              	.L72:
 856 000c 00000000 		.word	.LANCHOR0
 857 0010 47640040 		.word	1073767495
 858              		.cfi_endproc
 859              	.LFE17:
 860              		.size	RS232_WriteTxData, .-RS232_WriteTxData
 861              		.section	.text.RS232_ReadTxStatus,"ax",%progbits
 862              		.align	2
 863              		.global	RS232_ReadTxStatus
 864              		.thumb
 865              		.thumb_func
 866              		.type	RS232_ReadTxStatus, %function
 867              	RS232_ReadTxStatus:
 868              	.LFB18:
 977:Generated_Source\PSoC5/RS232.c **** 
 978:Generated_Source\PSoC5/RS232.c ****         #endif /*(RS232_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/RS232.c ****         }
 980:Generated_Source\PSoC5/RS232.c ****     }
 981:Generated_Source\PSoC5/RS232.c **** 
 982:Generated_Source\PSoC5/RS232.c **** 
 983:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_ReadTxStatus
 985:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/RS232.c ****     *
 987:Generated_Source\PSoC5/RS232.c ****     * Summary:
 988:Generated_Source\PSoC5/RS232.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/RS232.c ****     *
 990:Generated_Source\PSoC5/RS232.c ****     * Parameters:
 991:Generated_Source\PSoC5/RS232.c ****     *  None.
 992:Generated_Source\PSoC5/RS232.c ****     *
 993:Generated_Source\PSoC5/RS232.c ****     * Return:
 994:Generated_Source\PSoC5/RS232.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/RS232.c ****     *
 996:Generated_Source\PSoC5/RS232.c ****     * Theory:
 997:Generated_Source\PSoC5/RS232.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/RS232.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/RS232.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/RS232.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/RS232.c ****     *
1002:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/RS232.c ****     {
 869              		.loc 1 1004 0
 870              		.cfi_startproc
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 34


 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              		@ link register save eliminated.
1005:Generated_Source\PSoC5/RS232.c ****         return(RS232_TXSTATUS_REG);
 874              		.loc 1 1005 0
 875 0000 014B     		ldr	r3, .L75
 876 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/RS232.c ****     }
 877              		.loc 1 1006 0
 878 0004 7047     		bx	lr
 879              	.L76:
 880 0006 00BF     		.align	2
 881              	.L75:
 882 0008 64640040 		.word	1073767524
 883              		.cfi_endproc
 884              	.LFE18:
 885              		.size	RS232_ReadTxStatus, .-RS232_ReadTxStatus
 886              		.section	.text.RS232_PutChar,"ax",%progbits
 887              		.align	2
 888              		.global	RS232_PutChar
 889              		.thumb
 890              		.thumb_func
 891              		.type	RS232_PutChar, %function
 892              	RS232_PutChar:
 893              	.LFB19:
1007:Generated_Source\PSoC5/RS232.c **** 
1008:Generated_Source\PSoC5/RS232.c **** 
1009:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_PutChar
1011:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/RS232.c ****     *
1013:Generated_Source\PSoC5/RS232.c ****     * Summary:
1014:Generated_Source\PSoC5/RS232.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/RS232.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/RS232.c ****     *  hold the data.
1017:Generated_Source\PSoC5/RS232.c ****     *
1018:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1019:Generated_Source\PSoC5/RS232.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/RS232.c ****     *
1021:Generated_Source\PSoC5/RS232.c ****     * Return:
1022:Generated_Source\PSoC5/RS232.c ****     *  None.
1023:Generated_Source\PSoC5/RS232.c ****     *
1024:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1025:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/RS232.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/RS232.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/RS232.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/RS232.c ****     *     initialized.
1033:Generated_Source\PSoC5/RS232.c ****     *
1034:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1035:Generated_Source\PSoC5/RS232.c ****     *  No.
1036:Generated_Source\PSoC5/RS232.c ****     *
1037:Generated_Source\PSoC5/RS232.c ****     * Theory:
1038:Generated_Source\PSoC5/RS232.c ****     *  Allows the user to transmit any byte of data in a single transfer
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 35


1039:Generated_Source\PSoC5/RS232.c ****     *
1040:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/RS232.c ****     void RS232_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/RS232.c ****     {
 894              		.loc 1 1042 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL60:
 900              	.L78:
1043:Generated_Source\PSoC5/RS232.c ****     #if (RS232_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/RS232.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/RS232.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/RS232.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/RS232.c ****         */
1048:Generated_Source\PSoC5/RS232.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/RS232.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/RS232.c **** 
1051:Generated_Source\PSoC5/RS232.c ****         do
1052:Generated_Source\PSoC5/RS232.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/RS232.c **** 
1054:Generated_Source\PSoC5/RS232.c ****         #if ((RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/RS232.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/RS232.c ****             RS232_DisableTxInt();
1057:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/RS232.c **** 
1059:Generated_Source\PSoC5/RS232.c ****             locTxBufferWrite = RS232_txBufferWrite;
1060:Generated_Source\PSoC5/RS232.c ****             locTxBufferRead  = RS232_txBufferRead;
1061:Generated_Source\PSoC5/RS232.c **** 
1062:Generated_Source\PSoC5/RS232.c ****         #if ((RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/RS232.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/RS232.c ****             RS232_EnableTxInt();
1065:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/RS232.c ****         }
1067:Generated_Source\PSoC5/RS232.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/RS232.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/RS232.c ****                                 (uint8)(RS232_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/RS232.c **** 
1071:Generated_Source\PSoC5/RS232.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/RS232.c ****             ((RS232_TXSTATUS_REG & RS232_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/RS232.c ****         {
1074:Generated_Source\PSoC5/RS232.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/RS232.c ****             RS232_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/RS232.c ****         }
1077:Generated_Source\PSoC5/RS232.c ****         else
1078:Generated_Source\PSoC5/RS232.c ****         {
1079:Generated_Source\PSoC5/RS232.c ****             if(locTxBufferWrite >= RS232_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/RS232.c ****             {
1081:Generated_Source\PSoC5/RS232.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/RS232.c ****             }
1083:Generated_Source\PSoC5/RS232.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/RS232.c ****             RS232_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/RS232.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/RS232.c **** 
1087:Generated_Source\PSoC5/RS232.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/RS232.c ****         #if ((RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 36


1089:Generated_Source\PSoC5/RS232.c ****             RS232_DisableTxInt();
1090:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/RS232.c **** 
1092:Generated_Source\PSoC5/RS232.c ****             RS232_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/RS232.c **** 
1094:Generated_Source\PSoC5/RS232.c ****         #if ((RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/RS232.c ****             RS232_EnableTxInt();
1096:Generated_Source\PSoC5/RS232.c ****         #endif /* (RS232_TX_BUFFER_SIZE > RS232_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/RS232.c **** 
1098:Generated_Source\PSoC5/RS232.c ****             if(0u != (RS232_TXSTATUS_REG & RS232_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/RS232.c ****             {
1100:Generated_Source\PSoC5/RS232.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/RS232.c ****                 RS232_SetPendingTxInt();
1102:Generated_Source\PSoC5/RS232.c ****             }
1103:Generated_Source\PSoC5/RS232.c ****         }
1104:Generated_Source\PSoC5/RS232.c **** 
1105:Generated_Source\PSoC5/RS232.c ****     #else
1106:Generated_Source\PSoC5/RS232.c **** 
1107:Generated_Source\PSoC5/RS232.c ****         while((RS232_TXSTATUS_REG & RS232_TX_STS_FIFO_FULL) != 0u)
 901              		.loc 1 1107 0 discriminator 1
 902 0000 034B     		ldr	r3, .L79
 903 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0004 13F0040F 		tst	r3, #4
 905 0008 FAD1     		bne	.L78
1108:Generated_Source\PSoC5/RS232.c ****         {
1109:Generated_Source\PSoC5/RS232.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/RS232.c ****         }
1111:Generated_Source\PSoC5/RS232.c **** 
1112:Generated_Source\PSoC5/RS232.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/RS232.c ****         RS232_TXDATA_REG = txDataByte;
 906              		.loc 1 1113 0
 907 000a 024B     		ldr	r3, .L79+4
 908 000c 1870     		strb	r0, [r3]
 909 000e 7047     		bx	lr
 910              	.L80:
 911              		.align	2
 912              	.L79:
 913 0010 64640040 		.word	1073767524
 914 0014 47640040 		.word	1073767495
 915              		.cfi_endproc
 916              	.LFE19:
 917              		.size	RS232_PutChar, .-RS232_PutChar
 918              		.section	.text.RS232_PutString,"ax",%progbits
 919              		.align	2
 920              		.global	RS232_PutString
 921              		.thumb
 922              		.thumb_func
 923              		.type	RS232_PutString, %function
 924              	RS232_PutString:
 925              	.LFB20:
1114:Generated_Source\PSoC5/RS232.c **** 
1115:Generated_Source\PSoC5/RS232.c ****     #endif /* RS232_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/RS232.c ****     }
1117:Generated_Source\PSoC5/RS232.c **** 
1118:Generated_Source\PSoC5/RS232.c **** 
1119:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_PutString
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 37


1121:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/RS232.c ****     *
1123:Generated_Source\PSoC5/RS232.c ****     * Summary:
1124:Generated_Source\PSoC5/RS232.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/RS232.c ****     *
1126:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1127:Generated_Source\PSoC5/RS232.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/RS232.c ****     *
1129:Generated_Source\PSoC5/RS232.c ****     * Return:
1130:Generated_Source\PSoC5/RS232.c ****     *  None.
1131:Generated_Source\PSoC5/RS232.c ****     *
1132:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1133:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/RS232.c ****     *     initialized.
1135:Generated_Source\PSoC5/RS232.c ****     *
1136:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1137:Generated_Source\PSoC5/RS232.c ****     *  No.
1138:Generated_Source\PSoC5/RS232.c ****     *
1139:Generated_Source\PSoC5/RS232.c ****     * Theory:
1140:Generated_Source\PSoC5/RS232.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/RS232.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/RS232.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/RS232.c ****     *
1144:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/RS232.c ****     void RS232_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/RS232.c ****     {
 926              		.loc 1 1146 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              	.LVL61:
 931 0000 38B5     		push	{r3, r4, r5, lr}
 932              		.cfi_def_cfa_offset 16
 933              		.cfi_offset 3, -16
 934              		.cfi_offset 4, -12
 935              		.cfi_offset 5, -8
 936              		.cfi_offset 14, -4
 937              	.LVL62:
1147:Generated_Source\PSoC5/RS232.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/RS232.c **** 
1149:Generated_Source\PSoC5/RS232.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/RS232.c ****         if(RS232_initVar != 0u)
 938              		.loc 1 1150 0
 939 0002 074B     		ldr	r3, .L87
 940 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 941 0006 2BB9     		cbnz	r3, .L85
 942 0008 38BD     		pop	{r3, r4, r5, pc}
 943              	.LVL63:
 944              	.L84:
1151:Generated_Source\PSoC5/RS232.c ****         {
1152:Generated_Source\PSoC5/RS232.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/RS232.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/RS232.c ****             {
1155:Generated_Source\PSoC5/RS232.c ****                 RS232_PutChar((uint8)string[bufIndex]);
 945              		.loc 1 1155 0
 946 000a FFF7FEFF 		bl	RS232_PutChar
 947              	.LVL64:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 38


1156:Generated_Source\PSoC5/RS232.c ****                 bufIndex++;
 948              		.loc 1 1156 0
 949 000e 0134     		adds	r4, r4, #1
 950              	.LVL65:
 951 0010 A4B2     		uxth	r4, r4
 952              	.LVL66:
 953 0012 01E0     		b	.L82
 954              	.LVL67:
 955              	.L85:
 956 0014 0546     		mov	r5, r0
 957 0016 0024     		movs	r4, #0
 958              	.LVL68:
 959              	.L82:
1153:Generated_Source\PSoC5/RS232.c ****             {
 960              		.loc 1 1153 0
 961 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 962 001a 0028     		cmp	r0, #0
 963 001c F5D1     		bne	.L84
 964 001e 38BD     		pop	{r3, r4, r5, pc}
 965              	.LVL69:
 966              	.L88:
 967              		.align	2
 968              	.L87:
 969 0020 00000000 		.word	.LANCHOR0
 970              		.cfi_endproc
 971              	.LFE20:
 972              		.size	RS232_PutString, .-RS232_PutString
 973              		.section	.text.RS232_PutArray,"ax",%progbits
 974              		.align	2
 975              		.global	RS232_PutArray
 976              		.thumb
 977              		.thumb_func
 978              		.type	RS232_PutArray, %function
 979              	RS232_PutArray:
 980              	.LFB21:
1157:Generated_Source\PSoC5/RS232.c ****             }
1158:Generated_Source\PSoC5/RS232.c ****         }
1159:Generated_Source\PSoC5/RS232.c ****     }
1160:Generated_Source\PSoC5/RS232.c **** 
1161:Generated_Source\PSoC5/RS232.c **** 
1162:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_PutArray
1164:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/RS232.c ****     *
1166:Generated_Source\PSoC5/RS232.c ****     * Summary:
1167:Generated_Source\PSoC5/RS232.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/RS232.c ****     *  transmission.
1169:Generated_Source\PSoC5/RS232.c ****     *
1170:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1171:Generated_Source\PSoC5/RS232.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/RS232.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/RS232.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/RS232.c ****     *
1175:Generated_Source\PSoC5/RS232.c ****     * Return:
1176:Generated_Source\PSoC5/RS232.c ****     *  None.
1177:Generated_Source\PSoC5/RS232.c ****     *
1178:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 39


1179:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/RS232.c ****     *     initialized.
1181:Generated_Source\PSoC5/RS232.c ****     *
1182:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1183:Generated_Source\PSoC5/RS232.c ****     *  No.
1184:Generated_Source\PSoC5/RS232.c ****     *
1185:Generated_Source\PSoC5/RS232.c ****     * Theory:
1186:Generated_Source\PSoC5/RS232.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/RS232.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/RS232.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/RS232.c ****     *
1190:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/RS232.c ****     void RS232_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/RS232.c ****                                                                     
1193:Generated_Source\PSoC5/RS232.c ****     {
 981              		.loc 1 1193 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL70:
1194:Generated_Source\PSoC5/RS232.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/RS232.c **** 
1196:Generated_Source\PSoC5/RS232.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/RS232.c ****         if(RS232_initVar != 0u)
 986              		.loc 1 1197 0
 987 0000 084B     		ldr	r3, .L95
 988 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 989 0004 33B9     		cbnz	r3, .L93
 990 0006 7047     		bx	lr
 991              	.LVL71:
 992              	.L92:
 993              		.cfi_def_cfa_offset 16
 994              		.cfi_offset 4, -16
 995              		.cfi_offset 5, -12
 996              		.cfi_offset 6, -8
 997              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/RS232.c ****         {
1199:Generated_Source\PSoC5/RS232.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/RS232.c ****             {
1201:Generated_Source\PSoC5/RS232.c ****                 RS232_PutChar(string[bufIndex]);
 998              		.loc 1 1201 0
 999 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 1000 000a FFF7FEFF 		bl	RS232_PutChar
 1001              	.LVL72:
1202:Generated_Source\PSoC5/RS232.c ****                 bufIndex++;
 1002              		.loc 1 1202 0
 1003 000e 0134     		adds	r4, r4, #1
 1004              	.LVL73:
 1005 0010 E4B2     		uxtb	r4, r4
 1006              	.LVL74:
 1007 0012 03E0     		b	.L90
 1008              	.LVL75:
 1009              	.L93:
 1010              		.cfi_def_cfa_offset 0
 1011              		.cfi_restore 4
 1012              		.cfi_restore 5
 1013              		.cfi_restore 6
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 40


 1014              		.cfi_restore 14
1193:Generated_Source\PSoC5/RS232.c ****         uint8 bufIndex = 0u;
 1015              		.loc 1 1193 0
 1016 0014 70B5     		push	{r4, r5, r6, lr}
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 4, -16
 1019              		.cfi_offset 5, -12
 1020              		.cfi_offset 6, -8
 1021              		.cfi_offset 14, -4
 1022 0016 0D46     		mov	r5, r1
 1023 0018 0646     		mov	r6, r0
 1024 001a 0024     		movs	r4, #0
 1025              	.LVL76:
 1026              	.L90:
1199:Generated_Source\PSoC5/RS232.c ****             {
 1027              		.loc 1 1199 0
 1028 001c AC42     		cmp	r4, r5
 1029 001e F3D3     		bcc	.L92
 1030 0020 70BD     		pop	{r4, r5, r6, pc}
 1031              	.LVL77:
 1032              	.L96:
 1033 0022 00BF     		.align	2
 1034              	.L95:
 1035 0024 00000000 		.word	.LANCHOR0
 1036              		.cfi_endproc
 1037              	.LFE21:
 1038              		.size	RS232_PutArray, .-RS232_PutArray
 1039              		.section	.text.RS232_PutCRLF,"ax",%progbits
 1040              		.align	2
 1041              		.global	RS232_PutCRLF
 1042              		.thumb
 1043              		.thumb_func
 1044              		.type	RS232_PutCRLF, %function
 1045              	RS232_PutCRLF:
 1046              	.LFB22:
1203:Generated_Source\PSoC5/RS232.c ****             }
1204:Generated_Source\PSoC5/RS232.c ****         }
1205:Generated_Source\PSoC5/RS232.c ****     }
1206:Generated_Source\PSoC5/RS232.c **** 
1207:Generated_Source\PSoC5/RS232.c **** 
1208:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_PutCRLF
1210:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/RS232.c ****     *
1212:Generated_Source\PSoC5/RS232.c ****     * Summary:
1213:Generated_Source\PSoC5/RS232.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/RS232.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/RS232.c ****     *
1216:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1217:Generated_Source\PSoC5/RS232.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/RS232.c ****     *
1219:Generated_Source\PSoC5/RS232.c ****     * Return:
1220:Generated_Source\PSoC5/RS232.c ****     *  None.
1221:Generated_Source\PSoC5/RS232.c ****     *
1222:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1223:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/RS232.c ****     *     initialized.
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 41


1225:Generated_Source\PSoC5/RS232.c ****     *
1226:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1227:Generated_Source\PSoC5/RS232.c ****     *  No.
1228:Generated_Source\PSoC5/RS232.c ****     *
1229:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/RS232.c ****     void RS232_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/RS232.c ****     {
 1047              		.loc 1 1231 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              	.LVL78:
 1052 0000 08B5     		push	{r3, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 3, -8
 1055              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/RS232.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/RS232.c ****         if(RS232_initVar != 0u)
 1056              		.loc 1 1233 0
 1057 0002 064B     		ldr	r3, .L100
 1058 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1059 0006 3BB1     		cbz	r3, .L97
1234:Generated_Source\PSoC5/RS232.c ****         {
1235:Generated_Source\PSoC5/RS232.c ****             RS232_PutChar(txDataByte);
 1060              		.loc 1 1235 0
 1061 0008 FFF7FEFF 		bl	RS232_PutChar
 1062              	.LVL79:
1236:Generated_Source\PSoC5/RS232.c ****             RS232_PutChar(0x0Du);
 1063              		.loc 1 1236 0
 1064 000c 0D20     		movs	r0, #13
 1065 000e FFF7FEFF 		bl	RS232_PutChar
 1066              	.LVL80:
1237:Generated_Source\PSoC5/RS232.c ****             RS232_PutChar(0x0Au);
 1067              		.loc 1 1237 0
 1068 0012 0A20     		movs	r0, #10
 1069 0014 FFF7FEFF 		bl	RS232_PutChar
 1070              	.LVL81:
 1071              	.L97:
 1072 0018 08BD     		pop	{r3, pc}
 1073              	.L101:
 1074 001a 00BF     		.align	2
 1075              	.L100:
 1076 001c 00000000 		.word	.LANCHOR0
 1077              		.cfi_endproc
 1078              	.LFE22:
 1079              		.size	RS232_PutCRLF, .-RS232_PutCRLF
 1080              		.section	.text.RS232_GetTxBufferSize,"ax",%progbits
 1081              		.align	2
 1082              		.global	RS232_GetTxBufferSize
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	RS232_GetTxBufferSize, %function
 1086              	RS232_GetTxBufferSize:
 1087              	.LFB23:
1238:Generated_Source\PSoC5/RS232.c ****         }
1239:Generated_Source\PSoC5/RS232.c ****     }
1240:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 42


1241:Generated_Source\PSoC5/RS232.c **** 
1242:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_GetTxBufferSize
1244:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/RS232.c ****     *
1246:Generated_Source\PSoC5/RS232.c ****     * Summary:
1247:Generated_Source\PSoC5/RS232.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/RS232.c ****     *  transmitted.
1249:Generated_Source\PSoC5/RS232.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/RS232.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/RS232.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/RS232.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/RS232.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/RS232.c ****     *
1255:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1256:Generated_Source\PSoC5/RS232.c ****     *  None.
1257:Generated_Source\PSoC5/RS232.c ****     *
1258:Generated_Source\PSoC5/RS232.c ****     * Return:
1259:Generated_Source\PSoC5/RS232.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/RS232.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/RS232.c ****     *
1262:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1263:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/RS232.c ****     *
1266:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1267:Generated_Source\PSoC5/RS232.c ****     *  No.
1268:Generated_Source\PSoC5/RS232.c ****     *
1269:Generated_Source\PSoC5/RS232.c ****     * Theory:
1270:Generated_Source\PSoC5/RS232.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/RS232.c ****     *
1272:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/RS232.c ****     uint8 RS232_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/RS232.c ****                                                             
1275:Generated_Source\PSoC5/RS232.c ****     {
 1088              		.loc 1 1275 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
1276:Generated_Source\PSoC5/RS232.c ****         uint8 size;
1277:Generated_Source\PSoC5/RS232.c **** 
1278:Generated_Source\PSoC5/RS232.c ****     #if (RS232_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/RS232.c **** 
1280:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/RS232.c ****         RS232_DisableTxInt();
1282:Generated_Source\PSoC5/RS232.c **** 
1283:Generated_Source\PSoC5/RS232.c ****         if(RS232_txBufferRead == RS232_txBufferWrite)
1284:Generated_Source\PSoC5/RS232.c ****         {
1285:Generated_Source\PSoC5/RS232.c ****             size = 0u;
1286:Generated_Source\PSoC5/RS232.c ****         }
1287:Generated_Source\PSoC5/RS232.c ****         else if(RS232_txBufferRead < RS232_txBufferWrite)
1288:Generated_Source\PSoC5/RS232.c ****         {
1289:Generated_Source\PSoC5/RS232.c ****             size = (RS232_txBufferWrite - RS232_txBufferRead);
1290:Generated_Source\PSoC5/RS232.c ****         }
1291:Generated_Source\PSoC5/RS232.c ****         else
1292:Generated_Source\PSoC5/RS232.c ****         {
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 43


1293:Generated_Source\PSoC5/RS232.c ****             size = (RS232_TX_BUFFER_SIZE - RS232_txBufferRead) +
1294:Generated_Source\PSoC5/RS232.c ****                     RS232_txBufferWrite;
1295:Generated_Source\PSoC5/RS232.c ****         }
1296:Generated_Source\PSoC5/RS232.c **** 
1297:Generated_Source\PSoC5/RS232.c ****         RS232_EnableTxInt();
1298:Generated_Source\PSoC5/RS232.c **** 
1299:Generated_Source\PSoC5/RS232.c ****     #else
1300:Generated_Source\PSoC5/RS232.c **** 
1301:Generated_Source\PSoC5/RS232.c ****         size = RS232_TXSTATUS_REG;
 1093              		.loc 1 1301 0
 1094 0000 074B     		ldr	r3, .L106
 1095 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 0004 DBB2     		uxtb	r3, r3
 1097              	.LVL82:
1302:Generated_Source\PSoC5/RS232.c **** 
1303:Generated_Source\PSoC5/RS232.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/RS232.c ****         if((size & RS232_TX_STS_FIFO_FULL) != 0u)
 1098              		.loc 1 1304 0
 1099 0006 13F0040F 		tst	r3, #4
 1100 000a 04D1     		bne	.L104
1305:Generated_Source\PSoC5/RS232.c ****         {
1306:Generated_Source\PSoC5/RS232.c ****             size = RS232_FIFO_LENGTH;
1307:Generated_Source\PSoC5/RS232.c ****         }
1308:Generated_Source\PSoC5/RS232.c ****         else if((size & RS232_TX_STS_FIFO_EMPTY) != 0u)
 1101              		.loc 1 1308 0
 1102 000c 13F0020F 		tst	r3, #2
 1103 0010 03D0     		beq	.L105
1309:Generated_Source\PSoC5/RS232.c ****         {
1310:Generated_Source\PSoC5/RS232.c ****             size = 0u;
 1104              		.loc 1 1310 0
 1105 0012 0020     		movs	r0, #0
 1106 0014 7047     		bx	lr
 1107              	.L104:
1306:Generated_Source\PSoC5/RS232.c ****         }
 1108              		.loc 1 1306 0
 1109 0016 0420     		movs	r0, #4
 1110 0018 7047     		bx	lr
 1111              	.L105:
1311:Generated_Source\PSoC5/RS232.c ****         }
1312:Generated_Source\PSoC5/RS232.c ****         else
1313:Generated_Source\PSoC5/RS232.c ****         {
1314:Generated_Source\PSoC5/RS232.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/RS232.c ****             size = 1u;
 1112              		.loc 1 1315 0
 1113 001a 0120     		movs	r0, #1
 1114              	.LVL83:
1316:Generated_Source\PSoC5/RS232.c ****         }
1317:Generated_Source\PSoC5/RS232.c **** 
1318:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/RS232.c **** 
1320:Generated_Source\PSoC5/RS232.c ****     return(size);
1321:Generated_Source\PSoC5/RS232.c ****     }
 1115              		.loc 1 1321 0
 1116 001c 7047     		bx	lr
 1117              	.L107:
 1118 001e 00BF     		.align	2
 1119              	.L106:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 44


 1120 0020 64640040 		.word	1073767524
 1121              		.cfi_endproc
 1122              	.LFE23:
 1123              		.size	RS232_GetTxBufferSize, .-RS232_GetTxBufferSize
 1124              		.section	.text.RS232_ClearTxBuffer,"ax",%progbits
 1125              		.align	2
 1126              		.global	RS232_ClearTxBuffer
 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	RS232_ClearTxBuffer, %function
 1130              	RS232_ClearTxBuffer:
 1131              	.LFB24:
1322:Generated_Source\PSoC5/RS232.c **** 
1323:Generated_Source\PSoC5/RS232.c **** 
1324:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_ClearTxBuffer
1326:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/RS232.c ****     *
1328:Generated_Source\PSoC5/RS232.c ****     * Summary:
1329:Generated_Source\PSoC5/RS232.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/RS232.c ****     *
1331:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1332:Generated_Source\PSoC5/RS232.c ****     *  None.
1333:Generated_Source\PSoC5/RS232.c ****     *
1334:Generated_Source\PSoC5/RS232.c ****     * Return:
1335:Generated_Source\PSoC5/RS232.c ****     *  None.
1336:Generated_Source\PSoC5/RS232.c ****     *
1337:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1338:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/RS232.c ****     *  RS232_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/RS232.c ****     *
1341:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1342:Generated_Source\PSoC5/RS232.c ****     *  No.
1343:Generated_Source\PSoC5/RS232.c ****     *
1344:Generated_Source\PSoC5/RS232.c ****     * Theory:
1345:Generated_Source\PSoC5/RS232.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/RS232.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/RS232.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/RS232.c ****     *
1349:Generated_Source\PSoC5/RS232.c ****     * Side Effects:
1350:Generated_Source\PSoC5/RS232.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/RS232.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/RS232.c ****     *
1353:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/RS232.c ****     void RS232_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/RS232.c ****     {
 1132              		.loc 1 1355 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136 0000 08B5     		push	{r3, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 3, -8
 1139              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/RS232.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/RS232.c **** 
1358:Generated_Source\PSoC5/RS232.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 45


 1140              		.loc 1 1358 0
 1141 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1142              	.LVL84:
1359:Generated_Source\PSoC5/RS232.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/RS232.c ****         RS232_TXDATA_AUX_CTL_REG |= (uint8)  RS232_TX_FIFO_CLR;
 1143              		.loc 1 1360 0
 1144 0006 064B     		ldr	r3, .L110
 1145 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1146 000a 42F00102 		orr	r2, r2, #1
 1147 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/RS232.c ****         RS232_TXDATA_AUX_CTL_REG &= (uint8) ~RS232_TX_FIFO_CLR;
 1148              		.loc 1 1361 0
 1149 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1150 0012 02F0FE02 		and	r2, r2, #254
 1151 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/RS232.c ****         CyExitCriticalSection(enableInterrupts);
 1152              		.loc 1 1362 0
 1153 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1154              	.LVL85:
 1155 001c 08BD     		pop	{r3, pc}
 1156              	.L111:
 1157 001e 00BF     		.align	2
 1158              	.L110:
 1159 0020 97640040 		.word	1073767575
 1160              		.cfi_endproc
 1161              	.LFE24:
 1162              		.size	RS232_ClearTxBuffer, .-RS232_ClearTxBuffer
 1163              		.section	.text.RS232_SendBreak,"ax",%progbits
 1164              		.align	2
 1165              		.global	RS232_SendBreak
 1166              		.thumb
 1167              		.thumb_func
 1168              		.type	RS232_SendBreak, %function
 1169              	RS232_SendBreak:
 1170              	.LFB25:
1363:Generated_Source\PSoC5/RS232.c **** 
1364:Generated_Source\PSoC5/RS232.c ****     #if (RS232_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/RS232.c **** 
1366:Generated_Source\PSoC5/RS232.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/RS232.c ****         RS232_DisableTxInt();
1368:Generated_Source\PSoC5/RS232.c **** 
1369:Generated_Source\PSoC5/RS232.c ****         RS232_txBufferRead = 0u;
1370:Generated_Source\PSoC5/RS232.c ****         RS232_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/RS232.c **** 
1372:Generated_Source\PSoC5/RS232.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/RS232.c ****         RS232_EnableTxInt();
1374:Generated_Source\PSoC5/RS232.c **** 
1375:Generated_Source\PSoC5/RS232.c ****     #endif /* (RS232_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/RS232.c ****     }
1377:Generated_Source\PSoC5/RS232.c **** 
1378:Generated_Source\PSoC5/RS232.c **** 
1379:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SendBreak
1381:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/RS232.c ****     *
1383:Generated_Source\PSoC5/RS232.c ****     * Summary:
1384:Generated_Source\PSoC5/RS232.c ****     *  Transmits a break signal on the bus.
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 46


1385:Generated_Source\PSoC5/RS232.c ****     *
1386:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1387:Generated_Source\PSoC5/RS232.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/RS232.c ****     *   RS232_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/RS232.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/RS232.c ****     *   RS232_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/RS232.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/RS232.c ****     *   RS232_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/RS232.c ****     *       then return.
1394:Generated_Source\PSoC5/RS232.c ****     *   RS232_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/RS232.c ****     *      RS232_SEND_BREAK and RS232_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/RS232.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/RS232.c ****     *
1398:Generated_Source\PSoC5/RS232.c ****     * Return:
1399:Generated_Source\PSoC5/RS232.c ****     *  None.
1400:Generated_Source\PSoC5/RS232.c ****     *
1401:Generated_Source\PSoC5/RS232.c ****     * Global Variables:
1402:Generated_Source\PSoC5/RS232.c ****     *  RS232_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/RS232.c ****     *     initialized.
1404:Generated_Source\PSoC5/RS232.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/RS232.c ****     *
1406:Generated_Source\PSoC5/RS232.c ****     * Reentrant:
1407:Generated_Source\PSoC5/RS232.c ****     *  No.
1408:Generated_Source\PSoC5/RS232.c ****     *
1409:Generated_Source\PSoC5/RS232.c ****     * Theory:
1410:Generated_Source\PSoC5/RS232.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/RS232.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/RS232.c ****     *  operation.
1413:Generated_Source\PSoC5/RS232.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/RS232.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/RS232.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/RS232.c ****     *     complete.
1417:Generated_Source\PSoC5/RS232.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/RS232.c ****     *     operation
1419:Generated_Source\PSoC5/RS232.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/RS232.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/RS232.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/RS232.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/RS232.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/RS232.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/RS232.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/RS232.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/RS232.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/RS232.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/RS232.c ****     *     When interrupt appear with RS232_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/RS232.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/RS232.c ****     *
1432:Generated_Source\PSoC5/RS232.c ****     * Side Effects:
1433:Generated_Source\PSoC5/RS232.c ****     *  The RS232_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/RS232.c ****     *  break signal.
1435:Generated_Source\PSoC5/RS232.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/RS232.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/RS232.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/RS232.c ****     *
1439:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/RS232.c ****     void RS232_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/RS232.c ****     {
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 47


 1171              		.loc 1 1441 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL86:
1442:Generated_Source\PSoC5/RS232.c **** 
1443:Generated_Source\PSoC5/RS232.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/RS232.c ****         if(RS232_initVar != 0u)
 1177              		.loc 1 1444 0
 1178 0000 124B     		ldr	r3, .L119
 1179 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1180 0004 0BB3     		cbz	r3, .L112
 1181              	.LBB2:
1445:Generated_Source\PSoC5/RS232.c ****         {
1446:Generated_Source\PSoC5/RS232.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/RS232.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/RS232.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/RS232.c **** 
1450:Generated_Source\PSoC5/RS232.c ****         #if(RS232_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/RS232.c **** 
1452:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_SEND_BREAK) ||
1453:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/RS232.c ****             {
1455:Generated_Source\PSoC5/RS232.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/RS232.c ****                 RS232_WriteControlRegister(RS232_ReadControlRegister() |
1457:Generated_Source\PSoC5/RS232.c ****                                                       RS232_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/RS232.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/RS232.c ****                 RS232_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/RS232.c **** 
1461:Generated_Source\PSoC5/RS232.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/RS232.c ****                 {
1463:Generated_Source\PSoC5/RS232.c ****                     tmpStat = RS232_TXSTATUS_REG;
1464:Generated_Source\PSoC5/RS232.c ****                 }
1465:Generated_Source\PSoC5/RS232.c ****                 while((tmpStat & RS232_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/RS232.c ****             }
1467:Generated_Source\PSoC5/RS232.c **** 
1468:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/RS232.c ****             {
1471:Generated_Source\PSoC5/RS232.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/RS232.c ****                 {
1473:Generated_Source\PSoC5/RS232.c ****                     tmpStat = RS232_TXSTATUS_REG;
1474:Generated_Source\PSoC5/RS232.c ****                 }
1475:Generated_Source\PSoC5/RS232.c ****                 while(((uint8)~tmpStat & RS232_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/RS232.c ****             }
1477:Generated_Source\PSoC5/RS232.c **** 
1478:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_REINIT) ||
1480:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/RS232.c ****             {
1482:Generated_Source\PSoC5/RS232.c ****                 RS232_WriteControlRegister(RS232_ReadControlRegister() &
1483:Generated_Source\PSoC5/RS232.c ****                                               (uint8)~RS232_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/RS232.c ****             }
1485:Generated_Source\PSoC5/RS232.c **** 
1486:Generated_Source\PSoC5/RS232.c ****         #else /* RS232_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/RS232.c **** 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 48


1488:Generated_Source\PSoC5/RS232.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/RS232.c **** 
1490:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_SEND_BREAK) ||
 1182              		.loc 1 1490 0
 1183 0006 08B1     		cbz	r0, .L114
 1184              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1185 0008 0328     		cmp	r0, #3
 1186 000a 0DD1     		bne	.L115
 1187              	.L114:
1491:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/RS232.c ****             {
1493:Generated_Source\PSoC5/RS232.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/RS232.c ****                 #if( (RS232_PARITY_TYPE != RS232__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/RS232.c ****                                     (RS232_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/RS232.c ****                     RS232_WriteControlRegister(RS232_ReadControlRegister() |
1497:Generated_Source\PSoC5/RS232.c ****                                                           RS232_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/RS232.c ****                 #endif /* End RS232_PARITY_TYPE != RS232__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/RS232.c **** 
1500:Generated_Source\PSoC5/RS232.c ****                 #if(RS232_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/RS232.c ****                     txPeriod = RS232_TXBITCLKTX_COMPLETE_REG;
 1188              		.loc 1 1501 0 is_stmt 1
 1189 000c 104B     		ldr	r3, .L119+4
 1190 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1191 0010 0E4A     		ldr	r2, .L119
 1192 0012 1172     		strb	r1, [r2, #8]
1502:Generated_Source\PSoC5/RS232.c ****                     RS232_TXBITCLKTX_COMPLETE_REG = RS232_TXBITCTR_BREAKBITS;
 1193              		.loc 1 1502 0
 1194 0014 6722     		movs	r2, #103
 1195 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/RS232.c ****                 #else
1504:Generated_Source\PSoC5/RS232.c ****                     txPeriod = RS232_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/RS232.c ****                     RS232_TXBITCTR_PERIOD_REG = RS232_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/RS232.c ****                 #endif /* End RS232_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/RS232.c **** 
1508:Generated_Source\PSoC5/RS232.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/RS232.c ****                 RS232_TXDATA_REG = 0u;
 1196              		.loc 1 1509 0
 1197 0018 0022     		movs	r2, #0
 1198 001a 1133     		adds	r3, r3, #17
 1199 001c 1A70     		strb	r2, [r3]
 1200              	.L116:
1510:Generated_Source\PSoC5/RS232.c **** 
1511:Generated_Source\PSoC5/RS232.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/RS232.c ****                 {
1513:Generated_Source\PSoC5/RS232.c ****                     tmpStat = RS232_TXSTATUS_REG;
 1201              		.loc 1 1513 0 discriminator 1
 1202 001e 0D4B     		ldr	r3, .L119+8
 1203 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204              	.LVL87:
1514:Generated_Source\PSoC5/RS232.c ****                 }
1515:Generated_Source\PSoC5/RS232.c ****                 while((tmpStat & RS232_TX_STS_FIFO_EMPTY) != 0u);
 1205              		.loc 1 1515 0 discriminator 1
 1206 0022 13F0020F 		tst	r3, #2
 1207 0026 FAD1     		bne	.L116
 1208              	.LVL88:
 1209              	.L115:
1516:Generated_Source\PSoC5/RS232.c ****             }
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 49


1517:Generated_Source\PSoC5/RS232.c **** 
1518:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_WAIT_FOR_COMPLETE_REINIT) ||
 1210              		.loc 1 1518 0
 1211 0028 0128     		cmp	r0, #1
 1212 002a 01D0     		beq	.L117
 1213              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1214 002c 0328     		cmp	r0, #3
 1215 002e 04D1     		bne	.L118
 1216              	.L117:
1519:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/RS232.c ****             {
1521:Generated_Source\PSoC5/RS232.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/RS232.c ****                 {
1523:Generated_Source\PSoC5/RS232.c ****                     tmpStat = RS232_TXSTATUS_REG;
 1217              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1218 0030 084B     		ldr	r3, .L119+8
 1219 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1220              	.LVL89:
1524:Generated_Source\PSoC5/RS232.c ****                 }
1525:Generated_Source\PSoC5/RS232.c ****                 while(((uint8)~tmpStat & RS232_TX_STS_COMPLETE) != 0u);
 1221              		.loc 1 1525 0 discriminator 1
 1222 0034 13F0010F 		tst	r3, #1
 1223 0038 FAD0     		beq	.L117
 1224              	.LVL90:
 1225              	.L118:
1526:Generated_Source\PSoC5/RS232.c ****             }
1527:Generated_Source\PSoC5/RS232.c **** 
1528:Generated_Source\PSoC5/RS232.c ****             if( (retMode == RS232_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_REINIT) ||
 1226              		.loc 1 1529 0
 1227 003a 0138     		subs	r0, r0, #1
 1228              	.LVL91:
 1229 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_REINIT) ||
 1230              		.loc 1 1528 0
 1231 003e 0228     		cmp	r0, #2
 1232 0040 03D8     		bhi	.L112
1530:Generated_Source\PSoC5/RS232.c ****                 (retMode == RS232_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/RS232.c ****             {
1532:Generated_Source\PSoC5/RS232.c **** 
1533:Generated_Source\PSoC5/RS232.c ****             #if(RS232_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/RS232.c ****                 RS232_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1233              		.loc 1 1534 0
 1234 0042 024B     		ldr	r3, .L119
 1235 0044 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1236 0046 024B     		ldr	r3, .L119+4
 1237 0048 1A70     		strb	r2, [r3]
 1238              	.L112:
 1239 004a 7047     		bx	lr
 1240              	.L120:
 1241              		.align	2
 1242              	.L119:
 1243 004c 00000000 		.word	.LANCHOR0
 1244 0050 36640040 		.word	1073767478
 1245 0054 64640040 		.word	1073767524
 1246              	.LBE2:
 1247              		.cfi_endproc
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 50


 1248              	.LFE25:
 1249              		.size	RS232_SendBreak, .-RS232_SendBreak
 1250              		.section	.text.RS232_SetTxAddressMode,"ax",%progbits
 1251              		.align	2
 1252              		.global	RS232_SetTxAddressMode
 1253              		.thumb
 1254              		.thumb_func
 1255              		.type	RS232_SetTxAddressMode, %function
 1256              	RS232_SetTxAddressMode:
 1257              	.LFB26:
1535:Generated_Source\PSoC5/RS232.c ****             #else
1536:Generated_Source\PSoC5/RS232.c ****                 RS232_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/RS232.c ****             #endif /* End RS232_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/RS232.c **** 
1539:Generated_Source\PSoC5/RS232.c ****             #if( (RS232_PARITY_TYPE != RS232__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/RS232.c ****                  (RS232_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/RS232.c ****                 RS232_WriteControlRegister(RS232_ReadControlRegister() &
1542:Generated_Source\PSoC5/RS232.c ****                                                       (uint8) ~RS232_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/RS232.c ****             #endif /* End RS232_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/RS232.c ****             }
1545:Generated_Source\PSoC5/RS232.c ****         #endif    /* End RS232_HD_ENABLED */
1546:Generated_Source\PSoC5/RS232.c ****         }
1547:Generated_Source\PSoC5/RS232.c ****     }
1548:Generated_Source\PSoC5/RS232.c **** 
1549:Generated_Source\PSoC5/RS232.c **** 
1550:Generated_Source\PSoC5/RS232.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/RS232.c ****     * Function Name: RS232_SetTxAddressMode
1552:Generated_Source\PSoC5/RS232.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/RS232.c ****     *
1554:Generated_Source\PSoC5/RS232.c ****     * Summary:
1555:Generated_Source\PSoC5/RS232.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/RS232.c ****     *
1557:Generated_Source\PSoC5/RS232.c ****     * Parameters:
1558:Generated_Source\PSoC5/RS232.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/RS232.c ****     *       RS232_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/RS232.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/RS232.c ****     *       RS232_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/RS232.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/RS232.c ****     *
1564:Generated_Source\PSoC5/RS232.c ****     * Return:
1565:Generated_Source\PSoC5/RS232.c ****     *  None.
1566:Generated_Source\PSoC5/RS232.c ****     *
1567:Generated_Source\PSoC5/RS232.c ****     * Side Effects:
1568:Generated_Source\PSoC5/RS232.c ****     *  This function sets and clears RS232_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/RS232.c ****     *  register.
1570:Generated_Source\PSoC5/RS232.c ****     *
1571:Generated_Source\PSoC5/RS232.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/RS232.c ****     void RS232_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/RS232.c ****     {
 1258              		.loc 1 1573 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 1263              	.LVL92:
 1264 0000 7047     		bx	lr
 1265              		.cfi_endproc
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 51


 1266              	.LFE26:
 1267              		.size	RS232_SetTxAddressMode, .-RS232_SetTxAddressMode
 1268              		.global	RS232_rxBufferOverflow
 1269              		.global	RS232_rxBufferLoopDetect
 1270              		.global	RS232_rxBufferWrite
 1271              		.global	RS232_rxBufferRead
 1272              		.comm	RS232_rxBuffer,256,4
 1273              		.global	RS232_errorStatus
 1274              		.global	RS232_initVar
 1275 0002 00BF     		.bss
 1276              		.align	1
 1277              		.set	.LANCHOR0,. + 0
 1278              		.type	RS232_errorStatus, %object
 1279              		.size	RS232_errorStatus, 1
 1280              	RS232_errorStatus:
 1281 0000 00       		.space	1
 1282              		.type	RS232_initVar, %object
 1283              		.size	RS232_initVar, 1
 1284              	RS232_initVar:
 1285 0001 00       		.space	1
 1286              		.type	RS232_rxBufferRead, %object
 1287              		.size	RS232_rxBufferRead, 2
 1288              	RS232_rxBufferRead:
 1289 0002 0000     		.space	2
 1290              		.type	RS232_rxBufferWrite, %object
 1291              		.size	RS232_rxBufferWrite, 2
 1292              	RS232_rxBufferWrite:
 1293 0004 0000     		.space	2
 1294              		.type	RS232_rxBufferLoopDetect, %object
 1295              		.size	RS232_rxBufferLoopDetect, 1
 1296              	RS232_rxBufferLoopDetect:
 1297 0006 00       		.space	1
 1298              		.type	RS232_rxBufferOverflow, %object
 1299              		.size	RS232_rxBufferOverflow, 1
 1300              	RS232_rxBufferOverflow:
 1301 0007 00       		.space	1
 1302              		.type	txPeriod.5141, %object
 1303              		.size	txPeriod.5141, 1
 1304              	txPeriod.5141:
 1305 0008 00       		.space	1
 1306              		.text
 1307              	.Letext0:
 1308              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1309              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1310              		.file 4 "Generated_Source\\PSoC5\\RS232_IntClock.h"
 1311              		.section	.debug_info,"",%progbits
 1312              	.Ldebug_info0:
 1313 0000 2E070000 		.4byte	0x72e
 1314 0004 0400     		.2byte	0x4
 1315 0006 00000000 		.4byte	.Ldebug_abbrev0
 1316 000a 04       		.byte	0x4
 1317 000b 01       		.uleb128 0x1
 1318 000c 7D030000 		.4byte	.LASF79
 1319 0010 0C       		.byte	0xc
 1320 0011 DA000000 		.4byte	.LASF80
 1321 0015 CA020000 		.4byte	.LASF81
 1322 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 52


 1323 001d 00000000 		.4byte	0
 1324 0021 00000000 		.4byte	.Ldebug_line0
 1325 0025 02       		.uleb128 0x2
 1326 0026 01       		.byte	0x1
 1327 0027 06       		.byte	0x6
 1328 0028 48000000 		.4byte	.LASF0
 1329 002c 02       		.uleb128 0x2
 1330 002d 01       		.byte	0x1
 1331 002e 08       		.byte	0x8
 1332 002f 4A030000 		.4byte	.LASF1
 1333 0033 02       		.uleb128 0x2
 1334 0034 02       		.byte	0x2
 1335 0035 05       		.byte	0x5
 1336 0036 68030000 		.4byte	.LASF2
 1337 003a 02       		.uleb128 0x2
 1338 003b 02       		.byte	0x2
 1339 003c 07       		.byte	0x7
 1340 003d E4010000 		.4byte	.LASF3
 1341 0041 02       		.uleb128 0x2
 1342 0042 04       		.byte	0x4
 1343 0043 05       		.byte	0x5
 1344 0044 02010000 		.4byte	.LASF4
 1345 0048 02       		.uleb128 0x2
 1346 0049 04       		.byte	0x4
 1347 004a 07       		.byte	0x7
 1348 004b 95010000 		.4byte	.LASF5
 1349 004f 02       		.uleb128 0x2
 1350 0050 08       		.byte	0x8
 1351 0051 05       		.byte	0x5
 1352 0052 CC000000 		.4byte	.LASF6
 1353 0056 02       		.uleb128 0x2
 1354 0057 08       		.byte	0x8
 1355 0058 07       		.byte	0x7
 1356 0059 90000000 		.4byte	.LASF7
 1357 005d 03       		.uleb128 0x3
 1358 005e 04       		.byte	0x4
 1359 005f 05       		.byte	0x5
 1360 0060 696E7400 		.ascii	"int\000"
 1361 0064 02       		.uleb128 0x2
 1362 0065 04       		.byte	0x4
 1363 0066 07       		.byte	0x7
 1364 0067 79010000 		.4byte	.LASF8
 1365 006b 04       		.uleb128 0x4
 1366 006c 1D010000 		.4byte	.LASF9
 1367 0070 02       		.byte	0x2
 1368 0071 E401     		.2byte	0x1e4
 1369 0073 2C000000 		.4byte	0x2c
 1370 0077 04       		.uleb128 0x4
 1371 0078 0C000000 		.4byte	.LASF10
 1372 007c 02       		.byte	0x2
 1373 007d E501     		.2byte	0x1e5
 1374 007f 3A000000 		.4byte	0x3a
 1375 0083 04       		.uleb128 0x4
 1376 0084 5F010000 		.4byte	.LASF11
 1377 0088 02       		.byte	0x2
 1378 0089 E601     		.2byte	0x1e6
 1379 008b 48000000 		.4byte	0x48
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 53


 1380 008f 02       		.uleb128 0x2
 1381 0090 04       		.byte	0x4
 1382 0091 04       		.byte	0x4
 1383 0092 3F030000 		.4byte	.LASF12
 1384 0096 02       		.uleb128 0x2
 1385 0097 08       		.byte	0x8
 1386 0098 04       		.byte	0x4
 1387 0099 3D010000 		.4byte	.LASF13
 1388 009d 04       		.uleb128 0x4
 1389 009e D4040000 		.4byte	.LASF14
 1390 00a2 02       		.byte	0x2
 1391 00a3 F501     		.2byte	0x1f5
 1392 00a5 A9000000 		.4byte	0xa9
 1393 00a9 02       		.uleb128 0x2
 1394 00aa 01       		.byte	0x1
 1395 00ab 08       		.byte	0x8
 1396 00ac 5B040000 		.4byte	.LASF15
 1397 00b0 04       		.uleb128 0x4
 1398 00b1 45030000 		.4byte	.LASF16
 1399 00b5 02       		.byte	0x2
 1400 00b6 8E02     		.2byte	0x28e
 1401 00b8 BC000000 		.4byte	0xbc
 1402 00bc 05       		.uleb128 0x5
 1403 00bd 6B000000 		.4byte	0x6b
 1404 00c1 05       		.uleb128 0x5
 1405 00c2 77000000 		.4byte	0x77
 1406 00c6 04       		.uleb128 0x4
 1407 00c7 3F020000 		.4byte	.LASF17
 1408 00cb 02       		.byte	0x2
 1409 00cc 9002     		.2byte	0x290
 1410 00ce D2000000 		.4byte	0xd2
 1411 00d2 05       		.uleb128 0x5
 1412 00d3 83000000 		.4byte	0x83
 1413 00d7 02       		.uleb128 0x2
 1414 00d8 08       		.byte	0x8
 1415 00d9 04       		.byte	0x4
 1416 00da 85020000 		.4byte	.LASF18
 1417 00de 02       		.uleb128 0x2
 1418 00df 04       		.byte	0x4
 1419 00e0 07       		.byte	0x7
 1420 00e1 7C020000 		.4byte	.LASF19
 1421 00e5 06       		.uleb128 0x6
 1422 00e6 72030000 		.4byte	.LASF20
 1423 00ea 01       		.byte	0x1
 1424 00eb 6A       		.byte	0x6a
 1425 00ec 00000000 		.4byte	.LFB1
 1426 00f0 44000000 		.4byte	.LFE1-.LFB1
 1427 00f4 01       		.uleb128 0x1
 1428 00f5 9C       		.byte	0x9c
 1429 00f6 22010000 		.4byte	0x122
 1430 00fa 07       		.uleb128 0x7
 1431 00fb 0A000000 		.4byte	.LVL0
 1432 00ff EF060000 		.4byte	0x6ef
 1433 0103 0D010000 		.4byte	0x10d
 1434 0107 08       		.uleb128 0x8
 1435 0108 01       		.uleb128 0x1
 1436 0109 50       		.byte	0x50
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 54


 1437 010a 01       		.uleb128 0x1
 1438 010b 31       		.byte	0x31
 1439 010c 00       		.byte	0
 1440 010d 09       		.uleb128 0x9
 1441 010e 12000000 		.4byte	.LVL1
 1442 0112 FA060000 		.4byte	0x6fa
 1443 0116 08       		.uleb128 0x8
 1444 0117 01       		.uleb128 0x1
 1445 0118 50       		.byte	0x50
 1446 0119 01       		.uleb128 0x1
 1447 011a 31       		.byte	0x31
 1448 011b 08       		.uleb128 0x8
 1449 011c 01       		.uleb128 0x1
 1450 011d 51       		.byte	0x51
 1451 011e 01       		.uleb128 0x1
 1452 011f 37       		.byte	0x37
 1453 0120 00       		.byte	0
 1454 0121 00       		.byte	0
 1455 0122 06       		.uleb128 0x6
 1456 0123 29040000 		.4byte	.LASF21
 1457 0127 01       		.byte	0x1
 1458 0128 B7       		.byte	0xb7
 1459 0129 00000000 		.4byte	.LFB2
 1460 012d 48000000 		.4byte	.LFE2-.LFB2
 1461 0131 01       		.uleb128 0x1
 1462 0132 9C       		.byte	0x9c
 1463 0133 69010000 		.4byte	0x169
 1464 0137 0A       		.uleb128 0xa
 1465 0138 F8040000 		.4byte	.LASF24
 1466 013c 01       		.byte	0x1
 1467 013d B9       		.byte	0xb9
 1468 013e 6B000000 		.4byte	0x6b
 1469 0142 00000000 		.4byte	.LLST0
 1470 0146 0B       		.uleb128 0xb
 1471 0147 06000000 		.4byte	.LVL2
 1472 014b 05070000 		.4byte	0x705
 1473 014f 0B       		.uleb128 0xb
 1474 0150 32000000 		.4byte	.LVL4
 1475 0154 10070000 		.4byte	0x710
 1476 0158 09       		.uleb128 0x9
 1477 0159 38000000 		.4byte	.LVL5
 1478 015d 1B070000 		.4byte	0x71b
 1479 0161 08       		.uleb128 0x8
 1480 0162 01       		.uleb128 0x1
 1481 0163 50       		.byte	0x50
 1482 0164 02       		.uleb128 0x2
 1483 0165 74       		.byte	0x74
 1484 0166 00       		.sleb128 0
 1485 0167 00       		.byte	0
 1486 0168 00       		.byte	0
 1487 0169 06       		.uleb128 0x6
 1488 016a 00000000 		.4byte	.LASF22
 1489 016e 01       		.byte	0x1
 1490 016f 4C       		.byte	0x4c
 1491 0170 00000000 		.4byte	.LFB0
 1492 0174 1C000000 		.4byte	.LFE0-.LFB0
 1493 0178 01       		.uleb128 0x1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 55


 1494 0179 9C       		.byte	0x9c
 1495 017a 91010000 		.4byte	0x191
 1496 017e 0B       		.uleb128 0xb
 1497 017f 0C000000 		.4byte	.LVL7
 1498 0183 E5000000 		.4byte	0xe5
 1499 0187 0B       		.uleb128 0xb
 1500 0188 16000000 		.4byte	.LVL8
 1501 018c 22010000 		.4byte	0x122
 1502 0190 00       		.byte	0
 1503 0191 06       		.uleb128 0x6
 1504 0192 66010000 		.4byte	.LASF23
 1505 0196 01       		.byte	0x1
 1506 0197 F0       		.byte	0xf0
 1507 0198 00000000 		.4byte	.LFB3
 1508 019c 48000000 		.4byte	.LFE3-.LFB3
 1509 01a0 01       		.uleb128 0x1
 1510 01a1 9C       		.byte	0x9c
 1511 01a2 D8010000 		.4byte	0x1d8
 1512 01a6 0A       		.uleb128 0xa
 1513 01a7 F8040000 		.4byte	.LASF24
 1514 01ab 01       		.byte	0x1
 1515 01ac F2       		.byte	0xf2
 1516 01ad 6B000000 		.4byte	0x6b
 1517 01b1 13000000 		.4byte	.LLST1
 1518 01b5 0B       		.uleb128 0xb
 1519 01b6 06000000 		.4byte	.LVL9
 1520 01ba 05070000 		.4byte	0x705
 1521 01be 0B       		.uleb128 0xb
 1522 01bf 16000000 		.4byte	.LVL11
 1523 01c3 26070000 		.4byte	0x726
 1524 01c7 09       		.uleb128 0x9
 1525 01c8 36000000 		.4byte	.LVL12
 1526 01cc 1B070000 		.4byte	0x71b
 1527 01d0 08       		.uleb128 0x8
 1528 01d1 01       		.uleb128 0x1
 1529 01d2 50       		.byte	0x50
 1530 01d3 02       		.uleb128 0x2
 1531 01d4 74       		.byte	0x74
 1532 01d5 00       		.sleb128 0
 1533 01d6 00       		.byte	0
 1534 01d7 00       		.byte	0
 1535 01d8 0C       		.uleb128 0xc
 1536 01d9 23010000 		.4byte	.LASF50
 1537 01dd 01       		.byte	0x1
 1538 01de 2701     		.2byte	0x127
 1539 01e0 6B000000 		.4byte	0x6b
 1540 01e4 00000000 		.4byte	.LFB4
 1541 01e8 04000000 		.4byte	.LFE4-.LFB4
 1542 01ec 01       		.uleb128 0x1
 1543 01ed 9C       		.byte	0x9c
 1544 01ee 0D       		.uleb128 0xd
 1545 01ef 79040000 		.4byte	.LASF25
 1546 01f3 01       		.byte	0x1
 1547 01f4 3F01     		.2byte	0x13f
 1548 01f6 00000000 		.4byte	.LFB5
 1549 01fa 02000000 		.4byte	.LFE5-.LFB5
 1550 01fe 01       		.uleb128 0x1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 56


 1551 01ff 9C       		.byte	0x9c
 1552 0200 13020000 		.4byte	0x213
 1553 0204 0E       		.uleb128 0xe
 1554 0205 53040000 		.4byte	.LASF27
 1555 0209 01       		.byte	0x1
 1556 020a 3F01     		.2byte	0x13f
 1557 020c 6B000000 		.4byte	0x6b
 1558 0210 01       		.uleb128 0x1
 1559 0211 50       		.byte	0x50
 1560 0212 00       		.byte	0
 1561 0213 0D       		.uleb128 0xd
 1562 0214 63020000 		.4byte	.LASF26
 1563 0218 01       		.byte	0x1
 1564 0219 6701     		.2byte	0x167
 1565 021b 00000000 		.4byte	.LFB6
 1566 021f 0C000000 		.4byte	.LFE6-.LFB6
 1567 0223 01       		.uleb128 0x1
 1568 0224 9C       		.byte	0x9c
 1569 0225 38020000 		.4byte	0x238
 1570 0229 0E       		.uleb128 0xe
 1571 022a 38020000 		.4byte	.LASF28
 1572 022e 01       		.byte	0x1
 1573 022f 6701     		.2byte	0x167
 1574 0231 6B000000 		.4byte	0x6b
 1575 0235 01       		.uleb128 0x1
 1576 0236 50       		.byte	0x50
 1577 0237 00       		.byte	0
 1578 0238 0F       		.uleb128 0xf
 1579 0239 52050000 		.4byte	.LASF32
 1580 023d 01       		.byte	0x1
 1581 023e 8801     		.2byte	0x188
 1582 0240 6B000000 		.4byte	0x6b
 1583 0244 00000000 		.4byte	.LFB7
 1584 0248 64000000 		.4byte	.LFE7-.LFB7
 1585 024c 01       		.uleb128 0x1
 1586 024d 9C       		.byte	0x9c
 1587 024e 81020000 		.4byte	0x281
 1588 0252 10       		.uleb128 0x10
 1589 0253 45040000 		.4byte	.LASF29
 1590 0257 01       		.byte	0x1
 1591 0258 8A01     		.2byte	0x18a
 1592 025a 6B000000 		.4byte	0x6b
 1593 025e 26000000 		.4byte	.LLST2
 1594 0262 10       		.uleb128 0x10
 1595 0263 E8040000 		.4byte	.LASF30
 1596 0267 01       		.byte	0x1
 1597 0268 8E01     		.2byte	0x18e
 1598 026a 77000000 		.4byte	0x77
 1599 026e 44000000 		.4byte	.LLST3
 1600 0272 11       		.uleb128 0x11
 1601 0273 99020000 		.4byte	.LASF31
 1602 0277 01       		.byte	0x1
 1603 0278 8F01     		.2byte	0x18f
 1604 027a 77000000 		.4byte	0x77
 1605 027e 01       		.uleb128 0x1
 1606 027f 51       		.byte	0x51
 1607 0280 00       		.byte	0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 57


 1608 0281 0F       		.uleb128 0xf
 1609 0282 A7000000 		.4byte	.LASF33
 1610 0286 01       		.byte	0x1
 1611 0287 E501     		.2byte	0x1e5
 1612 0289 6B000000 		.4byte	0x6b
 1613 028d 00000000 		.4byte	.LFB8
 1614 0291 28000000 		.4byte	.LFE8-.LFB8
 1615 0295 01       		.uleb128 0x1
 1616 0296 9C       		.byte	0x9c
 1617 0297 AA020000 		.4byte	0x2aa
 1618 029b 11       		.uleb128 0x11
 1619 029c 09050000 		.4byte	.LASF34
 1620 02a0 01       		.byte	0x1
 1621 02a1 E701     		.2byte	0x1e7
 1622 02a3 6B000000 		.4byte	0x6b
 1623 02a7 01       		.uleb128 0x1
 1624 02a8 50       		.byte	0x50
 1625 02a9 00       		.byte	0
 1626 02aa 0F       		.uleb128 0xf
 1627 02ab DA040000 		.4byte	.LASF35
 1628 02af 01       		.byte	0x1
 1629 02b0 1402     		.2byte	0x214
 1630 02b2 6B000000 		.4byte	0x6b
 1631 02b6 00000000 		.4byte	.LFB9
 1632 02ba 80000000 		.4byte	.LFE9-.LFB9
 1633 02be 01       		.uleb128 0x1
 1634 02bf 9C       		.byte	0x9c
 1635 02c0 03030000 		.4byte	0x303
 1636 02c4 10       		.uleb128 0x10
 1637 02c5 45040000 		.4byte	.LASF29
 1638 02c9 01       		.byte	0x1
 1639 02ca 1602     		.2byte	0x216
 1640 02cc 6B000000 		.4byte	0x6b
 1641 02d0 89000000 		.4byte	.LLST4
 1642 02d4 10       		.uleb128 0x10
 1643 02d5 AA020000 		.4byte	.LASF36
 1644 02d9 01       		.byte	0x1
 1645 02da 1702     		.2byte	0x217
 1646 02dc 6B000000 		.4byte	0x6b
 1647 02e0 D6000000 		.4byte	.LLST5
 1648 02e4 10       		.uleb128 0x10
 1649 02e5 E8040000 		.4byte	.LASF30
 1650 02e9 01       		.byte	0x1
 1651 02ea 1A02     		.2byte	0x21a
 1652 02ec 77000000 		.4byte	0x77
 1653 02f0 E9000000 		.4byte	.LLST6
 1654 02f4 11       		.uleb128 0x11
 1655 02f5 99020000 		.4byte	.LASF31
 1656 02f9 01       		.byte	0x1
 1657 02fa 1B02     		.2byte	0x21b
 1658 02fc 77000000 		.4byte	0x77
 1659 0300 01       		.uleb128 0x1
 1660 0301 51       		.byte	0x51
 1661 0302 00       		.byte	0
 1662 0303 0F       		.uleb128 0xf
 1663 0304 D1010000 		.4byte	.LASF37
 1664 0308 01       		.byte	0x1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 58


 1665 0309 7A02     		.2byte	0x27a
 1666 030b 77000000 		.4byte	0x77
 1667 030f 00000000 		.4byte	.LFB10
 1668 0313 2C000000 		.4byte	.LFE10-.LFB10
 1669 0317 01       		.uleb128 0x1
 1670 0318 9C       		.byte	0x9c
 1671 0319 37030000 		.4byte	0x337
 1672 031d 10       		.uleb128 0x10
 1673 031e 86010000 		.4byte	.LASF38
 1674 0322 01       		.byte	0x1
 1675 0323 7E02     		.2byte	0x27e
 1676 0325 77000000 		.4byte	0x77
 1677 0329 2E010000 		.4byte	.LLST7
 1678 032d 0B       		.uleb128 0xb
 1679 032e 1A000000 		.4byte	.LVL47
 1680 0332 38020000 		.4byte	0x238
 1681 0336 00       		.byte	0
 1682 0337 0F       		.uleb128 0xf
 1683 0338 4D020000 		.4byte	.LASF39
 1684 033c 01       		.byte	0x1
 1685 033d AB02     		.2byte	0x2ab
 1686 033f 77000000 		.4byte	0x77
 1687 0343 00000000 		.4byte	.LFB11
 1688 0347 6C000000 		.4byte	.LFE11-.LFB11
 1689 034b 01       		.uleb128 0x1
 1690 034c 9C       		.byte	0x9c
 1691 034d 62030000 		.4byte	0x362
 1692 0351 10       		.uleb128 0x10
 1693 0352 DF010000 		.4byte	.LASF40
 1694 0356 01       		.byte	0x1
 1695 0357 AE02     		.2byte	0x2ae
 1696 0359 77000000 		.4byte	0x77
 1697 035d 41010000 		.4byte	.LLST8
 1698 0361 00       		.byte	0
 1699 0362 0D       		.uleb128 0xd
 1700 0363 0C020000 		.4byte	.LASF41
 1701 0367 01       		.byte	0x1
 1702 0368 F502     		.2byte	0x2f5
 1703 036a 00000000 		.4byte	.LFB12
 1704 036e 44000000 		.4byte	.LFE12-.LFB12
 1705 0372 01       		.uleb128 0x1
 1706 0373 9C       		.byte	0x9c
 1707 0374 9B030000 		.4byte	0x39b
 1708 0378 10       		.uleb128 0x10
 1709 0379 F8040000 		.4byte	.LASF24
 1710 037d 01       		.byte	0x1
 1711 037e F702     		.2byte	0x2f7
 1712 0380 6B000000 		.4byte	0x6b
 1713 0384 6A010000 		.4byte	.LLST9
 1714 0388 0B       		.uleb128 0xb
 1715 0389 06000000 		.4byte	.LVL53
 1716 038d 05070000 		.4byte	0x705
 1717 0391 0B       		.uleb128 0xb
 1718 0392 1C000000 		.4byte	.LVL54
 1719 0396 1B070000 		.4byte	0x71b
 1720 039a 00       		.byte	0
 1721 039b 0D       		.uleb128 0xd
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 59


 1722 039c B3020000 		.4byte	.LASF42
 1723 03a0 01       		.byte	0x1
 1724 03a1 2D03     		.2byte	0x32d
 1725 03a3 00000000 		.4byte	.LFB13
 1726 03a7 02000000 		.4byte	.LFE13-.LFB13
 1727 03ab 01       		.uleb128 0x1
 1728 03ac 9C       		.byte	0x9c
 1729 03ad C0030000 		.4byte	0x3c0
 1730 03b1 0E       		.uleb128 0xe
 1731 03b2 44010000 		.4byte	.LASF43
 1732 03b6 01       		.byte	0x1
 1733 03b7 2D03     		.2byte	0x32d
 1734 03b9 6B000000 		.4byte	0x6b
 1735 03bd 01       		.uleb128 0x1
 1736 03be 50       		.byte	0x50
 1737 03bf 00       		.byte	0
 1738 03c0 0D       		.uleb128 0xd
 1739 03c1 63050000 		.4byte	.LASF44
 1740 03c5 01       		.byte	0x1
 1741 03c6 5903     		.2byte	0x359
 1742 03c8 00000000 		.4byte	.LFB14
 1743 03cc 0C000000 		.4byte	.LFE14-.LFB14
 1744 03d0 01       		.uleb128 0x1
 1745 03d1 9C       		.byte	0x9c
 1746 03d2 E5030000 		.4byte	0x3e5
 1747 03d6 0E       		.uleb128 0xe
 1748 03d7 91020000 		.4byte	.LASF45
 1749 03db 01       		.byte	0x1
 1750 03dc 5903     		.2byte	0x359
 1751 03de 6B000000 		.4byte	0x6b
 1752 03e2 01       		.uleb128 0x1
 1753 03e3 50       		.byte	0x50
 1754 03e4 00       		.byte	0
 1755 03e5 0D       		.uleb128 0xd
 1756 03e6 77050000 		.4byte	.LASF46
 1757 03ea 01       		.byte	0x1
 1758 03eb 6D03     		.2byte	0x36d
 1759 03ed 00000000 		.4byte	.LFB15
 1760 03f1 0C000000 		.4byte	.LFE15-.LFB15
 1761 03f5 01       		.uleb128 0x1
 1762 03f6 9C       		.byte	0x9c
 1763 03f7 0A040000 		.4byte	0x40a
 1764 03fb 0E       		.uleb128 0xe
 1765 03fc 91020000 		.4byte	.LASF45
 1766 0400 01       		.byte	0x1
 1767 0401 6D03     		.2byte	0x36d
 1768 0403 6B000000 		.4byte	0x6b
 1769 0407 01       		.uleb128 0x1
 1770 0408 50       		.byte	0x50
 1771 0409 00       		.byte	0
 1772 040a 0D       		.uleb128 0xd
 1773 040b BB040000 		.4byte	.LASF47
 1774 040f 01       		.byte	0x1
 1775 0410 8C03     		.2byte	0x38c
 1776 0412 00000000 		.4byte	.LFB16
 1777 0416 0C000000 		.4byte	.LFE16-.LFB16
 1778 041a 01       		.uleb128 0x1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 60


 1779 041b 9C       		.byte	0x9c
 1780 041c 2F040000 		.4byte	0x42f
 1781 0420 0E       		.uleb128 0xe
 1782 0421 38020000 		.4byte	.LASF28
 1783 0425 01       		.byte	0x1
 1784 0426 8C03     		.2byte	0x38c
 1785 0428 6B000000 		.4byte	0x6b
 1786 042c 01       		.uleb128 0x1
 1787 042d 50       		.byte	0x50
 1788 042e 00       		.byte	0
 1789 042f 0D       		.uleb128 0xd
 1790 0430 0B010000 		.4byte	.LASF48
 1791 0434 01       		.byte	0x1
 1792 0435 AE03     		.2byte	0x3ae
 1793 0437 00000000 		.4byte	.LFB17
 1794 043b 14000000 		.4byte	.LFE17-.LFB17
 1795 043f 01       		.uleb128 0x1
 1796 0440 9C       		.byte	0x9c
 1797 0441 54040000 		.4byte	0x454
 1798 0445 0E       		.uleb128 0xe
 1799 0446 29000000 		.4byte	.LASF49
 1800 044a 01       		.byte	0x1
 1801 044b AE03     		.2byte	0x3ae
 1802 044d 6B000000 		.4byte	0x6b
 1803 0451 01       		.uleb128 0x1
 1804 0452 50       		.byte	0x50
 1805 0453 00       		.byte	0
 1806 0454 0C       		.uleb128 0xc
 1807 0455 A7010000 		.4byte	.LASF51
 1808 0459 01       		.byte	0x1
 1809 045a EB03     		.2byte	0x3eb
 1810 045c 6B000000 		.4byte	0x6b
 1811 0460 00000000 		.4byte	.LFB18
 1812 0464 0C000000 		.4byte	.LFE18-.LFB18
 1813 0468 01       		.uleb128 0x1
 1814 0469 9C       		.byte	0x9c
 1815 046a 0D       		.uleb128 0xd
 1816 046b 44050000 		.4byte	.LASF52
 1817 046f 01       		.byte	0x1
 1818 0470 1104     		.2byte	0x411
 1819 0472 00000000 		.4byte	.LFB19
 1820 0476 18000000 		.4byte	.LFE19-.LFB19
 1821 047a 01       		.uleb128 0x1
 1822 047b 9C       		.byte	0x9c
 1823 047c 8F040000 		.4byte	0x48f
 1824 0480 0E       		.uleb128 0xe
 1825 0481 29000000 		.4byte	.LASF49
 1826 0485 01       		.byte	0x1
 1827 0486 1104     		.2byte	0x411
 1828 0488 6B000000 		.4byte	0x6b
 1829 048c 01       		.uleb128 0x1
 1830 048d 50       		.byte	0x50
 1831 048e 00       		.byte	0
 1832 048f 0D       		.uleb128 0xd
 1833 0490 10050000 		.4byte	.LASF53
 1834 0494 01       		.byte	0x1
 1835 0495 7904     		.2byte	0x479
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 61


 1836 0497 00000000 		.4byte	.LFB20
 1837 049b 24000000 		.4byte	.LFE20-.LFB20
 1838 049f 01       		.uleb128 0x1
 1839 04a0 9C       		.byte	0x9c
 1840 04a1 CF040000 		.4byte	0x4cf
 1841 04a5 12       		.uleb128 0x12
 1842 04a6 4C040000 		.4byte	.LASF54
 1843 04aa 01       		.byte	0x1
 1844 04ab 7904     		.2byte	0x479
 1845 04ad CF040000 		.4byte	0x4cf
 1846 04b1 7D010000 		.4byte	.LLST10
 1847 04b5 10       		.uleb128 0x10
 1848 04b6 2F020000 		.4byte	.LASF55
 1849 04ba 01       		.byte	0x1
 1850 04bb 7B04     		.2byte	0x47b
 1851 04bd 77000000 		.4byte	0x77
 1852 04c1 BF010000 		.4byte	.LLST11
 1853 04c5 0B       		.uleb128 0xb
 1854 04c6 0E000000 		.4byte	.LVL64
 1855 04ca 6A040000 		.4byte	0x46a
 1856 04ce 00       		.byte	0
 1857 04cf 13       		.uleb128 0x13
 1858 04d0 04       		.byte	0x4
 1859 04d1 D5040000 		.4byte	0x4d5
 1860 04d5 14       		.uleb128 0x14
 1861 04d6 9D000000 		.4byte	0x9d
 1862 04da 0D       		.uleb128 0xd
 1863 04db 36040000 		.4byte	.LASF56
 1864 04df 01       		.byte	0x1
 1865 04e0 A704     		.2byte	0x4a7
 1866 04e2 00000000 		.4byte	.LFB21
 1867 04e6 28000000 		.4byte	.LFE21-.LFB21
 1868 04ea 01       		.uleb128 0x1
 1869 04eb 9C       		.byte	0x9c
 1870 04ec 2A050000 		.4byte	0x52a
 1871 04f0 12       		.uleb128 0x12
 1872 04f1 4C040000 		.4byte	.LASF54
 1873 04f5 01       		.byte	0x1
 1874 04f6 A704     		.2byte	0x4a7
 1875 04f8 2A050000 		.4byte	0x52a
 1876 04fc 00020000 		.4byte	.LLST12
 1877 0500 12       		.uleb128 0x12
 1878 0501 0B040000 		.4byte	.LASF57
 1879 0505 01       		.byte	0x1
 1880 0506 A704     		.2byte	0x4a7
 1881 0508 6B000000 		.4byte	0x6b
 1882 050c 42020000 		.4byte	.LLST13
 1883 0510 10       		.uleb128 0x10
 1884 0511 2F020000 		.4byte	.LASF55
 1885 0515 01       		.byte	0x1
 1886 0516 AA04     		.2byte	0x4aa
 1887 0518 6B000000 		.4byte	0x6b
 1888 051c 7C020000 		.4byte	.LLST14
 1889 0520 0B       		.uleb128 0xb
 1890 0521 0E000000 		.4byte	.LVL72
 1891 0525 6A040000 		.4byte	0x46a
 1892 0529 00       		.byte	0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 62


 1893 052a 13       		.uleb128 0x13
 1894 052b 04       		.byte	0x4
 1895 052c 30050000 		.4byte	0x530
 1896 0530 14       		.uleb128 0x14
 1897 0531 6B000000 		.4byte	0x6b
 1898 0535 0D       		.uleb128 0xd
 1899 0536 82000000 		.4byte	.LASF58
 1900 053a 01       		.byte	0x1
 1901 053b CE04     		.2byte	0x4ce
 1902 053d 00000000 		.4byte	.LFB22
 1903 0541 20000000 		.4byte	.LFE22-.LFB22
 1904 0545 01       		.uleb128 0x1
 1905 0546 9C       		.byte	0x9c
 1906 0547 87050000 		.4byte	0x587
 1907 054b 12       		.uleb128 0x12
 1908 054c 29000000 		.4byte	.LASF49
 1909 0550 01       		.byte	0x1
 1910 0551 CE04     		.2byte	0x4ce
 1911 0553 6B000000 		.4byte	0x6b
 1912 0557 BD020000 		.4byte	.LLST15
 1913 055b 0B       		.uleb128 0xb
 1914 055c 0C000000 		.4byte	.LVL79
 1915 0560 6A040000 		.4byte	0x46a
 1916 0564 07       		.uleb128 0x7
 1917 0565 12000000 		.4byte	.LVL80
 1918 0569 6A040000 		.4byte	0x46a
 1919 056d 77050000 		.4byte	0x577
 1920 0571 08       		.uleb128 0x8
 1921 0572 01       		.uleb128 0x1
 1922 0573 50       		.byte	0x50
 1923 0574 01       		.uleb128 0x1
 1924 0575 3D       		.byte	0x3d
 1925 0576 00       		.byte	0
 1926 0577 09       		.uleb128 0x9
 1927 0578 18000000 		.4byte	.LVL81
 1928 057c 6A040000 		.4byte	0x46a
 1929 0580 08       		.uleb128 0x8
 1930 0581 01       		.uleb128 0x1
 1931 0582 50       		.byte	0x50
 1932 0583 01       		.uleb128 0x1
 1933 0584 3A       		.byte	0x3a
 1934 0585 00       		.byte	0
 1935 0586 00       		.byte	0
 1936 0587 0F       		.uleb128 0xf
 1937 0588 2E050000 		.4byte	.LASF59
 1938 058c 01       		.byte	0x1
 1939 058d F904     		.2byte	0x4f9
 1940 058f 6B000000 		.4byte	0x6b
 1941 0593 00000000 		.4byte	.LFB23
 1942 0597 24000000 		.4byte	.LFE23-.LFB23
 1943 059b 01       		.uleb128 0x1
 1944 059c 9C       		.byte	0x9c
 1945 059d B2050000 		.4byte	0x5b2
 1946 05a1 10       		.uleb128 0x10
 1947 05a2 DF010000 		.4byte	.LASF40
 1948 05a6 01       		.byte	0x1
 1949 05a7 FC04     		.2byte	0x4fc
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 63


 1950 05a9 6B000000 		.4byte	0x6b
 1951 05ad DE020000 		.4byte	.LLST16
 1952 05b1 00       		.byte	0
 1953 05b2 0D       		.uleb128 0xd
 1954 05b3 A7040000 		.4byte	.LASF60
 1955 05b7 01       		.byte	0x1
 1956 05b8 4A05     		.2byte	0x54a
 1957 05ba 00000000 		.4byte	.LFB24
 1958 05be 24000000 		.4byte	.LFE24-.LFB24
 1959 05c2 01       		.uleb128 0x1
 1960 05c3 9C       		.byte	0x9c
 1961 05c4 EB050000 		.4byte	0x5eb
 1962 05c8 10       		.uleb128 0x10
 1963 05c9 F8040000 		.4byte	.LASF24
 1964 05cd 01       		.byte	0x1
 1965 05ce 4C05     		.2byte	0x54c
 1966 05d0 6B000000 		.4byte	0x6b
 1967 05d4 FC020000 		.4byte	.LLST17
 1968 05d8 0B       		.uleb128 0xb
 1969 05d9 06000000 		.4byte	.LVL84
 1970 05dd 05070000 		.4byte	0x705
 1971 05e1 0B       		.uleb128 0xb
 1972 05e2 1C000000 		.4byte	.LVL85
 1973 05e6 1B070000 		.4byte	0x71b
 1974 05ea 00       		.byte	0
 1975 05eb 0D       		.uleb128 0xd
 1976 05ec 58030000 		.4byte	.LASF61
 1977 05f0 01       		.byte	0x1
 1978 05f1 A005     		.2byte	0x5a0
 1979 05f3 00000000 		.4byte	.LFB25
 1980 05f7 58000000 		.4byte	.LFE25-.LFB25
 1981 05fb 01       		.uleb128 0x1
 1982 05fc 9C       		.byte	0x9c
 1983 05fd 3E060000 		.4byte	0x63e
 1984 0601 12       		.uleb128 0x12
 1985 0602 71010000 		.4byte	.LASF62
 1986 0606 01       		.byte	0x1
 1987 0607 A005     		.2byte	0x5a0
 1988 0609 6B000000 		.4byte	0x6b
 1989 060d 0F030000 		.4byte	.LLST18
 1990 0611 15       		.uleb128 0x15
 1991 0612 06000000 		.4byte	.LBB2
 1992 0616 52000000 		.4byte	.LBE2-.LBB2
 1993 061a 10       		.uleb128 0x10
 1994 061b 45020000 		.4byte	.LASF63
 1995 061f 01       		.byte	0x1
 1996 0620 A805     		.2byte	0x5a8
 1997 0622 6B000000 		.4byte	0x6b
 1998 0626 30030000 		.4byte	.LLST19
 1999 062a 11       		.uleb128 0x11
 2000 062b F9000000 		.4byte	.LASF64
 2001 062f 01       		.byte	0x1
 2002 0630 D005     		.2byte	0x5d0
 2003 0632 6B000000 		.4byte	0x6b
 2004 0636 05       		.uleb128 0x5
 2005 0637 03       		.byte	0x3
 2006 0638 08000000 		.4byte	txPeriod.5141
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 64


 2007 063c 00       		.byte	0
 2008 063d 00       		.byte	0
 2009 063e 0D       		.uleb128 0xd
 2010 063f 6B000000 		.4byte	.LASF65
 2011 0643 01       		.byte	0x1
 2012 0644 2406     		.2byte	0x624
 2013 0646 00000000 		.4byte	.LFB26
 2014 064a 02000000 		.4byte	.LFE26-.LFB26
 2015 064e 01       		.uleb128 0x1
 2016 064f 9C       		.byte	0x9c
 2017 0650 63060000 		.4byte	0x663
 2018 0654 0E       		.uleb128 0xe
 2019 0655 44010000 		.4byte	.LASF43
 2020 0659 01       		.byte	0x1
 2021 065a 2406     		.2byte	0x624
 2022 065c 6B000000 		.4byte	0x6b
 2023 0660 01       		.uleb128 0x1
 2024 0661 50       		.byte	0x50
 2025 0662 00       		.byte	0
 2026 0663 16       		.uleb128 0x16
 2027 0664 20050000 		.4byte	.LASF66
 2028 0668 01       		.byte	0x1
 2029 0669 1B       		.byte	0x1b
 2030 066a 6B000000 		.4byte	0x6b
 2031 066e 05       		.uleb128 0x5
 2032 066f 03       		.byte	0x3
 2033 0670 00000000 		.4byte	RS232_initVar
 2034 0674 16       		.uleb128 0x16
 2035 0675 BA000000 		.4byte	.LASF67
 2036 0679 01       		.byte	0x1
 2037 067a 24       		.byte	0x24
 2038 067b 6B000000 		.4byte	0x6b
 2039 067f 05       		.uleb128 0x5
 2040 0680 03       		.byte	0x3
 2041 0681 00000000 		.4byte	RS232_errorStatus
 2042 0685 17       		.uleb128 0x17
 2043 0686 BC000000 		.4byte	0xbc
 2044 068a 95060000 		.4byte	0x695
 2045 068e 18       		.uleb128 0x18
 2046 068f DE000000 		.4byte	0xde
 2047 0693 FF       		.byte	0xff
 2048 0694 00       		.byte	0
 2049 0695 16       		.uleb128 0x16
 2050 0696 50010000 		.4byte	.LASF68
 2051 069a 01       		.byte	0x1
 2052 069b 25       		.byte	0x25
 2053 069c A6060000 		.4byte	0x6a6
 2054 06a0 05       		.uleb128 0x5
 2055 06a1 03       		.byte	0x3
 2056 06a2 00000000 		.4byte	RS232_rxBuffer
 2057 06a6 05       		.uleb128 0x5
 2058 06a7 85060000 		.4byte	0x685
 2059 06ab 16       		.uleb128 0x16
 2060 06ac 94040000 		.4byte	.LASF69
 2061 06b0 01       		.byte	0x1
 2062 06b1 26       		.byte	0x26
 2063 06b2 C1000000 		.4byte	0xc1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 65


 2064 06b6 05       		.uleb128 0x5
 2065 06b7 03       		.byte	0x3
 2066 06b8 00000000 		.4byte	RS232_rxBufferRead
 2067 06bc 16       		.uleb128 0x16
 2068 06bd 15040000 		.4byte	.LASF70
 2069 06c1 01       		.byte	0x1
 2070 06c2 27       		.byte	0x27
 2071 06c3 C1000000 		.4byte	0xc1
 2072 06c7 05       		.uleb128 0x5
 2073 06c8 03       		.byte	0x3
 2074 06c9 00000000 		.4byte	RS232_rxBufferWrite
 2075 06cd 16       		.uleb128 0x16
 2076 06ce 60040000 		.4byte	.LASF71
 2077 06d2 01       		.byte	0x1
 2078 06d3 28       		.byte	0x28
 2079 06d4 BC000000 		.4byte	0xbc
 2080 06d8 05       		.uleb128 0x5
 2081 06d9 03       		.byte	0x3
 2082 06da 00000000 		.4byte	RS232_rxBufferLoopDetect
 2083 06de 16       		.uleb128 0x16
 2084 06df 54000000 		.4byte	.LASF72
 2085 06e3 01       		.byte	0x1
 2086 06e4 29       		.byte	0x29
 2087 06e5 BC000000 		.4byte	0xbc
 2088 06e9 05       		.uleb128 0x5
 2089 06ea 03       		.byte	0x3
 2090 06eb 00000000 		.4byte	RS232_rxBufferOverflow
 2091 06ef 19       		.uleb128 0x19
 2092 06f0 20020000 		.4byte	.LASF73
 2093 06f4 20020000 		.4byte	.LASF73
 2094 06f8 03       		.byte	0x3
 2095 06f9 88       		.byte	0x88
 2096 06fa 19       		.uleb128 0x19
 2097 06fb 2E030000 		.4byte	.LASF74
 2098 06ff 2E030000 		.4byte	.LASF74
 2099 0703 03       		.byte	0x3
 2100 0704 8B       		.byte	0x8b
 2101 0705 19       		.uleb128 0x19
 2102 0706 BA010000 		.4byte	.LASF75
 2103 070a BA010000 		.4byte	.LASF75
 2104 070e 03       		.byte	0x3
 2105 070f 7D       		.byte	0x7d
 2106 0710 19       		.uleb128 0x19
 2107 0711 F7010000 		.4byte	.LASF76
 2108 0715 F7010000 		.4byte	.LASF76
 2109 0719 04       		.byte	0x4
 2110 071a 27       		.byte	0x27
 2111 071b 19       		.uleb128 0x19
 2112 071c 13000000 		.4byte	.LASF77
 2113 0720 13000000 		.4byte	.LASF77
 2114 0724 03       		.byte	0x3
 2115 0725 7E       		.byte	0x7e
 2116 0726 19       		.uleb128 0x19
 2117 0727 34000000 		.4byte	.LASF78
 2118 072b 34000000 		.4byte	.LASF78
 2119 072f 04       		.byte	0x4
 2120 0730 28       		.byte	0x28
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 66


 2121 0731 00       		.byte	0
 2122              		.section	.debug_abbrev,"",%progbits
 2123              	.Ldebug_abbrev0:
 2124 0000 01       		.uleb128 0x1
 2125 0001 11       		.uleb128 0x11
 2126 0002 01       		.byte	0x1
 2127 0003 25       		.uleb128 0x25
 2128 0004 0E       		.uleb128 0xe
 2129 0005 13       		.uleb128 0x13
 2130 0006 0B       		.uleb128 0xb
 2131 0007 03       		.uleb128 0x3
 2132 0008 0E       		.uleb128 0xe
 2133 0009 1B       		.uleb128 0x1b
 2134 000a 0E       		.uleb128 0xe
 2135 000b 55       		.uleb128 0x55
 2136 000c 17       		.uleb128 0x17
 2137 000d 11       		.uleb128 0x11
 2138 000e 01       		.uleb128 0x1
 2139 000f 10       		.uleb128 0x10
 2140 0010 17       		.uleb128 0x17
 2141 0011 00       		.byte	0
 2142 0012 00       		.byte	0
 2143 0013 02       		.uleb128 0x2
 2144 0014 24       		.uleb128 0x24
 2145 0015 00       		.byte	0
 2146 0016 0B       		.uleb128 0xb
 2147 0017 0B       		.uleb128 0xb
 2148 0018 3E       		.uleb128 0x3e
 2149 0019 0B       		.uleb128 0xb
 2150 001a 03       		.uleb128 0x3
 2151 001b 0E       		.uleb128 0xe
 2152 001c 00       		.byte	0
 2153 001d 00       		.byte	0
 2154 001e 03       		.uleb128 0x3
 2155 001f 24       		.uleb128 0x24
 2156 0020 00       		.byte	0
 2157 0021 0B       		.uleb128 0xb
 2158 0022 0B       		.uleb128 0xb
 2159 0023 3E       		.uleb128 0x3e
 2160 0024 0B       		.uleb128 0xb
 2161 0025 03       		.uleb128 0x3
 2162 0026 08       		.uleb128 0x8
 2163 0027 00       		.byte	0
 2164 0028 00       		.byte	0
 2165 0029 04       		.uleb128 0x4
 2166 002a 16       		.uleb128 0x16
 2167 002b 00       		.byte	0
 2168 002c 03       		.uleb128 0x3
 2169 002d 0E       		.uleb128 0xe
 2170 002e 3A       		.uleb128 0x3a
 2171 002f 0B       		.uleb128 0xb
 2172 0030 3B       		.uleb128 0x3b
 2173 0031 05       		.uleb128 0x5
 2174 0032 49       		.uleb128 0x49
 2175 0033 13       		.uleb128 0x13
 2176 0034 00       		.byte	0
 2177 0035 00       		.byte	0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 67


 2178 0036 05       		.uleb128 0x5
 2179 0037 35       		.uleb128 0x35
 2180 0038 00       		.byte	0
 2181 0039 49       		.uleb128 0x49
 2182 003a 13       		.uleb128 0x13
 2183 003b 00       		.byte	0
 2184 003c 00       		.byte	0
 2185 003d 06       		.uleb128 0x6
 2186 003e 2E       		.uleb128 0x2e
 2187 003f 01       		.byte	0x1
 2188 0040 3F       		.uleb128 0x3f
 2189 0041 19       		.uleb128 0x19
 2190 0042 03       		.uleb128 0x3
 2191 0043 0E       		.uleb128 0xe
 2192 0044 3A       		.uleb128 0x3a
 2193 0045 0B       		.uleb128 0xb
 2194 0046 3B       		.uleb128 0x3b
 2195 0047 0B       		.uleb128 0xb
 2196 0048 27       		.uleb128 0x27
 2197 0049 19       		.uleb128 0x19
 2198 004a 11       		.uleb128 0x11
 2199 004b 01       		.uleb128 0x1
 2200 004c 12       		.uleb128 0x12
 2201 004d 06       		.uleb128 0x6
 2202 004e 40       		.uleb128 0x40
 2203 004f 18       		.uleb128 0x18
 2204 0050 9742     		.uleb128 0x2117
 2205 0052 19       		.uleb128 0x19
 2206 0053 01       		.uleb128 0x1
 2207 0054 13       		.uleb128 0x13
 2208 0055 00       		.byte	0
 2209 0056 00       		.byte	0
 2210 0057 07       		.uleb128 0x7
 2211 0058 898201   		.uleb128 0x4109
 2212 005b 01       		.byte	0x1
 2213 005c 11       		.uleb128 0x11
 2214 005d 01       		.uleb128 0x1
 2215 005e 31       		.uleb128 0x31
 2216 005f 13       		.uleb128 0x13
 2217 0060 01       		.uleb128 0x1
 2218 0061 13       		.uleb128 0x13
 2219 0062 00       		.byte	0
 2220 0063 00       		.byte	0
 2221 0064 08       		.uleb128 0x8
 2222 0065 8A8201   		.uleb128 0x410a
 2223 0068 00       		.byte	0
 2224 0069 02       		.uleb128 0x2
 2225 006a 18       		.uleb128 0x18
 2226 006b 9142     		.uleb128 0x2111
 2227 006d 18       		.uleb128 0x18
 2228 006e 00       		.byte	0
 2229 006f 00       		.byte	0
 2230 0070 09       		.uleb128 0x9
 2231 0071 898201   		.uleb128 0x4109
 2232 0074 01       		.byte	0x1
 2233 0075 11       		.uleb128 0x11
 2234 0076 01       		.uleb128 0x1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 68


 2235 0077 31       		.uleb128 0x31
 2236 0078 13       		.uleb128 0x13
 2237 0079 00       		.byte	0
 2238 007a 00       		.byte	0
 2239 007b 0A       		.uleb128 0xa
 2240 007c 34       		.uleb128 0x34
 2241 007d 00       		.byte	0
 2242 007e 03       		.uleb128 0x3
 2243 007f 0E       		.uleb128 0xe
 2244 0080 3A       		.uleb128 0x3a
 2245 0081 0B       		.uleb128 0xb
 2246 0082 3B       		.uleb128 0x3b
 2247 0083 0B       		.uleb128 0xb
 2248 0084 49       		.uleb128 0x49
 2249 0085 13       		.uleb128 0x13
 2250 0086 02       		.uleb128 0x2
 2251 0087 17       		.uleb128 0x17
 2252 0088 00       		.byte	0
 2253 0089 00       		.byte	0
 2254 008a 0B       		.uleb128 0xb
 2255 008b 898201   		.uleb128 0x4109
 2256 008e 00       		.byte	0
 2257 008f 11       		.uleb128 0x11
 2258 0090 01       		.uleb128 0x1
 2259 0091 31       		.uleb128 0x31
 2260 0092 13       		.uleb128 0x13
 2261 0093 00       		.byte	0
 2262 0094 00       		.byte	0
 2263 0095 0C       		.uleb128 0xc
 2264 0096 2E       		.uleb128 0x2e
 2265 0097 00       		.byte	0
 2266 0098 3F       		.uleb128 0x3f
 2267 0099 19       		.uleb128 0x19
 2268 009a 03       		.uleb128 0x3
 2269 009b 0E       		.uleb128 0xe
 2270 009c 3A       		.uleb128 0x3a
 2271 009d 0B       		.uleb128 0xb
 2272 009e 3B       		.uleb128 0x3b
 2273 009f 05       		.uleb128 0x5
 2274 00a0 27       		.uleb128 0x27
 2275 00a1 19       		.uleb128 0x19
 2276 00a2 49       		.uleb128 0x49
 2277 00a3 13       		.uleb128 0x13
 2278 00a4 11       		.uleb128 0x11
 2279 00a5 01       		.uleb128 0x1
 2280 00a6 12       		.uleb128 0x12
 2281 00a7 06       		.uleb128 0x6
 2282 00a8 40       		.uleb128 0x40
 2283 00a9 18       		.uleb128 0x18
 2284 00aa 9742     		.uleb128 0x2117
 2285 00ac 19       		.uleb128 0x19
 2286 00ad 00       		.byte	0
 2287 00ae 00       		.byte	0
 2288 00af 0D       		.uleb128 0xd
 2289 00b0 2E       		.uleb128 0x2e
 2290 00b1 01       		.byte	0x1
 2291 00b2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 69


 2292 00b3 19       		.uleb128 0x19
 2293 00b4 03       		.uleb128 0x3
 2294 00b5 0E       		.uleb128 0xe
 2295 00b6 3A       		.uleb128 0x3a
 2296 00b7 0B       		.uleb128 0xb
 2297 00b8 3B       		.uleb128 0x3b
 2298 00b9 05       		.uleb128 0x5
 2299 00ba 27       		.uleb128 0x27
 2300 00bb 19       		.uleb128 0x19
 2301 00bc 11       		.uleb128 0x11
 2302 00bd 01       		.uleb128 0x1
 2303 00be 12       		.uleb128 0x12
 2304 00bf 06       		.uleb128 0x6
 2305 00c0 40       		.uleb128 0x40
 2306 00c1 18       		.uleb128 0x18
 2307 00c2 9742     		.uleb128 0x2117
 2308 00c4 19       		.uleb128 0x19
 2309 00c5 01       		.uleb128 0x1
 2310 00c6 13       		.uleb128 0x13
 2311 00c7 00       		.byte	0
 2312 00c8 00       		.byte	0
 2313 00c9 0E       		.uleb128 0xe
 2314 00ca 05       		.uleb128 0x5
 2315 00cb 00       		.byte	0
 2316 00cc 03       		.uleb128 0x3
 2317 00cd 0E       		.uleb128 0xe
 2318 00ce 3A       		.uleb128 0x3a
 2319 00cf 0B       		.uleb128 0xb
 2320 00d0 3B       		.uleb128 0x3b
 2321 00d1 05       		.uleb128 0x5
 2322 00d2 49       		.uleb128 0x49
 2323 00d3 13       		.uleb128 0x13
 2324 00d4 02       		.uleb128 0x2
 2325 00d5 18       		.uleb128 0x18
 2326 00d6 00       		.byte	0
 2327 00d7 00       		.byte	0
 2328 00d8 0F       		.uleb128 0xf
 2329 00d9 2E       		.uleb128 0x2e
 2330 00da 01       		.byte	0x1
 2331 00db 3F       		.uleb128 0x3f
 2332 00dc 19       		.uleb128 0x19
 2333 00dd 03       		.uleb128 0x3
 2334 00de 0E       		.uleb128 0xe
 2335 00df 3A       		.uleb128 0x3a
 2336 00e0 0B       		.uleb128 0xb
 2337 00e1 3B       		.uleb128 0x3b
 2338 00e2 05       		.uleb128 0x5
 2339 00e3 27       		.uleb128 0x27
 2340 00e4 19       		.uleb128 0x19
 2341 00e5 49       		.uleb128 0x49
 2342 00e6 13       		.uleb128 0x13
 2343 00e7 11       		.uleb128 0x11
 2344 00e8 01       		.uleb128 0x1
 2345 00e9 12       		.uleb128 0x12
 2346 00ea 06       		.uleb128 0x6
 2347 00eb 40       		.uleb128 0x40
 2348 00ec 18       		.uleb128 0x18
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 70


 2349 00ed 9742     		.uleb128 0x2117
 2350 00ef 19       		.uleb128 0x19
 2351 00f0 01       		.uleb128 0x1
 2352 00f1 13       		.uleb128 0x13
 2353 00f2 00       		.byte	0
 2354 00f3 00       		.byte	0
 2355 00f4 10       		.uleb128 0x10
 2356 00f5 34       		.uleb128 0x34
 2357 00f6 00       		.byte	0
 2358 00f7 03       		.uleb128 0x3
 2359 00f8 0E       		.uleb128 0xe
 2360 00f9 3A       		.uleb128 0x3a
 2361 00fa 0B       		.uleb128 0xb
 2362 00fb 3B       		.uleb128 0x3b
 2363 00fc 05       		.uleb128 0x5
 2364 00fd 49       		.uleb128 0x49
 2365 00fe 13       		.uleb128 0x13
 2366 00ff 02       		.uleb128 0x2
 2367 0100 17       		.uleb128 0x17
 2368 0101 00       		.byte	0
 2369 0102 00       		.byte	0
 2370 0103 11       		.uleb128 0x11
 2371 0104 34       		.uleb128 0x34
 2372 0105 00       		.byte	0
 2373 0106 03       		.uleb128 0x3
 2374 0107 0E       		.uleb128 0xe
 2375 0108 3A       		.uleb128 0x3a
 2376 0109 0B       		.uleb128 0xb
 2377 010a 3B       		.uleb128 0x3b
 2378 010b 05       		.uleb128 0x5
 2379 010c 49       		.uleb128 0x49
 2380 010d 13       		.uleb128 0x13
 2381 010e 02       		.uleb128 0x2
 2382 010f 18       		.uleb128 0x18
 2383 0110 00       		.byte	0
 2384 0111 00       		.byte	0
 2385 0112 12       		.uleb128 0x12
 2386 0113 05       		.uleb128 0x5
 2387 0114 00       		.byte	0
 2388 0115 03       		.uleb128 0x3
 2389 0116 0E       		.uleb128 0xe
 2390 0117 3A       		.uleb128 0x3a
 2391 0118 0B       		.uleb128 0xb
 2392 0119 3B       		.uleb128 0x3b
 2393 011a 05       		.uleb128 0x5
 2394 011b 49       		.uleb128 0x49
 2395 011c 13       		.uleb128 0x13
 2396 011d 02       		.uleb128 0x2
 2397 011e 17       		.uleb128 0x17
 2398 011f 00       		.byte	0
 2399 0120 00       		.byte	0
 2400 0121 13       		.uleb128 0x13
 2401 0122 0F       		.uleb128 0xf
 2402 0123 00       		.byte	0
 2403 0124 0B       		.uleb128 0xb
 2404 0125 0B       		.uleb128 0xb
 2405 0126 49       		.uleb128 0x49
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 71


 2406 0127 13       		.uleb128 0x13
 2407 0128 00       		.byte	0
 2408 0129 00       		.byte	0
 2409 012a 14       		.uleb128 0x14
 2410 012b 26       		.uleb128 0x26
 2411 012c 00       		.byte	0
 2412 012d 49       		.uleb128 0x49
 2413 012e 13       		.uleb128 0x13
 2414 012f 00       		.byte	0
 2415 0130 00       		.byte	0
 2416 0131 15       		.uleb128 0x15
 2417 0132 0B       		.uleb128 0xb
 2418 0133 01       		.byte	0x1
 2419 0134 11       		.uleb128 0x11
 2420 0135 01       		.uleb128 0x1
 2421 0136 12       		.uleb128 0x12
 2422 0137 06       		.uleb128 0x6
 2423 0138 00       		.byte	0
 2424 0139 00       		.byte	0
 2425 013a 16       		.uleb128 0x16
 2426 013b 34       		.uleb128 0x34
 2427 013c 00       		.byte	0
 2428 013d 03       		.uleb128 0x3
 2429 013e 0E       		.uleb128 0xe
 2430 013f 3A       		.uleb128 0x3a
 2431 0140 0B       		.uleb128 0xb
 2432 0141 3B       		.uleb128 0x3b
 2433 0142 0B       		.uleb128 0xb
 2434 0143 49       		.uleb128 0x49
 2435 0144 13       		.uleb128 0x13
 2436 0145 3F       		.uleb128 0x3f
 2437 0146 19       		.uleb128 0x19
 2438 0147 02       		.uleb128 0x2
 2439 0148 18       		.uleb128 0x18
 2440 0149 00       		.byte	0
 2441 014a 00       		.byte	0
 2442 014b 17       		.uleb128 0x17
 2443 014c 01       		.uleb128 0x1
 2444 014d 01       		.byte	0x1
 2445 014e 49       		.uleb128 0x49
 2446 014f 13       		.uleb128 0x13
 2447 0150 01       		.uleb128 0x1
 2448 0151 13       		.uleb128 0x13
 2449 0152 00       		.byte	0
 2450 0153 00       		.byte	0
 2451 0154 18       		.uleb128 0x18
 2452 0155 21       		.uleb128 0x21
 2453 0156 00       		.byte	0
 2454 0157 49       		.uleb128 0x49
 2455 0158 13       		.uleb128 0x13
 2456 0159 2F       		.uleb128 0x2f
 2457 015a 0B       		.uleb128 0xb
 2458 015b 00       		.byte	0
 2459 015c 00       		.byte	0
 2460 015d 19       		.uleb128 0x19
 2461 015e 2E       		.uleb128 0x2e
 2462 015f 00       		.byte	0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 72


 2463 0160 3F       		.uleb128 0x3f
 2464 0161 19       		.uleb128 0x19
 2465 0162 3C       		.uleb128 0x3c
 2466 0163 19       		.uleb128 0x19
 2467 0164 6E       		.uleb128 0x6e
 2468 0165 0E       		.uleb128 0xe
 2469 0166 03       		.uleb128 0x3
 2470 0167 0E       		.uleb128 0xe
 2471 0168 3A       		.uleb128 0x3a
 2472 0169 0B       		.uleb128 0xb
 2473 016a 3B       		.uleb128 0x3b
 2474 016b 0B       		.uleb128 0xb
 2475 016c 00       		.byte	0
 2476 016d 00       		.byte	0
 2477 016e 00       		.byte	0
 2478              		.section	.debug_loc,"",%progbits
 2479              	.Ldebug_loc0:
 2480              	.LLST0:
 2481 0000 08000000 		.4byte	.LVL3
 2482 0004 3A000000 		.4byte	.LVL6
 2483 0008 0100     		.2byte	0x1
 2484 000a 54       		.byte	0x54
 2485 000b 00000000 		.4byte	0
 2486 000f 00000000 		.4byte	0
 2487              	.LLST1:
 2488 0013 08000000 		.4byte	.LVL10
 2489 0017 38000000 		.4byte	.LVL13
 2490 001b 0100     		.2byte	0x1
 2491 001d 54       		.byte	0x54
 2492 001e 00000000 		.4byte	0
 2493 0022 00000000 		.4byte	0
 2494              	.LLST2:
 2495 0026 22000000 		.4byte	.LVL18
 2496 002a 40000000 		.4byte	.LVL24
 2497 002e 0100     		.2byte	0x1
 2498 0030 50       		.byte	0x50
 2499 0031 46000000 		.4byte	.LVL26
 2500 0035 64000000 		.4byte	.LFE7
 2501 0039 0100     		.2byte	0x1
 2502 003b 50       		.byte	0x50
 2503 003c 00000000 		.4byte	0
 2504 0040 00000000 		.4byte	0
 2505              	.LLST3:
 2506 0044 0C000000 		.4byte	.LVL16
 2507 0048 24000000 		.4byte	.LVL19
 2508 004c 0100     		.2byte	0x1
 2509 004e 53       		.byte	0x53
 2510 004f 24000000 		.4byte	.LVL19
 2511 0053 26000000 		.4byte	.LVL20
 2512 0057 0300     		.2byte	0x3
 2513 0059 73       		.byte	0x73
 2514 005a 7F       		.sleb128 -1
 2515 005b 9F       		.byte	0x9f
 2516 005c 26000000 		.4byte	.LVL20
 2517 0060 32000000 		.4byte	.LVL22
 2518 0064 0100     		.2byte	0x1
 2519 0066 53       		.byte	0x53
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 73


 2520 0067 32000000 		.4byte	.LVL22
 2521 006b 3E000000 		.4byte	.LVL23
 2522 006f 0500     		.2byte	0x5
 2523 0071 03       		.byte	0x3
 2524 0072 00000000 		.4byte	RS232_rxBufferRead
 2525 0076 40000000 		.4byte	.LVL24
 2526 007a 42000000 		.4byte	.LVL25
 2527 007e 0100     		.2byte	0x1
 2528 0080 53       		.byte	0x53
 2529 0081 00000000 		.4byte	0
 2530 0085 00000000 		.4byte	0
 2531              	.LLST4:
 2532 0089 00000000 		.4byte	.LVL29
 2533 008d 22000000 		.4byte	.LVL32
 2534 0091 0200     		.2byte	0x2
 2535 0093 30       		.byte	0x30
 2536 0094 9F       		.byte	0x9f
 2537 0095 22000000 		.4byte	.LVL32
 2538 0099 40000000 		.4byte	.LVL38
 2539 009d 0100     		.2byte	0x1
 2540 009f 50       		.byte	0x50
 2541 00a0 40000000 		.4byte	.LVL38
 2542 00a4 52000000 		.4byte	.LVL41
 2543 00a8 0200     		.2byte	0x2
 2544 00aa 30       		.byte	0x30
 2545 00ab 9F       		.byte	0x9f
 2546 00ac 52000000 		.4byte	.LVL41
 2547 00b0 5A000000 		.4byte	.LVL42
 2548 00b4 0100     		.2byte	0x1
 2549 00b6 50       		.byte	0x50
 2550 00b7 5A000000 		.4byte	.LVL42
 2551 00bb 5E000000 		.4byte	.LVL43
 2552 00bf 0200     		.2byte	0x2
 2553 00c1 30       		.byte	0x30
 2554 00c2 9F       		.byte	0x9f
 2555 00c3 5E000000 		.4byte	.LVL43
 2556 00c7 80000000 		.4byte	.LFE9
 2557 00cb 0100     		.2byte	0x1
 2558 00cd 50       		.byte	0x50
 2559 00ce 00000000 		.4byte	0
 2560 00d2 00000000 		.4byte	0
 2561              	.LLST5:
 2562 00d6 46000000 		.4byte	.LVL40
 2563 00da 60000000 		.4byte	.LVL44
 2564 00de 0100     		.2byte	0x1
 2565 00e0 53       		.byte	0x53
 2566 00e1 00000000 		.4byte	0
 2567 00e5 00000000 		.4byte	0
 2568              	.LLST6:
 2569 00e9 0C000000 		.4byte	.LVL30
 2570 00ed 24000000 		.4byte	.LVL33
 2571 00f1 0100     		.2byte	0x1
 2572 00f3 53       		.byte	0x53
 2573 00f4 24000000 		.4byte	.LVL33
 2574 00f8 26000000 		.4byte	.LVL34
 2575 00fc 0300     		.2byte	0x3
 2576 00fe 73       		.byte	0x73
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 74


 2577 00ff 7F       		.sleb128 -1
 2578 0100 9F       		.byte	0x9f
 2579 0101 26000000 		.4byte	.LVL34
 2580 0105 32000000 		.4byte	.LVL36
 2581 0109 0100     		.2byte	0x1
 2582 010b 53       		.byte	0x53
 2583 010c 32000000 		.4byte	.LVL36
 2584 0110 3E000000 		.4byte	.LVL37
 2585 0114 0500     		.2byte	0x5
 2586 0116 03       		.byte	0x3
 2587 0117 00000000 		.4byte	RS232_rxBufferRead
 2588 011b 40000000 		.4byte	.LVL38
 2589 011f 42000000 		.4byte	.LVL39
 2590 0123 0100     		.2byte	0x1
 2591 0125 53       		.byte	0x53
 2592 0126 00000000 		.4byte	0
 2593 012a 00000000 		.4byte	0
 2594              	.LLST7:
 2595 012e 0C000000 		.4byte	.LVL45
 2596 0132 16000000 		.4byte	.LVL46
 2597 0136 0100     		.2byte	0x1
 2598 0138 54       		.byte	0x54
 2599 0139 00000000 		.4byte	0
 2600 013d 00000000 		.4byte	0
 2601              	.LLST8:
 2602 0141 40000000 		.4byte	.LVL48
 2603 0145 42000000 		.4byte	.LVL49
 2604 0149 0100     		.2byte	0x1
 2605 014b 50       		.byte	0x50
 2606 014c 54000000 		.4byte	.LVL50
 2607 0150 56000000 		.4byte	.LVL51
 2608 0154 0100     		.2byte	0x1
 2609 0156 50       		.byte	0x50
 2610 0157 58000000 		.4byte	.LVL52
 2611 015b 6C000000 		.4byte	.LFE11
 2612 015f 0100     		.2byte	0x1
 2613 0161 50       		.byte	0x50
 2614 0162 00000000 		.4byte	0
 2615 0166 00000000 		.4byte	0
 2616              	.LLST9:
 2617 016a 06000000 		.4byte	.LVL53
 2618 016e 1B000000 		.4byte	.LVL54-1
 2619 0172 0100     		.2byte	0x1
 2620 0174 50       		.byte	0x50
 2621 0175 00000000 		.4byte	0
 2622 0179 00000000 		.4byte	0
 2623              	.LLST10:
 2624 017d 00000000 		.4byte	.LVL61
 2625 0181 0A000000 		.4byte	.LVL63
 2626 0185 0100     		.2byte	0x1
 2627 0187 50       		.byte	0x50
 2628 0188 0A000000 		.4byte	.LVL63
 2629 018c 14000000 		.4byte	.LVL67
 2630 0190 0100     		.2byte	0x1
 2631 0192 55       		.byte	0x55
 2632 0193 14000000 		.4byte	.LVL67
 2633 0197 18000000 		.4byte	.LVL68
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 75


 2634 019b 0100     		.2byte	0x1
 2635 019d 50       		.byte	0x50
 2636 019e 18000000 		.4byte	.LVL68
 2637 01a2 20000000 		.4byte	.LVL69
 2638 01a6 0100     		.2byte	0x1
 2639 01a8 55       		.byte	0x55
 2640 01a9 20000000 		.4byte	.LVL69
 2641 01ad 24000000 		.4byte	.LFE20
 2642 01b1 0400     		.2byte	0x4
 2643 01b3 F3       		.byte	0xf3
 2644 01b4 01       		.uleb128 0x1
 2645 01b5 50       		.byte	0x50
 2646 01b6 9F       		.byte	0x9f
 2647 01b7 00000000 		.4byte	0
 2648 01bb 00000000 		.4byte	0
 2649              	.LLST11:
 2650 01bf 02000000 		.4byte	.LVL62
 2651 01c3 0A000000 		.4byte	.LVL63
 2652 01c7 0200     		.2byte	0x2
 2653 01c9 30       		.byte	0x30
 2654 01ca 9F       		.byte	0x9f
 2655 01cb 0A000000 		.4byte	.LVL63
 2656 01cf 10000000 		.4byte	.LVL65
 2657 01d3 0100     		.2byte	0x1
 2658 01d5 54       		.byte	0x54
 2659 01d6 12000000 		.4byte	.LVL66
 2660 01da 14000000 		.4byte	.LVL67
 2661 01de 0100     		.2byte	0x1
 2662 01e0 54       		.byte	0x54
 2663 01e1 14000000 		.4byte	.LVL67
 2664 01e5 18000000 		.4byte	.LVL68
 2665 01e9 0200     		.2byte	0x2
 2666 01eb 30       		.byte	0x30
 2667 01ec 9F       		.byte	0x9f
 2668 01ed 18000000 		.4byte	.LVL68
 2669 01f1 20000000 		.4byte	.LVL69
 2670 01f5 0100     		.2byte	0x1
 2671 01f7 54       		.byte	0x54
 2672 01f8 00000000 		.4byte	0
 2673 01fc 00000000 		.4byte	0
 2674              	.LLST12:
 2675 0200 00000000 		.4byte	.LVL70
 2676 0204 08000000 		.4byte	.LVL71
 2677 0208 0100     		.2byte	0x1
 2678 020a 50       		.byte	0x50
 2679 020b 08000000 		.4byte	.LVL71
 2680 020f 14000000 		.4byte	.LVL75
 2681 0213 0100     		.2byte	0x1
 2682 0215 56       		.byte	0x56
 2683 0216 14000000 		.4byte	.LVL75
 2684 021a 1C000000 		.4byte	.LVL76
 2685 021e 0100     		.2byte	0x1
 2686 0220 50       		.byte	0x50
 2687 0221 1C000000 		.4byte	.LVL76
 2688 0225 22000000 		.4byte	.LVL77
 2689 0229 0100     		.2byte	0x1
 2690 022b 56       		.byte	0x56
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 76


 2691 022c 22000000 		.4byte	.LVL77
 2692 0230 28000000 		.4byte	.LFE21
 2693 0234 0400     		.2byte	0x4
 2694 0236 F3       		.byte	0xf3
 2695 0237 01       		.uleb128 0x1
 2696 0238 50       		.byte	0x50
 2697 0239 9F       		.byte	0x9f
 2698 023a 00000000 		.4byte	0
 2699 023e 00000000 		.4byte	0
 2700              	.LLST13:
 2701 0242 00000000 		.4byte	.LVL70
 2702 0246 08000000 		.4byte	.LVL71
 2703 024a 0100     		.2byte	0x1
 2704 024c 51       		.byte	0x51
 2705 024d 08000000 		.4byte	.LVL71
 2706 0251 14000000 		.4byte	.LVL75
 2707 0255 0400     		.2byte	0x4
 2708 0257 F3       		.byte	0xf3
 2709 0258 01       		.uleb128 0x1
 2710 0259 51       		.byte	0x51
 2711 025a 9F       		.byte	0x9f
 2712 025b 14000000 		.4byte	.LVL75
 2713 025f 1C000000 		.4byte	.LVL76
 2714 0263 0100     		.2byte	0x1
 2715 0265 51       		.byte	0x51
 2716 0266 1C000000 		.4byte	.LVL76
 2717 026a 28000000 		.4byte	.LFE21
 2718 026e 0400     		.2byte	0x4
 2719 0270 F3       		.byte	0xf3
 2720 0271 01       		.uleb128 0x1
 2721 0272 51       		.byte	0x51
 2722 0273 9F       		.byte	0x9f
 2723 0274 00000000 		.4byte	0
 2724 0278 00000000 		.4byte	0
 2725              	.LLST14:
 2726 027c 00000000 		.4byte	.LVL70
 2727 0280 08000000 		.4byte	.LVL71
 2728 0284 0200     		.2byte	0x2
 2729 0286 30       		.byte	0x30
 2730 0287 9F       		.byte	0x9f
 2731 0288 08000000 		.4byte	.LVL71
 2732 028c 10000000 		.4byte	.LVL73
 2733 0290 0100     		.2byte	0x1
 2734 0292 54       		.byte	0x54
 2735 0293 12000000 		.4byte	.LVL74
 2736 0297 14000000 		.4byte	.LVL75
 2737 029b 0100     		.2byte	0x1
 2738 029d 54       		.byte	0x54
 2739 029e 14000000 		.4byte	.LVL75
 2740 02a2 1C000000 		.4byte	.LVL76
 2741 02a6 0200     		.2byte	0x2
 2742 02a8 30       		.byte	0x30
 2743 02a9 9F       		.byte	0x9f
 2744 02aa 1C000000 		.4byte	.LVL76
 2745 02ae 22000000 		.4byte	.LVL77
 2746 02b2 0100     		.2byte	0x1
 2747 02b4 54       		.byte	0x54
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 77


 2748 02b5 00000000 		.4byte	0
 2749 02b9 00000000 		.4byte	0
 2750              	.LLST15:
 2751 02bd 00000000 		.4byte	.LVL78
 2752 02c1 0B000000 		.4byte	.LVL79-1
 2753 02c5 0100     		.2byte	0x1
 2754 02c7 50       		.byte	0x50
 2755 02c8 0B000000 		.4byte	.LVL79-1
 2756 02cc 20000000 		.4byte	.LFE22
 2757 02d0 0400     		.2byte	0x4
 2758 02d2 F3       		.byte	0xf3
 2759 02d3 01       		.uleb128 0x1
 2760 02d4 50       		.byte	0x50
 2761 02d5 9F       		.byte	0x9f
 2762 02d6 00000000 		.4byte	0
 2763 02da 00000000 		.4byte	0
 2764              	.LLST16:
 2765 02de 06000000 		.4byte	.LVL82
 2766 02e2 1C000000 		.4byte	.LVL83
 2767 02e6 0100     		.2byte	0x1
 2768 02e8 53       		.byte	0x53
 2769 02e9 1C000000 		.4byte	.LVL83
 2770 02ed 24000000 		.4byte	.LFE23
 2771 02f1 0100     		.2byte	0x1
 2772 02f3 50       		.byte	0x50
 2773 02f4 00000000 		.4byte	0
 2774 02f8 00000000 		.4byte	0
 2775              	.LLST17:
 2776 02fc 06000000 		.4byte	.LVL84
 2777 0300 1B000000 		.4byte	.LVL85-1
 2778 0304 0100     		.2byte	0x1
 2779 0306 50       		.byte	0x50
 2780 0307 00000000 		.4byte	0
 2781 030b 00000000 		.4byte	0
 2782              	.LLST18:
 2783 030f 00000000 		.4byte	.LVL86
 2784 0313 3C000000 		.4byte	.LVL91
 2785 0317 0100     		.2byte	0x1
 2786 0319 50       		.byte	0x50
 2787 031a 3C000000 		.4byte	.LVL91
 2788 031e 58000000 		.4byte	.LFE25
 2789 0322 0400     		.2byte	0x4
 2790 0324 F3       		.byte	0xf3
 2791 0325 01       		.uleb128 0x1
 2792 0326 50       		.byte	0x50
 2793 0327 9F       		.byte	0x9f
 2794 0328 00000000 		.4byte	0
 2795 032c 00000000 		.4byte	0
 2796              	.LLST19:
 2797 0330 22000000 		.4byte	.LVL87
 2798 0334 28000000 		.4byte	.LVL88
 2799 0338 0100     		.2byte	0x1
 2800 033a 53       		.byte	0x53
 2801 033b 34000000 		.4byte	.LVL89
 2802 033f 3A000000 		.4byte	.LVL90
 2803 0343 0100     		.2byte	0x1
 2804 0345 53       		.byte	0x53
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 78


 2805 0346 00000000 		.4byte	0
 2806 034a 00000000 		.4byte	0
 2807              		.section	.debug_aranges,"",%progbits
 2808 0000 EC000000 		.4byte	0xec
 2809 0004 0200     		.2byte	0x2
 2810 0006 00000000 		.4byte	.Ldebug_info0
 2811 000a 04       		.byte	0x4
 2812 000b 00       		.byte	0
 2813 000c 0000     		.2byte	0
 2814 000e 0000     		.2byte	0
 2815 0010 00000000 		.4byte	.LFB1
 2816 0014 44000000 		.4byte	.LFE1-.LFB1
 2817 0018 00000000 		.4byte	.LFB2
 2818 001c 48000000 		.4byte	.LFE2-.LFB2
 2819 0020 00000000 		.4byte	.LFB0
 2820 0024 1C000000 		.4byte	.LFE0-.LFB0
 2821 0028 00000000 		.4byte	.LFB3
 2822 002c 48000000 		.4byte	.LFE3-.LFB3
 2823 0030 00000000 		.4byte	.LFB4
 2824 0034 04000000 		.4byte	.LFE4-.LFB4
 2825 0038 00000000 		.4byte	.LFB5
 2826 003c 02000000 		.4byte	.LFE5-.LFB5
 2827 0040 00000000 		.4byte	.LFB6
 2828 0044 0C000000 		.4byte	.LFE6-.LFB6
 2829 0048 00000000 		.4byte	.LFB7
 2830 004c 64000000 		.4byte	.LFE7-.LFB7
 2831 0050 00000000 		.4byte	.LFB8
 2832 0054 28000000 		.4byte	.LFE8-.LFB8
 2833 0058 00000000 		.4byte	.LFB9
 2834 005c 80000000 		.4byte	.LFE9-.LFB9
 2835 0060 00000000 		.4byte	.LFB10
 2836 0064 2C000000 		.4byte	.LFE10-.LFB10
 2837 0068 00000000 		.4byte	.LFB11
 2838 006c 6C000000 		.4byte	.LFE11-.LFB11
 2839 0070 00000000 		.4byte	.LFB12
 2840 0074 44000000 		.4byte	.LFE12-.LFB12
 2841 0078 00000000 		.4byte	.LFB13
 2842 007c 02000000 		.4byte	.LFE13-.LFB13
 2843 0080 00000000 		.4byte	.LFB14
 2844 0084 0C000000 		.4byte	.LFE14-.LFB14
 2845 0088 00000000 		.4byte	.LFB15
 2846 008c 0C000000 		.4byte	.LFE15-.LFB15
 2847 0090 00000000 		.4byte	.LFB16
 2848 0094 0C000000 		.4byte	.LFE16-.LFB16
 2849 0098 00000000 		.4byte	.LFB17
 2850 009c 14000000 		.4byte	.LFE17-.LFB17
 2851 00a0 00000000 		.4byte	.LFB18
 2852 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2853 00a8 00000000 		.4byte	.LFB19
 2854 00ac 18000000 		.4byte	.LFE19-.LFB19
 2855 00b0 00000000 		.4byte	.LFB20
 2856 00b4 24000000 		.4byte	.LFE20-.LFB20
 2857 00b8 00000000 		.4byte	.LFB21
 2858 00bc 28000000 		.4byte	.LFE21-.LFB21
 2859 00c0 00000000 		.4byte	.LFB22
 2860 00c4 20000000 		.4byte	.LFE22-.LFB22
 2861 00c8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 79


 2862 00cc 24000000 		.4byte	.LFE23-.LFB23
 2863 00d0 00000000 		.4byte	.LFB24
 2864 00d4 24000000 		.4byte	.LFE24-.LFB24
 2865 00d8 00000000 		.4byte	.LFB25
 2866 00dc 58000000 		.4byte	.LFE25-.LFB25
 2867 00e0 00000000 		.4byte	.LFB26
 2868 00e4 02000000 		.4byte	.LFE26-.LFB26
 2869 00e8 00000000 		.4byte	0
 2870 00ec 00000000 		.4byte	0
 2871              		.section	.debug_ranges,"",%progbits
 2872              	.Ldebug_ranges0:
 2873 0000 00000000 		.4byte	.LFB1
 2874 0004 44000000 		.4byte	.LFE1
 2875 0008 00000000 		.4byte	.LFB2
 2876 000c 48000000 		.4byte	.LFE2
 2877 0010 00000000 		.4byte	.LFB0
 2878 0014 1C000000 		.4byte	.LFE0
 2879 0018 00000000 		.4byte	.LFB3
 2880 001c 48000000 		.4byte	.LFE3
 2881 0020 00000000 		.4byte	.LFB4
 2882 0024 04000000 		.4byte	.LFE4
 2883 0028 00000000 		.4byte	.LFB5
 2884 002c 02000000 		.4byte	.LFE5
 2885 0030 00000000 		.4byte	.LFB6
 2886 0034 0C000000 		.4byte	.LFE6
 2887 0038 00000000 		.4byte	.LFB7
 2888 003c 64000000 		.4byte	.LFE7
 2889 0040 00000000 		.4byte	.LFB8
 2890 0044 28000000 		.4byte	.LFE8
 2891 0048 00000000 		.4byte	.LFB9
 2892 004c 80000000 		.4byte	.LFE9
 2893 0050 00000000 		.4byte	.LFB10
 2894 0054 2C000000 		.4byte	.LFE10
 2895 0058 00000000 		.4byte	.LFB11
 2896 005c 6C000000 		.4byte	.LFE11
 2897 0060 00000000 		.4byte	.LFB12
 2898 0064 44000000 		.4byte	.LFE12
 2899 0068 00000000 		.4byte	.LFB13
 2900 006c 02000000 		.4byte	.LFE13
 2901 0070 00000000 		.4byte	.LFB14
 2902 0074 0C000000 		.4byte	.LFE14
 2903 0078 00000000 		.4byte	.LFB15
 2904 007c 0C000000 		.4byte	.LFE15
 2905 0080 00000000 		.4byte	.LFB16
 2906 0084 0C000000 		.4byte	.LFE16
 2907 0088 00000000 		.4byte	.LFB17
 2908 008c 14000000 		.4byte	.LFE17
 2909 0090 00000000 		.4byte	.LFB18
 2910 0094 0C000000 		.4byte	.LFE18
 2911 0098 00000000 		.4byte	.LFB19
 2912 009c 18000000 		.4byte	.LFE19
 2913 00a0 00000000 		.4byte	.LFB20
 2914 00a4 24000000 		.4byte	.LFE20
 2915 00a8 00000000 		.4byte	.LFB21
 2916 00ac 28000000 		.4byte	.LFE21
 2917 00b0 00000000 		.4byte	.LFB22
 2918 00b4 20000000 		.4byte	.LFE22
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 80


 2919 00b8 00000000 		.4byte	.LFB23
 2920 00bc 24000000 		.4byte	.LFE23
 2921 00c0 00000000 		.4byte	.LFB24
 2922 00c4 24000000 		.4byte	.LFE24
 2923 00c8 00000000 		.4byte	.LFB25
 2924 00cc 58000000 		.4byte	.LFE25
 2925 00d0 00000000 		.4byte	.LFB26
 2926 00d4 02000000 		.4byte	.LFE26
 2927 00d8 00000000 		.4byte	0
 2928 00dc 00000000 		.4byte	0
 2929              		.section	.debug_line,"",%progbits
 2930              	.Ldebug_line0:
 2931 0000 00030000 		.section	.debug_str,"MS",%progbits,1
 2931      02006100 
 2931      00000201 
 2931      FB0E0D00 
 2931      01010101 
 2932              	.LASF22:
 2933 0000 52533233 		.ascii	"RS232_Start\000"
 2933      325F5374 
 2933      61727400 
 2934              	.LASF10:
 2935 000c 75696E74 		.ascii	"uint16\000"
 2935      313600
 2936              	.LASF77:
 2937 0013 43794578 		.ascii	"CyExitCriticalSection\000"
 2937      69744372 
 2937      69746963 
 2937      616C5365 
 2937      6374696F 
 2938              	.LASF49:
 2939 0029 74784461 		.ascii	"txDataByte\000"
 2939      74614279 
 2939      746500
 2940              	.LASF78:
 2941 0034 52533233 		.ascii	"RS232_IntClock_Stop\000"
 2941      325F496E 
 2941      74436C6F 
 2941      636B5F53 
 2941      746F7000 
 2942              	.LASF0:
 2943 0048 7369676E 		.ascii	"signed char\000"
 2943      65642063 
 2943      68617200 
 2944              	.LASF72:
 2945 0054 52533233 		.ascii	"RS232_rxBufferOverflow\000"
 2945      325F7278 
 2945      42756666 
 2945      65724F76 
 2945      6572666C 
 2946              	.LASF65:
 2947 006b 52533233 		.ascii	"RS232_SetTxAddressMode\000"
 2947      325F5365 
 2947      74547841 
 2947      64647265 
 2947      73734D6F 
 2948              	.LASF58:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 81


 2949 0082 52533233 		.ascii	"RS232_PutCRLF\000"
 2949      325F5075 
 2949      7443524C 
 2949      4600
 2950              	.LASF7:
 2951 0090 6C6F6E67 		.ascii	"long long unsigned int\000"
 2951      206C6F6E 
 2951      6720756E 
 2951      7369676E 
 2951      65642069 
 2952              	.LASF33:
 2953 00a7 52533233 		.ascii	"RS232_ReadRxStatus\000"
 2953      325F5265 
 2953      61645278 
 2953      53746174 
 2953      757300
 2954              	.LASF67:
 2955 00ba 52533233 		.ascii	"RS232_errorStatus\000"
 2955      325F6572 
 2955      726F7253 
 2955      74617475 
 2955      7300
 2956              	.LASF6:
 2957 00cc 6C6F6E67 		.ascii	"long long int\000"
 2957      206C6F6E 
 2957      6720696E 
 2957      7400
 2958              	.LASF80:
 2959 00da 47656E65 		.ascii	"Generated_Source\\PSoC5\\RS232.c\000"
 2959      72617465 
 2959      645F536F 
 2959      75726365 
 2959      5C50536F 
 2960              	.LASF64:
 2961 00f9 74785065 		.ascii	"txPeriod\000"
 2961      72696F64 
 2961      00
 2962              	.LASF4:
 2963 0102 6C6F6E67 		.ascii	"long int\000"
 2963      20696E74 
 2963      00
 2964              	.LASF48:
 2965 010b 52533233 		.ascii	"RS232_WriteTxData\000"
 2965      325F5772 
 2965      69746554 
 2965      78446174 
 2965      6100
 2966              	.LASF9:
 2967 011d 75696E74 		.ascii	"uint8\000"
 2967      3800
 2968              	.LASF50:
 2969 0123 52533233 		.ascii	"RS232_ReadControlRegister\000"
 2969      325F5265 
 2969      6164436F 
 2969      6E74726F 
 2969      6C526567 
 2970              	.LASF13:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 82


 2971 013d 646F7562 		.ascii	"double\000"
 2971      6C6500
 2972              	.LASF43:
 2973 0144 61646472 		.ascii	"addressMode\000"
 2973      6573734D 
 2973      6F646500 
 2974              	.LASF68:
 2975 0150 52533233 		.ascii	"RS232_rxBuffer\000"
 2975      325F7278 
 2975      42756666 
 2975      657200
 2976              	.LASF11:
 2977 015f 75696E74 		.ascii	"uint32\000"
 2977      333200
 2978              	.LASF23:
 2979 0166 52533233 		.ascii	"RS232_Stop\000"
 2979      325F5374 
 2979      6F7000
 2980              	.LASF62:
 2981 0171 7265744D 		.ascii	"retMode\000"
 2981      6F646500 
 2982              	.LASF8:
 2983 0179 756E7369 		.ascii	"unsigned int\000"
 2983      676E6564 
 2983      20696E74 
 2983      00
 2984              	.LASF38:
 2985 0186 6C6F6345 		.ascii	"locErrorStatus\000"
 2985      72726F72 
 2985      53746174 
 2985      757300
 2986              	.LASF5:
 2987 0195 6C6F6E67 		.ascii	"long unsigned int\000"
 2987      20756E73 
 2987      69676E65 
 2987      6420696E 
 2987      7400
 2988              	.LASF51:
 2989 01a7 52533233 		.ascii	"RS232_ReadTxStatus\000"
 2989      325F5265 
 2989      61645478 
 2989      53746174 
 2989      757300
 2990              	.LASF75:
 2991 01ba 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2991      74657243 
 2991      72697469 
 2991      63616C53 
 2991      65637469 
 2992              	.LASF37:
 2993 01d1 52533233 		.ascii	"RS232_GetByte\000"
 2993      325F4765 
 2993      74427974 
 2993      6500
 2994              	.LASF40:
 2995 01df 73697A65 		.ascii	"size\000"
 2995      00
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 83


 2996              	.LASF3:
 2997 01e4 73686F72 		.ascii	"short unsigned int\000"
 2997      7420756E 
 2997      7369676E 
 2997      65642069 
 2997      6E7400
 2998              	.LASF76:
 2999 01f7 52533233 		.ascii	"RS232_IntClock_Start\000"
 2999      325F496E 
 2999      74436C6F 
 2999      636B5F53 
 2999      74617274 
 3000              	.LASF41:
 3001 020c 52533233 		.ascii	"RS232_ClearRxBuffer\000"
 3001      325F436C 
 3001      65617252 
 3001      78427566 
 3001      66657200 
 3002              	.LASF73:
 3003 0220 4379496E 		.ascii	"CyIntSetVector\000"
 3003      74536574 
 3003      56656374 
 3003      6F7200
 3004              	.LASF55:
 3005 022f 62756649 		.ascii	"bufIndex\000"
 3005      6E646578 
 3005      00
 3006              	.LASF28:
 3007 0238 696E7453 		.ascii	"intSrc\000"
 3007      726300
 3008              	.LASF17:
 3009 023f 72656733 		.ascii	"reg32\000"
 3009      3200
 3010              	.LASF63:
 3011 0245 746D7053 		.ascii	"tmpStat\000"
 3011      74617400 
 3012              	.LASF39:
 3013 024d 52533233 		.ascii	"RS232_GetRxBufferSize\000"
 3013      325F4765 
 3013      74527842 
 3013      75666665 
 3013      7253697A 
 3014              	.LASF26:
 3015 0263 52533233 		.ascii	"RS232_SetRxInterruptMode\000"
 3015      325F5365 
 3015      74527849 
 3015      6E746572 
 3015      72757074 
 3016              	.LASF19:
 3017 027c 73697A65 		.ascii	"sizetype\000"
 3017      74797065 
 3017      00
 3018              	.LASF18:
 3019 0285 6C6F6E67 		.ascii	"long double\000"
 3019      20646F75 
 3019      626C6500 
 3020              	.LASF45:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 84


 3021 0291 61646472 		.ascii	"address\000"
 3021      65737300 
 3022              	.LASF31:
 3023 0299 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3023      78427566 
 3023      66657257 
 3023      72697465 
 3023      00
 3024              	.LASF36:
 3025 02aa 72785374 		.ascii	"rxStatus\000"
 3025      61747573 
 3025      00
 3026              	.LASF42:
 3027 02b3 52533233 		.ascii	"RS232_SetRxAddressMode\000"
 3027      325F5365 
 3027      74527841 
 3027      64647265 
 3027      73734D6F 
 3028              	.LASF81:
 3029 02ca 433A5C55 		.ascii	"C:\\Users\\leo40\\OneDrive\\Empresa\\Proyectos\\Ora"
 3029      73657273 
 3029      5C6C656F 
 3029      34305C4F 
 3029      6E654472 
 3030 02f7 6E67655F 		.ascii	"nge_Pi\\Carro_Taller\\Prueba_USB\\V1.0\\FC_Impresio"
 3030      50695C43 
 3030      6172726F 
 3030      5F54616C 
 3030      6C65725C 
 3031 0326 6E2E6379 		.ascii	"n.cydsn\000"
 3031      64736E00 
 3032              	.LASF74:
 3033 032e 4379496E 		.ascii	"CyIntSetPriority\000"
 3033      74536574 
 3033      5072696F 
 3033      72697479 
 3033      00
 3034              	.LASF12:
 3035 033f 666C6F61 		.ascii	"float\000"
 3035      7400
 3036              	.LASF16:
 3037 0345 72656738 		.ascii	"reg8\000"
 3037      00
 3038              	.LASF1:
 3039 034a 756E7369 		.ascii	"unsigned char\000"
 3039      676E6564 
 3039      20636861 
 3039      7200
 3040              	.LASF61:
 3041 0358 52533233 		.ascii	"RS232_SendBreak\000"
 3041      325F5365 
 3041      6E644272 
 3041      65616B00 
 3042              	.LASF2:
 3043 0368 73686F72 		.ascii	"short int\000"
 3043      7420696E 
 3043      7400
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 85


 3044              	.LASF20:
 3045 0372 52533233 		.ascii	"RS232_Init\000"
 3045      325F496E 
 3045      697400
 3046              	.LASF79:
 3047 037d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3047      43313120 
 3047      352E342E 
 3047      31203230 
 3047      31363036 
 3048 03b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3048      20726576 
 3048      6973696F 
 3048      6E203233 
 3048      37373135 
 3049 03e3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3049      66756E63 
 3049      74696F6E 
 3049      2D736563 
 3049      74696F6E 
 3050              	.LASF57:
 3051 040b 62797465 		.ascii	"byteCount\000"
 3051      436F756E 
 3051      7400
 3052              	.LASF70:
 3053 0415 52533233 		.ascii	"RS232_rxBufferWrite\000"
 3053      325F7278 
 3053      42756666 
 3053      65725772 
 3053      69746500 
 3054              	.LASF21:
 3055 0429 52533233 		.ascii	"RS232_Enable\000"
 3055      325F456E 
 3055      61626C65 
 3055      00
 3056              	.LASF56:
 3057 0436 52533233 		.ascii	"RS232_PutArray\000"
 3057      325F5075 
 3057      74417272 
 3057      617900
 3058              	.LASF29:
 3059 0445 72784461 		.ascii	"rxData\000"
 3059      746100
 3060              	.LASF54:
 3061 044c 73747269 		.ascii	"string\000"
 3061      6E6700
 3062              	.LASF27:
 3063 0453 636F6E74 		.ascii	"control\000"
 3063      726F6C00 
 3064              	.LASF15:
 3065 045b 63686172 		.ascii	"char\000"
 3065      00
 3066              	.LASF71:
 3067 0460 52533233 		.ascii	"RS232_rxBufferLoopDetect\000"
 3067      325F7278 
 3067      42756666 
 3067      65724C6F 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 86


 3067      6F704465 
 3068              	.LASF25:
 3069 0479 52533233 		.ascii	"RS232_WriteControlRegister\000"
 3069      325F5772 
 3069      69746543 
 3069      6F6E7472 
 3069      6F6C5265 
 3070              	.LASF69:
 3071 0494 52533233 		.ascii	"RS232_rxBufferRead\000"
 3071      325F7278 
 3071      42756666 
 3071      65725265 
 3071      616400
 3072              	.LASF60:
 3073 04a7 52533233 		.ascii	"RS232_ClearTxBuffer\000"
 3073      325F436C 
 3073      65617254 
 3073      78427566 
 3073      66657200 
 3074              	.LASF47:
 3075 04bb 52533233 		.ascii	"RS232_SetTxInterruptMode\000"
 3075      325F5365 
 3075      74547849 
 3075      6E746572 
 3075      72757074 
 3076              	.LASF14:
 3077 04d4 63686172 		.ascii	"char8\000"
 3077      3800
 3078              	.LASF35:
 3079 04da 52533233 		.ascii	"RS232_GetChar\000"
 3079      325F4765 
 3079      74436861 
 3079      7200
 3080              	.LASF30:
 3081 04e8 6C6F6352 		.ascii	"locRxBufferRead\000"
 3081      78427566 
 3081      66657252 
 3081      65616400 
 3082              	.LASF24:
 3083 04f8 656E6162 		.ascii	"enableInterrupts\000"
 3083      6C65496E 
 3083      74657272 
 3083      75707473 
 3083      00
 3084              	.LASF34:
 3085 0509 73746174 		.ascii	"status\000"
 3085      757300
 3086              	.LASF53:
 3087 0510 52533233 		.ascii	"RS232_PutString\000"
 3087      325F5075 
 3087      74537472 
 3087      696E6700 
 3088              	.LASF66:
 3089 0520 52533233 		.ascii	"RS232_initVar\000"
 3089      325F696E 
 3089      69745661 
 3089      7200
ARM GAS  C:\Users\leo40\AppData\Local\Temp\ccd44UgX.s 			page 87


 3090              	.LASF59:
 3091 052e 52533233 		.ascii	"RS232_GetTxBufferSize\000"
 3091      325F4765 
 3091      74547842 
 3091      75666665 
 3091      7253697A 
 3092              	.LASF52:
 3093 0544 52533233 		.ascii	"RS232_PutChar\000"
 3093      325F5075 
 3093      74436861 
 3093      7200
 3094              	.LASF32:
 3095 0552 52533233 		.ascii	"RS232_ReadRxData\000"
 3095      325F5265 
 3095      61645278 
 3095      44617461 
 3095      00
 3096              	.LASF44:
 3097 0563 52533233 		.ascii	"RS232_SetRxAddress1\000"
 3097      325F5365 
 3097      74527841 
 3097      64647265 
 3097      73733100 
 3098              	.LASF46:
 3099 0577 52533233 		.ascii	"RS232_SetRxAddress2\000"
 3099      325F5365 
 3099      74527841 
 3099      64647265 
 3099      73733200 
 3100              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

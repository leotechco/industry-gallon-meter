ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Surtidor_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Surtidor_RXISR,"ax",%progbits
  20              		.align	2
  21              		.global	Surtidor_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	Surtidor_RXISR, %function
  25              	Surtidor_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Surtidor_INT.c"
   1:Generated_Source\PSoC5/Surtidor_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Surtidor_INT.c **** * File Name: SurtidorINT.c
   3:Generated_Source\PSoC5/Surtidor_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/Surtidor_INT.c **** *
   5:Generated_Source\PSoC5/Surtidor_INT.c **** * Description:
   6:Generated_Source\PSoC5/Surtidor_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/Surtidor_INT.c **** *
   8:Generated_Source\PSoC5/Surtidor_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/Surtidor_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/Surtidor_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/Surtidor_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/Surtidor_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/Surtidor_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/Surtidor_INT.c **** 
  15:Generated_Source\PSoC5/Surtidor_INT.c **** #include "Surtidor.h"
  16:Generated_Source\PSoC5/Surtidor_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/Surtidor_INT.c **** 
  18:Generated_Source\PSoC5/Surtidor_INT.c **** 
  19:Generated_Source\PSoC5/Surtidor_INT.c **** /***************************************
  20:Generated_Source\PSoC5/Surtidor_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/Surtidor_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/Surtidor_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/Surtidor_INT.c **** 
  24:Generated_Source\PSoC5/Surtidor_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/Surtidor_INT.c **** 
  26:Generated_Source\PSoC5/Surtidor_INT.c **** #if (Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RX_ENABLED || Surtidor_HD_ENABLED))
  27:Generated_Source\PSoC5/Surtidor_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/Surtidor_INT.c ****     * Function Name: Surtidor_RXISR
  29:Generated_Source\PSoC5/Surtidor_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/Surtidor_INT.c ****     *
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 2


  31:Generated_Source\PSoC5/Surtidor_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/Surtidor_INT.c ****     *
  34:Generated_Source\PSoC5/Surtidor_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/Surtidor_INT.c ****     *  None.
  36:Generated_Source\PSoC5/Surtidor_INT.c ****     *
  37:Generated_Source\PSoC5/Surtidor_INT.c ****     * Return:
  38:Generated_Source\PSoC5/Surtidor_INT.c ****     *  None.
  39:Generated_Source\PSoC5/Surtidor_INT.c ****     *
  40:Generated_Source\PSoC5/Surtidor_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/Surtidor_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/Surtidor_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/Surtidor_INT.c ****     *     when Surtidor_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/Surtidor_INT.c ****     *     Surtidor_rxBufferRead index.
  49:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/Surtidor_INT.c ****     *     Set to one when Surtidor_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/Surtidor_INT.c ****     *    Surtidor_rxBufferRead
  52:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/Surtidor_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/Surtidor_INT.c ****     *  Surtidor_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/Surtidor_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/Surtidor_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/Surtidor_INT.c ****     *
  58:Generated_Source\PSoC5/Surtidor_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/Surtidor_INT.c ****     CY_ISR(Surtidor_RXISR)
  60:Generated_Source\PSoC5/Surtidor_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L6:
  61:Generated_Source\PSoC5/Surtidor_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/Surtidor_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/Surtidor_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/Surtidor_INT.c **** 
  65:Generated_Source\PSoC5/Surtidor_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/Surtidor_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/Surtidor_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/Surtidor_INT.c **** 
  69:Generated_Source\PSoC5/Surtidor_INT.c ****     #ifdef Surtidor_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/Surtidor_INT.c ****         Surtidor_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/Surtidor_INT.c ****     #endif /* Surtidor_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/Surtidor_INT.c **** 
  73:Generated_Source\PSoC5/Surtidor_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/Surtidor_INT.c ****         /* `#START Surtidor_RXISR_START` */
  75:Generated_Source\PSoC5/Surtidor_INT.c **** 
  76:Generated_Source\PSoC5/Surtidor_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/Surtidor_INT.c **** 
  78:Generated_Source\PSoC5/Surtidor_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/Surtidor_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/Surtidor_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/Surtidor_INT.c ****     #endif /* (CY_PSOC3) */
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 3


  82:Generated_Source\PSoC5/Surtidor_INT.c **** 
  83:Generated_Source\PSoC5/Surtidor_INT.c ****         do
  84:Generated_Source\PSoC5/Surtidor_INT.c ****         {
  85:Generated_Source\PSoC5/Surtidor_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/Surtidor_INT.c ****             readStatus = Surtidor_RXSTATUS_REG;
  34              		.loc 1 86 0
  35 0000 1D4B     		ldr	r3, .L7
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0004 DBB2     		uxtb	r3, r3
  38              	.LVL0:
  87:Generated_Source\PSoC5/Surtidor_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/Surtidor_INT.c ****             *  of the user code in Surtidor_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/Surtidor_INT.c ****             */
  90:Generated_Source\PSoC5/Surtidor_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/Surtidor_INT.c **** 
  92:Generated_Source\PSoC5/Surtidor_INT.c ****             if((readStatus & (Surtidor_RX_STS_BREAK | 
  39              		.loc 1 92 0
  40 0006 13F01E0F 		tst	r3, #30
  41 000a 05D0     		beq	.L2
  93:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/Surtidor_INT.c ****             {
  97:Generated_Source\PSoC5/Surtidor_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/Surtidor_INT.c ****                 Surtidor_errorStatus |= readStatus & ( Surtidor_RX_STS_BREAK | 
  42              		.loc 1 98 0
  43 000c 1B48     		ldr	r0, .L7+4
  44 000e 03F01E02 		and	r2, r3, #30
  45 0012 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
  46 0014 0A43     		orrs	r2, r2, r1
  47 0016 0270     		strb	r2, [r0]
  48              	.L2:
  49 0018 03F02003 		and	r3, r3, #32
  50              	.LVL1:
  99:Generated_Source\PSoC5/Surtidor_INT.c ****                                                             Surtidor_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/Surtidor_INT.c ****                                                             Surtidor_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/Surtidor_INT.c ****                                                             Surtidor_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/Surtidor_INT.c ****                 /* `#START Surtidor_RXISR_ERROR` */
 103:Generated_Source\PSoC5/Surtidor_INT.c **** 
 104:Generated_Source\PSoC5/Surtidor_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/Surtidor_INT.c ****                 
 106:Generated_Source\PSoC5/Surtidor_INT.c ****             #ifdef Surtidor_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/Surtidor_INT.c ****                 Surtidor_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/Surtidor_INT.c ****             #endif /* Surtidor_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/Surtidor_INT.c ****             }
 110:Generated_Source\PSoC5/Surtidor_INT.c ****             
 111:Generated_Source\PSoC5/Surtidor_INT.c ****             if((readStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u)
  51              		.loc 1 111 0
  52 001c 03F0FF02 		and	r2, r3, #255
  53 0020 33B3     		cbz	r3, .L3
 112:Generated_Source\PSoC5/Surtidor_INT.c ****             {
 113:Generated_Source\PSoC5/Surtidor_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/Surtidor_INT.c ****                 readData = Surtidor_RXDATA_REG;
  54              		.loc 1 114 0
  55 0022 174B     		ldr	r3, .L7+8
  56 0024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  57 0026 C9B2     		uxtb	r1, r1
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 4


  58              	.LVL2:
 115:Generated_Source\PSoC5/Surtidor_INT.c ****             #if (Surtidor_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/Surtidor_INT.c ****                 if(Surtidor_rxAddressMode == (uint8)Surtidor__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/Surtidor_INT.c ****                 {
 118:Generated_Source\PSoC5/Surtidor_INT.c ****                     if((readStatus & Surtidor_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/Surtidor_INT.c ****                     {
 120:Generated_Source\PSoC5/Surtidor_INT.c ****                         if ((readStatus & Surtidor_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/Surtidor_INT.c ****                         {
 122:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/Surtidor_INT.c ****                         }
 124:Generated_Source\PSoC5/Surtidor_INT.c ****                         else
 125:Generated_Source\PSoC5/Surtidor_INT.c ****                         {
 126:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/Surtidor_INT.c ****                         }
 128:Generated_Source\PSoC5/Surtidor_INT.c ****                     }
 129:Generated_Source\PSoC5/Surtidor_INT.c ****                     if(Surtidor_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/Surtidor_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/Surtidor_INT.c ****                         Surtidor_rxBuffer[Surtidor_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/Surtidor_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/Surtidor_INT.c ****                     }
 134:Generated_Source\PSoC5/Surtidor_INT.c ****                 }
 135:Generated_Source\PSoC5/Surtidor_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/Surtidor_INT.c ****                 {
 137:Generated_Source\PSoC5/Surtidor_INT.c ****                     Surtidor_rxBuffer[Surtidor_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/Surtidor_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/Surtidor_INT.c ****                 }
 140:Generated_Source\PSoC5/Surtidor_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/Surtidor_INT.c ****                 Surtidor_rxBuffer[Surtidor_rxBufferWrite] = readData;
  59              		.loc 1 141 0
  60 0028 164B     		ldr	r3, .L7+12
  61 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002c DBB2     		uxtb	r3, r3
  63 002e 1648     		ldr	r0, .L7+16
  64 0030 C154     		strb	r1, [r0, r3]
  65              	.LVL3:
 142:Generated_Source\PSoC5/Surtidor_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/Surtidor_INT.c ****             #endif /* (Surtidor_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/Surtidor_INT.c **** 
 145:Generated_Source\PSoC5/Surtidor_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/Surtidor_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/Surtidor_INT.c ****                 {
 148:Generated_Source\PSoC5/Surtidor_INT.c ****                     if(Surtidor_rxBufferLoopDetect != 0u)
  66              		.loc 1 148 0
  67 0032 164B     		ldr	r3, .L7+20
  68 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69 0036 13F0FF0F 		tst	r3, #255
  70 003a 02D0     		beq	.L4
 149:Generated_Source\PSoC5/Surtidor_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/Surtidor_INT.c ****                         Surtidor_rxBufferOverflow = 1u;
  71              		.loc 1 150 0
  72 003c 0121     		movs	r1, #1
  73              	.LVL4:
  74 003e 144B     		ldr	r3, .L7+24
  75 0040 1970     		strb	r1, [r3]
  76              	.L4:
 151:Generated_Source\PSoC5/Surtidor_INT.c ****                     }
 152:Generated_Source\PSoC5/Surtidor_INT.c ****                     /* Set next pointer. */
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 5


 153:Generated_Source\PSoC5/Surtidor_INT.c ****                     Surtidor_rxBufferWrite++;
  77              		.loc 1 153 0
  78 0042 1049     		ldr	r1, .L7+12
  79 0044 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  80 0046 0133     		adds	r3, r3, #1
  81 0048 DBB2     		uxtb	r3, r3
  82 004a 0B70     		strb	r3, [r1]
 154:Generated_Source\PSoC5/Surtidor_INT.c **** 
 155:Generated_Source\PSoC5/Surtidor_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/Surtidor_INT.c ****                     if(Surtidor_rxBufferWrite >= Surtidor_RX_BUFFER_SIZE)
  83              		.loc 1 156 0
  84 004c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  85 004e DBB2     		uxtb	r3, r3
  86 0050 FF2B     		cmp	r3, #255
  87 0052 02D1     		bne	.L5
 157:Generated_Source\PSoC5/Surtidor_INT.c ****                     {
 158:Generated_Source\PSoC5/Surtidor_INT.c ****                         Surtidor_rxBufferWrite = 0u;
  88              		.loc 1 158 0
  89 0054 0021     		movs	r1, #0
  90 0056 0B4B     		ldr	r3, .L7+12
  91 0058 1970     		strb	r1, [r3]
  92              	.L5:
 159:Generated_Source\PSoC5/Surtidor_INT.c ****                     }
 160:Generated_Source\PSoC5/Surtidor_INT.c **** 
 161:Generated_Source\PSoC5/Surtidor_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/Surtidor_INT.c ****                     if(Surtidor_rxBufferWrite == Surtidor_rxBufferRead)
  93              		.loc 1 162 0
  94 005a 0A4B     		ldr	r3, .L7+12
  95 005c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  96 005e C9B2     		uxtb	r1, r1
  97 0060 0C4B     		ldr	r3, .L7+28
  98 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  99 0064 DBB2     		uxtb	r3, r3
 100 0066 9942     		cmp	r1, r3
 101 0068 02D1     		bne	.L3
 163:Generated_Source\PSoC5/Surtidor_INT.c ****                     {
 164:Generated_Source\PSoC5/Surtidor_INT.c ****                         Surtidor_rxBufferLoopDetect = 1u;
 102              		.loc 1 164 0
 103 006a 0121     		movs	r1, #1
 104 006c 074B     		ldr	r3, .L7+20
 105 006e 1970     		strb	r1, [r3]
 106              	.LVL5:
 107              	.L3:
 165:Generated_Source\PSoC5/Surtidor_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/Surtidor_INT.c ****                         #if (Surtidor_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/Surtidor_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/Surtidor_INT.c ****                             Surtidor_RXSTATUS_MASK_REG  &= (uint8)~Surtidor_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/Surtidor_INT.c ****                             CyIntClearPending(Surtidor_RX_VECT_NUM);
 170:Generated_Source\PSoC5/Surtidor_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/Surtidor_INT.c ****                         #endif /* (Surtidor_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/Surtidor_INT.c ****                     }
 173:Generated_Source\PSoC5/Surtidor_INT.c ****                 }
 174:Generated_Source\PSoC5/Surtidor_INT.c ****             }
 175:Generated_Source\PSoC5/Surtidor_INT.c ****         }while((readStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u);
 108              		.loc 1 175 0
 109 0070 002A     		cmp	r2, #0
 110 0072 C5D1     		bne	.L6
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 6


 176:Generated_Source\PSoC5/Surtidor_INT.c **** 
 177:Generated_Source\PSoC5/Surtidor_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/Surtidor_INT.c ****         /* `#START Surtidor_RXISR_END` */
 179:Generated_Source\PSoC5/Surtidor_INT.c **** 
 180:Generated_Source\PSoC5/Surtidor_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/Surtidor_INT.c **** 
 182:Generated_Source\PSoC5/Surtidor_INT.c ****     #ifdef Surtidor_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/Surtidor_INT.c ****         Surtidor_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/Surtidor_INT.c ****     #endif /* Surtidor_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/Surtidor_INT.c **** 
 186:Generated_Source\PSoC5/Surtidor_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/Surtidor_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/Surtidor_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/Surtidor_INT.c ****     }
 111              		.loc 1 189 0
 112 0074 7047     		bx	lr
 113              	.L8:
 114 0076 00BF     		.align	2
 115              	.L7:
 116 0078 6A640040 		.word	1073767530
 117 007c 00000000 		.word	Surtidor_errorStatus
 118 0080 4A640040 		.word	1073767498
 119 0084 00000000 		.word	Surtidor_rxBufferWrite
 120 0088 00000000 		.word	Surtidor_rxBuffer
 121 008c 00000000 		.word	Surtidor_rxBufferLoopDetect
 122 0090 00000000 		.word	Surtidor_rxBufferOverflow
 123 0094 00000000 		.word	Surtidor_rxBufferRead
 124              		.cfi_endproc
 125              	.LFE0:
 126              		.size	Surtidor_RXISR, .-Surtidor_RXISR
 127              		.text
 128              	.Letext0:
 129              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 130              		.file 3 "Generated_Source\\PSoC5\\Surtidor.h"
 131              		.section	.debug_info,"",%progbits
 132              	.Ldebug_info0:
 133 0000 48010000 		.4byte	0x148
 134 0004 0400     		.2byte	0x4
 135 0006 00000000 		.4byte	.Ldebug_abbrev0
 136 000a 04       		.byte	0x4
 137 000b 01       		.uleb128 0x1
 138 000c 43000000 		.4byte	.LASF25
 139 0010 0C       		.byte	0xc
 140 0011 6A010000 		.4byte	.LASF26
 141 0015 D1000000 		.4byte	.LASF27
 142 0019 00000000 		.4byte	.Ldebug_ranges0+0
 143 001d 00000000 		.4byte	0
 144 0021 00000000 		.4byte	.Ldebug_line0
 145 0025 02       		.uleb128 0x2
 146 0026 01       		.byte	0x1
 147 0027 06       		.byte	0x6
 148 0028 E2010000 		.4byte	.LASF0
 149 002c 02       		.uleb128 0x2
 150 002d 01       		.byte	0x1
 151 002e 08       		.byte	0x8
 152 002f 90010000 		.4byte	.LASF1
 153 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 7


 154 0034 02       		.byte	0x2
 155 0035 05       		.byte	0x5
 156 0036 31020000 		.4byte	.LASF2
 157 003a 02       		.uleb128 0x2
 158 003b 02       		.byte	0x2
 159 003c 07       		.byte	0x7
 160 003d CF010000 		.4byte	.LASF3
 161 0041 02       		.uleb128 0x2
 162 0042 04       		.byte	0x4
 163 0043 05       		.byte	0x5
 164 0044 A3010000 		.4byte	.LASF4
 165 0048 02       		.uleb128 0x2
 166 0049 04       		.byte	0x4
 167 004a 07       		.byte	0x7
 168 004b 3B010000 		.4byte	.LASF5
 169 004f 02       		.uleb128 0x2
 170 0050 08       		.byte	0x8
 171 0051 05       		.byte	0x5
 172 0052 00000000 		.4byte	.LASF6
 173 0056 02       		.uleb128 0x2
 174 0057 08       		.byte	0x8
 175 0058 07       		.byte	0x7
 176 0059 4D010000 		.4byte	.LASF7
 177 005d 03       		.uleb128 0x3
 178 005e 04       		.byte	0x4
 179 005f 05       		.byte	0x5
 180 0060 696E7400 		.ascii	"int\000"
 181 0064 02       		.uleb128 0x2
 182 0065 04       		.byte	0x4
 183 0066 07       		.byte	0x7
 184 0067 0E000000 		.4byte	.LASF8
 185 006b 04       		.uleb128 0x4
 186 006c 35010000 		.4byte	.LASF12
 187 0070 02       		.byte	0x2
 188 0071 E401     		.2byte	0x1e4
 189 0073 2C000000 		.4byte	0x2c
 190 0077 02       		.uleb128 0x2
 191 0078 04       		.byte	0x4
 192 0079 04       		.byte	0x4
 193 007a 64010000 		.4byte	.LASF9
 194 007e 02       		.uleb128 0x2
 195 007f 08       		.byte	0x8
 196 0080 04       		.byte	0x4
 197 0081 C8010000 		.4byte	.LASF10
 198 0085 02       		.uleb128 0x2
 199 0086 01       		.byte	0x1
 200 0087 08       		.byte	0x8
 201 0088 9E010000 		.4byte	.LASF11
 202 008c 04       		.uleb128 0x4
 203 008d 3B020000 		.4byte	.LASF13
 204 0091 02       		.byte	0x2
 205 0092 8E02     		.2byte	0x28e
 206 0094 98000000 		.4byte	0x98
 207 0098 05       		.uleb128 0x5
 208 0099 6B000000 		.4byte	0x6b
 209 009d 02       		.uleb128 0x2
 210 009e 08       		.byte	0x8
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 8


 211 009f 04       		.byte	0x4
 212 00a0 25020000 		.4byte	.LASF14
 213 00a4 02       		.uleb128 0x2
 214 00a5 04       		.byte	0x4
 215 00a6 07       		.byte	0x7
 216 00a7 6F020000 		.4byte	.LASF15
 217 00ab 06       		.uleb128 0x6
 218 00ac 57020000 		.4byte	.LASF28
 219 00b0 01       		.byte	0x1
 220 00b1 3B       		.byte	0x3b
 221 00b2 00000000 		.4byte	.LFB0
 222 00b6 98000000 		.4byte	.LFE0-.LFB0
 223 00ba 01       		.uleb128 0x1
 224 00bb 9C       		.byte	0x9c
 225 00bc EE000000 		.4byte	0xee
 226 00c0 07       		.uleb128 0x7
 227 00c1 66020000 		.4byte	.LASF16
 228 00c5 01       		.byte	0x1
 229 00c6 3D       		.byte	0x3d
 230 00c7 6B000000 		.4byte	0x6b
 231 00cb 00000000 		.4byte	.LLST0
 232 00cf 07       		.uleb128 0x7
 233 00d0 08020000 		.4byte	.LASF17
 234 00d4 01       		.byte	0x1
 235 00d5 3E       		.byte	0x3e
 236 00d6 6B000000 		.4byte	0x6b
 237 00da 1E000000 		.4byte	.LLST1
 238 00de 07       		.uleb128 0x7
 239 00df 1B000000 		.4byte	.LASF18
 240 00e3 01       		.byte	0x1
 241 00e4 3F       		.byte	0x3f
 242 00e5 6B000000 		.4byte	0x6b
 243 00e9 31000000 		.4byte	.LLST2
 244 00ed 00       		.byte	0
 245 00ee 08       		.uleb128 0x8
 246 00ef 78020000 		.4byte	.LASF19
 247 00f3 03       		.byte	0x3
 248 00f4 3D01     		.2byte	0x13d
 249 00f6 6B000000 		.4byte	0x6b
 250 00fa 09       		.uleb128 0x9
 251 00fb 98000000 		.4byte	0x98
 252 00ff 0A010000 		.4byte	0x10a
 253 0103 0A       		.uleb128 0xa
 254 0104 A4000000 		.4byte	0xa4
 255 0108 FE       		.byte	0xfe
 256 0109 00       		.byte	0
 257 010a 08       		.uleb128 0x8
 258 010b 13020000 		.4byte	.LASF20
 259 010f 03       		.byte	0x3
 260 0110 3E01     		.2byte	0x13e
 261 0112 16010000 		.4byte	0x116
 262 0116 05       		.uleb128 0x5
 263 0117 FA000000 		.4byte	0xfa
 264 011b 08       		.uleb128 0x8
 265 011c 2D000000 		.4byte	.LASF21
 266 0120 03       		.byte	0x3
 267 0121 3F01     		.2byte	0x13f
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 9


 268 0123 98000000 		.4byte	0x98
 269 0127 08       		.uleb128 0x8
 270 0128 40020000 		.4byte	.LASF22
 271 012c 03       		.byte	0x3
 272 012d 4001     		.2byte	0x140
 273 012f 98000000 		.4byte	0x98
 274 0133 08       		.uleb128 0x8
 275 0134 AC010000 		.4byte	.LASF23
 276 0138 03       		.byte	0x3
 277 0139 4101     		.2byte	0x141
 278 013b 98000000 		.4byte	0x98
 279 013f 08       		.uleb128 0x8
 280 0140 EE010000 		.4byte	.LASF24
 281 0144 03       		.byte	0x3
 282 0145 4201     		.2byte	0x142
 283 0147 98000000 		.4byte	0x98
 284 014b 00       		.byte	0
 285              		.section	.debug_abbrev,"",%progbits
 286              	.Ldebug_abbrev0:
 287 0000 01       		.uleb128 0x1
 288 0001 11       		.uleb128 0x11
 289 0002 01       		.byte	0x1
 290 0003 25       		.uleb128 0x25
 291 0004 0E       		.uleb128 0xe
 292 0005 13       		.uleb128 0x13
 293 0006 0B       		.uleb128 0xb
 294 0007 03       		.uleb128 0x3
 295 0008 0E       		.uleb128 0xe
 296 0009 1B       		.uleb128 0x1b
 297 000a 0E       		.uleb128 0xe
 298 000b 55       		.uleb128 0x55
 299 000c 17       		.uleb128 0x17
 300 000d 11       		.uleb128 0x11
 301 000e 01       		.uleb128 0x1
 302 000f 10       		.uleb128 0x10
 303 0010 17       		.uleb128 0x17
 304 0011 00       		.byte	0
 305 0012 00       		.byte	0
 306 0013 02       		.uleb128 0x2
 307 0014 24       		.uleb128 0x24
 308 0015 00       		.byte	0
 309 0016 0B       		.uleb128 0xb
 310 0017 0B       		.uleb128 0xb
 311 0018 3E       		.uleb128 0x3e
 312 0019 0B       		.uleb128 0xb
 313 001a 03       		.uleb128 0x3
 314 001b 0E       		.uleb128 0xe
 315 001c 00       		.byte	0
 316 001d 00       		.byte	0
 317 001e 03       		.uleb128 0x3
 318 001f 24       		.uleb128 0x24
 319 0020 00       		.byte	0
 320 0021 0B       		.uleb128 0xb
 321 0022 0B       		.uleb128 0xb
 322 0023 3E       		.uleb128 0x3e
 323 0024 0B       		.uleb128 0xb
 324 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 10


 325 0026 08       		.uleb128 0x8
 326 0027 00       		.byte	0
 327 0028 00       		.byte	0
 328 0029 04       		.uleb128 0x4
 329 002a 16       		.uleb128 0x16
 330 002b 00       		.byte	0
 331 002c 03       		.uleb128 0x3
 332 002d 0E       		.uleb128 0xe
 333 002e 3A       		.uleb128 0x3a
 334 002f 0B       		.uleb128 0xb
 335 0030 3B       		.uleb128 0x3b
 336 0031 05       		.uleb128 0x5
 337 0032 49       		.uleb128 0x49
 338 0033 13       		.uleb128 0x13
 339 0034 00       		.byte	0
 340 0035 00       		.byte	0
 341 0036 05       		.uleb128 0x5
 342 0037 35       		.uleb128 0x35
 343 0038 00       		.byte	0
 344 0039 49       		.uleb128 0x49
 345 003a 13       		.uleb128 0x13
 346 003b 00       		.byte	0
 347 003c 00       		.byte	0
 348 003d 06       		.uleb128 0x6
 349 003e 2E       		.uleb128 0x2e
 350 003f 01       		.byte	0x1
 351 0040 3F       		.uleb128 0x3f
 352 0041 19       		.uleb128 0x19
 353 0042 03       		.uleb128 0x3
 354 0043 0E       		.uleb128 0xe
 355 0044 3A       		.uleb128 0x3a
 356 0045 0B       		.uleb128 0xb
 357 0046 3B       		.uleb128 0x3b
 358 0047 0B       		.uleb128 0xb
 359 0048 27       		.uleb128 0x27
 360 0049 19       		.uleb128 0x19
 361 004a 11       		.uleb128 0x11
 362 004b 01       		.uleb128 0x1
 363 004c 12       		.uleb128 0x12
 364 004d 06       		.uleb128 0x6
 365 004e 40       		.uleb128 0x40
 366 004f 18       		.uleb128 0x18
 367 0050 9742     		.uleb128 0x2117
 368 0052 19       		.uleb128 0x19
 369 0053 01       		.uleb128 0x1
 370 0054 13       		.uleb128 0x13
 371 0055 00       		.byte	0
 372 0056 00       		.byte	0
 373 0057 07       		.uleb128 0x7
 374 0058 34       		.uleb128 0x34
 375 0059 00       		.byte	0
 376 005a 03       		.uleb128 0x3
 377 005b 0E       		.uleb128 0xe
 378 005c 3A       		.uleb128 0x3a
 379 005d 0B       		.uleb128 0xb
 380 005e 3B       		.uleb128 0x3b
 381 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 11


 382 0060 49       		.uleb128 0x49
 383 0061 13       		.uleb128 0x13
 384 0062 02       		.uleb128 0x2
 385 0063 17       		.uleb128 0x17
 386 0064 00       		.byte	0
 387 0065 00       		.byte	0
 388 0066 08       		.uleb128 0x8
 389 0067 34       		.uleb128 0x34
 390 0068 00       		.byte	0
 391 0069 03       		.uleb128 0x3
 392 006a 0E       		.uleb128 0xe
 393 006b 3A       		.uleb128 0x3a
 394 006c 0B       		.uleb128 0xb
 395 006d 3B       		.uleb128 0x3b
 396 006e 05       		.uleb128 0x5
 397 006f 49       		.uleb128 0x49
 398 0070 13       		.uleb128 0x13
 399 0071 3F       		.uleb128 0x3f
 400 0072 19       		.uleb128 0x19
 401 0073 3C       		.uleb128 0x3c
 402 0074 19       		.uleb128 0x19
 403 0075 00       		.byte	0
 404 0076 00       		.byte	0
 405 0077 09       		.uleb128 0x9
 406 0078 01       		.uleb128 0x1
 407 0079 01       		.byte	0x1
 408 007a 49       		.uleb128 0x49
 409 007b 13       		.uleb128 0x13
 410 007c 01       		.uleb128 0x1
 411 007d 13       		.uleb128 0x13
 412 007e 00       		.byte	0
 413 007f 00       		.byte	0
 414 0080 0A       		.uleb128 0xa
 415 0081 21       		.uleb128 0x21
 416 0082 00       		.byte	0
 417 0083 49       		.uleb128 0x49
 418 0084 13       		.uleb128 0x13
 419 0085 2F       		.uleb128 0x2f
 420 0086 0B       		.uleb128 0xb
 421 0087 00       		.byte	0
 422 0088 00       		.byte	0
 423 0089 00       		.byte	0
 424              		.section	.debug_loc,"",%progbits
 425              	.Ldebug_loc0:
 426              	.LLST0:
 427 0000 06000000 		.4byte	.LVL0
 428 0004 1C000000 		.4byte	.LVL1
 429 0008 0100     		.2byte	0x1
 430 000a 53       		.byte	0x53
 431 000b 28000000 		.4byte	.LVL2
 432 000f 3E000000 		.4byte	.LVL4
 433 0013 0100     		.2byte	0x1
 434 0015 51       		.byte	0x51
 435 0016 00000000 		.4byte	0
 436 001a 00000000 		.4byte	0
 437              	.LLST1:
 438 001e 06000000 		.4byte	.LVL0
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 12


 439 0022 1C000000 		.4byte	.LVL1
 440 0026 0100     		.2byte	0x1
 441 0028 53       		.byte	0x53
 442 0029 00000000 		.4byte	0
 443 002d 00000000 		.4byte	0
 444              	.LLST2:
 445 0031 32000000 		.4byte	.LVL3
 446 0035 70000000 		.4byte	.LVL5
 447 0039 0200     		.2byte	0x2
 448 003b 31       		.byte	0x31
 449 003c 9F       		.byte	0x9f
 450 003d 00000000 		.4byte	0
 451 0041 00000000 		.4byte	0
 452              		.section	.debug_aranges,"",%progbits
 453 0000 1C000000 		.4byte	0x1c
 454 0004 0200     		.2byte	0x2
 455 0006 00000000 		.4byte	.Ldebug_info0
 456 000a 04       		.byte	0x4
 457 000b 00       		.byte	0
 458 000c 0000     		.2byte	0
 459 000e 0000     		.2byte	0
 460 0010 00000000 		.4byte	.LFB0
 461 0014 98000000 		.4byte	.LFE0-.LFB0
 462 0018 00000000 		.4byte	0
 463 001c 00000000 		.4byte	0
 464              		.section	.debug_ranges,"",%progbits
 465              	.Ldebug_ranges0:
 466 0000 00000000 		.4byte	.LFB0
 467 0004 98000000 		.4byte	.LFE0
 468 0008 00000000 		.4byte	0
 469 000c 00000000 		.4byte	0
 470              		.section	.debug_line,"",%progbits
 471              	.Ldebug_line0:
 472 0000 85000000 		.section	.debug_str,"MS",%progbits,1
 472      02005700 
 472      00000201 
 472      FB0E0D00 
 472      01010101 
 473              	.LASF6:
 474 0000 6C6F6E67 		.ascii	"long long int\000"
 474      206C6F6E 
 474      6720696E 
 474      7400
 475              	.LASF8:
 476 000e 756E7369 		.ascii	"unsigned int\000"
 476      676E6564 
 476      20696E74 
 476      00
 477              	.LASF18:
 478 001b 696E6372 		.ascii	"increment_pointer\000"
 478      656D656E 
 478      745F706F 
 478      696E7465 
 478      7200
 479              	.LASF21:
 480 002d 53757274 		.ascii	"Surtidor_rxBufferRead\000"
 480      69646F72 
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 13


 480      5F727842 
 480      75666665 
 480      72526561 
 481              	.LASF25:
 482 0043 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 482      43313120 
 482      352E342E 
 482      31203230 
 482      31363036 
 483 0076 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 483      20726576 
 483      6973696F 
 483      6E203233 
 483      37373135 
 484 00a9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 484      66756E63 
 484      74696F6E 
 484      2D736563 
 484      74696F6E 
 485              	.LASF27:
 486 00d1 433A5C55 		.ascii	"C:\\Users\\leo40\\OneDrive\\Empresa\\Proyectos\\Ora"
 486      73657273 
 486      5C6C656F 
 486      34305C4F 
 486      6E654472 
 487 00fe 6E67655F 		.ascii	"nge_Pi\\Carro_Taller\\Prueba_USB\\V1.0\\FC_Impresio"
 487      50695C43 
 487      6172726F 
 487      5F54616C 
 487      6C65725C 
 488 012d 6E2E6379 		.ascii	"n.cydsn\000"
 488      64736E00 
 489              	.LASF12:
 490 0135 75696E74 		.ascii	"uint8\000"
 490      3800
 491              	.LASF5:
 492 013b 6C6F6E67 		.ascii	"long unsigned int\000"
 492      20756E73 
 492      69676E65 
 492      6420696E 
 492      7400
 493              	.LASF7:
 494 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 494      206C6F6E 
 494      6720756E 
 494      7369676E 
 494      65642069 
 495              	.LASF9:
 496 0164 666C6F61 		.ascii	"float\000"
 496      7400
 497              	.LASF26:
 498 016a 47656E65 		.ascii	"Generated_Source\\PSoC5\\Surtidor_INT.c\000"
 498      72617465 
 498      645F536F 
 498      75726365 
 498      5C50536F 
 499              	.LASF1:
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 14


 500 0190 756E7369 		.ascii	"unsigned char\000"
 500      676E6564 
 500      20636861 
 500      7200
 501              	.LASF11:
 502 019e 63686172 		.ascii	"char\000"
 502      00
 503              	.LASF4:
 504 01a3 6C6F6E67 		.ascii	"long int\000"
 504      20696E74 
 504      00
 505              	.LASF23:
 506 01ac 53757274 		.ascii	"Surtidor_rxBufferLoopDetect\000"
 506      69646F72 
 506      5F727842 
 506      75666665 
 506      724C6F6F 
 507              	.LASF10:
 508 01c8 646F7562 		.ascii	"double\000"
 508      6C6500
 509              	.LASF3:
 510 01cf 73686F72 		.ascii	"short unsigned int\000"
 510      7420756E 
 510      7369676E 
 510      65642069 
 510      6E7400
 511              	.LASF0:
 512 01e2 7369676E 		.ascii	"signed char\000"
 512      65642063 
 512      68617200 
 513              	.LASF24:
 514 01ee 53757274 		.ascii	"Surtidor_rxBufferOverflow\000"
 514      69646F72 
 514      5F727842 
 514      75666665 
 514      724F7665 
 515              	.LASF17:
 516 0208 72656164 		.ascii	"readStatus\000"
 516      53746174 
 516      757300
 517              	.LASF20:
 518 0213 53757274 		.ascii	"Surtidor_rxBuffer\000"
 518      69646F72 
 518      5F727842 
 518      75666665 
 518      7200
 519              	.LASF14:
 520 0225 6C6F6E67 		.ascii	"long double\000"
 520      20646F75 
 520      626C6500 
 521              	.LASF2:
 522 0231 73686F72 		.ascii	"short int\000"
 522      7420696E 
 522      7400
 523              	.LASF13:
 524 023b 72656738 		.ascii	"reg8\000"
 524      00
ARM GAS  C:\Users\leo40\AppData\Local\Temp\cc7FknS8.s 			page 15


 525              	.LASF22:
 526 0240 53757274 		.ascii	"Surtidor_rxBufferWrite\000"
 526      69646F72 
 526      5F727842 
 526      75666665 
 526      72577269 
 527              	.LASF28:
 528 0257 53757274 		.ascii	"Surtidor_RXISR\000"
 528      69646F72 
 528      5F525849 
 528      535200
 529              	.LASF16:
 530 0266 72656164 		.ascii	"readData\000"
 530      44617461 
 530      00
 531              	.LASF15:
 532 026f 73697A65 		.ascii	"sizetype\000"
 532      74797065 
 532      00
 533              	.LASF19:
 534 0278 53757274 		.ascii	"Surtidor_errorStatus\000"
 534      69646F72 
 534      5F657272 
 534      6F725374 
 534      61747573 
 535              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
